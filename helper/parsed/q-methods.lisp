(defparameter *q-methods* '(
  (("QAbstractAnimation" . "QObject")
   "new QAbstractAnimation ( QObject *  = 0 )"
   "int currentLoop () const"
   "int currentLoopTime () const"
   "int currentTime () const"
   "Direction direction () const"
   "virtual int duration () const = 0"
   "QAnimationGroup * group () const"
   "int loopCount () const"
   "void setDirection ( Direction )"
   "void setLoopCount ( int )"
   "State state () const"
   "int totalDuration () const")
  (("QAbstractButton" . "QWidget")
   "new QAbstractButton ( QWidget *  = 0 )"
   "bool autoExclusive () const"
   "bool autoRepeat () const"
   "int autoRepeatDelay () const"
   "int autoRepeatInterval () const"
   "QButtonGroup * group () const"
   "QIcon icon () const"
   "QSize iconSize () const"
   "bool isCheckable () const"
   "bool isChecked () const"
   "bool isDown () const"
   "void setAutoExclusive ( bool )"
   "void setAutoRepeat ( bool )"
   "void setAutoRepeatDelay ( int )"
   "void setAutoRepeatInterval ( int )"
   "void setCheckable ( bool )"
   "void setDown ( bool )"
   "void setIcon ( const QIcon &  )"
   "void setShortcut ( const QKeySequence &  )"
   "void setText ( const QString &  )"
   "QKeySequence shortcut () const"
   "QString text () const")
  (("QAbstractItemDelegate" . "QObject")
   "new QAbstractItemDelegate ( QObject *  = 0 )"
   "virtual QWidget * createEditor ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void destroyEditor ( QWidget *  , const QModelIndex &  ) const"
   "virtual bool editorEvent ( QEvent *  , QAbstractItemModel *  , const QStyleOptionViewItem &  , const QModelIndex &  )"
   "virtual bool helpEvent ( QHelpEvent *  , QAbstractItemView *  , const QStyleOptionViewItem &  , const QModelIndex &  )"
   "virtual void paint ( QPainter *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const = 0"
   "virtual void setEditorData ( QWidget *  , const QModelIndex &  ) const"
   "virtual void setModelData ( QWidget *  , QAbstractItemModel *  , const QModelIndex &  ) const"
   "virtual QSize sizeHint ( const QStyleOptionViewItem &  , const QModelIndex &  ) const = 0"
   "virtual void updateEditorGeometry ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const")
  (("QAbstractItemModel" . "QObject")
   "new QAbstractItemModel ( QObject *  = 0 )"
   "virtual QModelIndex buddy ( const QModelIndex &  ) const"
   "virtual bool canDropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  ) const"
   "virtual bool canFetchMore ( const QModelIndex &  ) const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const = 0"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const = 0"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual void fetchMore ( const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool hasChildren ( const QModelIndex &  = QModelIndex() ) const"
   "bool hasIndex ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const = 0"
   "bool insertColumn ( int , const QModelIndex &  = QModelIndex() )"
   "virtual bool insertColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "bool insertRow ( int , const QModelIndex &  = QModelIndex() )"
   "virtual bool insertRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual QModelIndexList match ( const QModelIndex &  , int , const QVariant &  , int = 1 , Qt::MatchFlags = Qt::MatchFlags( Qt::MatchStartsWith | Qt::MatchWrap ) ) const"
   "virtual QMimeData * mimeData ( const QModelIndexList &  ) const"
   "virtual QStringList mimeTypes () const"
   "bool moveColumn ( const QModelIndex &  , int , const QModelIndex &  , int )"
   "virtual bool moveColumns ( const QModelIndex &  , int , int , const QModelIndex &  , int )"
   "bool moveRow ( const QModelIndex &  , int , const QModelIndex &  , int )"
   "virtual bool moveRows ( const QModelIndex &  , int , int , const QModelIndex &  , int )"
   "virtual QModelIndex parent ( const QModelIndex &  ) const = 0"
   "bool removeColumn ( int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "bool removeRow ( int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual QHashIntQByteArray roleNames () const"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const = 0"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual bool setHeaderData ( int , Qt::Orientation , const QVariant &  , int = Qt::EditRole )"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual QSize span ( const QModelIndex &  ) const"
   "virtual Qt::DropActions supportedDragActions () const"
   "virtual Qt::DropActions supportedDropActions () const"
   "protected void beginInsertColumns ( const QModelIndex &  , int , int )"
   "protected void beginInsertRows ( const QModelIndex &  , int , int )"
   "protected bool beginMoveColumns ( const QModelIndex &  , int , int , const QModelIndex &  , int )"
   "protected bool beginMoveRows ( const QModelIndex &  , int , int , const QModelIndex &  , int )"
   "protected void beginRemoveColumns ( const QModelIndex &  , int , int )"
   "protected void beginRemoveRows ( const QModelIndex &  , int , int )"
   "protected void beginResetModel ()"
   "protected void changePersistentIndex ( const QModelIndex &  , const QModelIndex &  )"
   "protected void changePersistentIndexList ( const QModelIndexList &  , const QModelIndexList &  )"
   "protected void endInsertColumns ()"
   "protected void endInsertRows ()"
   "protected void endMoveColumns ()"
   "protected void endMoveRows ()"
   "protected void endRemoveColumns ()"
   "protected void endRemoveRows ()"
   "protected void endResetModel ()"
   "protected QModelIndexList persistentIndexList () const")
  (("QAbstractItemView" . "QAbstractScrollArea")
   "new QAbstractItemView ( QWidget *  = 0 )"
   "bool alternatingRowColors () const"
   "int autoScrollMargin () const"
   "void closePersistentEditor ( const QModelIndex &  )"
   "QModelIndex currentIndex () const"
   "Qt::DropAction defaultDropAction () const"
   "DragDropMode dragDropMode () const"
   "bool dragDropOverwriteMode () const"
   "bool dragEnabled () const"
   "EditTriggers editTriggers () const"
   "bool hasAutoScroll () const"
   "ScrollMode horizontalScrollMode () const"
   "QSize iconSize () const"
   "virtual QModelIndex indexAt ( const QPoint &  ) const = 0"
   "QWidget * indexWidget ( const QModelIndex &  ) const"
   "QAbstractItemDelegate * itemDelegate () const"
   "QAbstractItemDelegate * itemDelegate ( const QModelIndex &  ) const"
   "QAbstractItemDelegate * itemDelegateForColumn ( int ) const"
   "QAbstractItemDelegate * itemDelegateForRow ( int ) const"
   "virtual void keyboardSearch ( const QString &  )"
   "QAbstractItemModel * model () const"
   "void openPersistentEditor ( const QModelIndex &  )"
   "QModelIndex rootIndex () const"
   "virtual void scrollTo ( const QModelIndex &  , ScrollHint = EnsureVisible ) = 0"
   "QAbstractItemView::SelectionBehavior selectionBehavior () const"
   "QAbstractItemView::SelectionMode selectionMode () const"
   "QItemSelectionModel * selectionModel () const"
   "void setAlternatingRowColors ( bool )"
   "void setAutoScroll ( bool )"
   "void setAutoScrollMargin ( int )"
   "void setDefaultDropAction ( Qt::DropAction )"
   "void setDragDropMode ( DragDropMode )"
   "void setDragDropOverwriteMode ( bool )"
   "void setDragEnabled ( bool )"
   "void setDropIndicatorShown ( bool )"
   "void setEditTriggers ( EditTriggers )"
   "void setHorizontalScrollMode ( ScrollMode )"
   "void setIconSize ( const QSize &  )"
   "void setIndexWidget ( const QModelIndex &  , QWidget *  )"
   "void setItemDelegate ( QAbstractItemDelegate *  )"
   "void setItemDelegateForColumn ( int , QAbstractItemDelegate *  )"
   "void setItemDelegateForRow ( int , QAbstractItemDelegate *  )"
   "virtual void setModel ( QAbstractItemModel *  )"
   "void setSelectionBehavior ( QAbstractItemView::SelectionBehavior )"
   "void setSelectionMode ( QAbstractItemView::SelectionMode )"
   "virtual void setSelectionModel ( QItemSelectionModel *  )"
   "void setTabKeyNavigation ( bool )"
   "void setTextElideMode ( Qt::TextElideMode )"
   "void setVerticalScrollMode ( ScrollMode )"
   "bool showDropIndicator () const"
   "virtual int sizeHintForColumn ( int ) const"
   "QSize sizeHintForIndex ( const QModelIndex &  ) const"
   "virtual int sizeHintForRow ( int ) const"
   "bool tabKeyNavigation () const"
   "Qt::TextElideMode textElideMode () const"
   "ScrollMode verticalScrollMode () const"
   "virtual QRect visualRect ( const QModelIndex &  ) const = 0"
   "protected QPoint dirtyRegionOffset () const"
   "protected DropIndicatorPosition dropIndicatorPosition () const"
   "protected void executeDelayedItemsLayout ()"
   "protected void scheduleDelayedItemsLayout ()"
   "protected void scrollDirtyRegion ( int , int )"
   "protected void setDirtyRegion ( const QRegion &  )"
   "protected void setState ( State )"
   "protected State state () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const")
  (("QAbstractListModel" . "QAbstractItemModel")
   "new QAbstractListModel ( QObject *  = 0 )"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual QModelIndex index ( int , int = 0 , const QModelIndex &  = QModelIndex() ) const"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const")
  (("QAbstractNetworkCache" . "QObject")
   "virtual qint64 cacheSize () const = 0"
   "virtual QNetworkCacheMetaData metaData ( const QUrl &  ) = 0"
   "virtual bool remove ( const QUrl &  ) = 0"
   "virtual void updateMetaData ( const QNetworkCacheMetaData &  ) = 0")
  (("QAbstractPrintDialog" . "QDialog")
   "new QAbstractPrintDialog ( QPrinter *  , QWidget *  = 0 )"
   "int fromPage () const"
   "int maxPage () const"
   "int minPage () const"
   "PrintRange printRange () const"
   "QPrinter * printer () const"
   "void setFromTo ( int , int )"
   "void setMinMax ( int , int )"
   "void setOptionTabs ( const QList<QWidget *> &  )"
   "void setPrintRange ( PrintRange )"
   "int toPage () const"
   "virtual int exec () = 0")
  (("QAbstractProxyModel" . "QAbstractItemModel")
   "new QAbstractProxyModel ( QObject *  = 0 )"
   "virtual QModelIndex mapFromSource ( const QModelIndex &  ) const = 0"
   "virtual QItemSelection mapSelectionFromSource ( const QItemSelection &  ) const"
   "virtual QItemSelection mapSelectionToSource ( const QItemSelection &  ) const"
   "virtual QModelIndex mapToSource ( const QModelIndex &  ) const = 0"
   "virtual void setSourceModel ( QAbstractItemModel *  )"
   "QAbstractItemModel * sourceModel () const"
   "virtual QModelIndex buddy ( const QModelIndex &  ) const"
   "virtual bool canDropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  ) const"
   "virtual bool canFetchMore ( const QModelIndex &  ) const"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual void fetchMore ( const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool hasChildren ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QMimeData * mimeData ( const QModelIndexList &  ) const"
   "virtual QStringList mimeTypes () const"
   "virtual void revert ()"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual bool setHeaderData ( int , Qt::Orientation , const QVariant &  , int = Qt::EditRole )"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual QSize span ( const QModelIndex &  ) const"
   "virtual bool submit ()"
   "virtual Qt::DropActions supportedDragActions () const"
   "virtual Qt::DropActions supportedDropActions () const")
  (("QAbstractScrollArea" . "QFrame")
   "new QAbstractScrollArea ( QWidget *  = 0 )"
   "void addScrollBarWidget ( QWidget *  , Qt::Alignment )"
   "QWidget * cornerWidget () const"
   "QScrollBar * horizontalScrollBar () const"
   "Qt::ScrollBarPolicy horizontalScrollBarPolicy () const"
   "QSize maximumViewportSize () const"
   "QWidgetList scrollBarWidgets ( Qt::Alignment )"
   "void setCornerWidget ( QWidget *  )"
   "void setHorizontalScrollBar ( QScrollBar *  )"
   "void setHorizontalScrollBarPolicy ( Qt::ScrollBarPolicy )"
   "void setSizeAdjustPolicy ( SizeAdjustPolicy )"
   "void setVerticalScrollBar ( QScrollBar *  )"
   "void setVerticalScrollBarPolicy ( Qt::ScrollBarPolicy )"
   "void setViewport ( QWidget *  )"
   "virtual void setupViewport ( QWidget *  )"
   "SizeAdjustPolicy sizeAdjustPolicy () const"
   "QScrollBar * verticalScrollBar () const"
   "Qt::ScrollBarPolicy verticalScrollBarPolicy () const"
   "QWidget * viewport () const"
   "protected void setViewportMargins ( int , int , int , int )"
   "protected void setViewportMargins ( const QMargins &  )"
   "protected QMargins viewportMargins () const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QAbstractSlider" . "QWidget")
   "new QAbstractSlider ( QWidget *  = 0 )"
   "bool hasTracking () const"
   "bool invertedAppearance () const"
   "bool invertedControls () const"
   "bool isSliderDown () const"
   "int maximum () const"
   "int minimum () const"
   "Qt::Orientation orientation () const"
   "int pageStep () const"
   "void setInvertedAppearance ( bool )"
   "void setInvertedControls ( bool )"
   "void setMaximum ( int )"
   "void setMinimum ( int )"
   "void setPageStep ( int )"
   "void setSingleStep ( int )"
   "void setSliderDown ( bool )"
   "void setSliderPosition ( int )"
   "void setTracking ( bool )"
   "int singleStep () const"
   "int sliderPosition () const"
   "void triggerAction ( SliderAction )"
   "int value () const"
   "protected SliderAction repeatAction () const"
   "protected void setRepeatAction ( SliderAction , int = 500 , int = 50 )")
  (("QAbstractSocket" . "QIODevice")
   "new QAbstractSocket ( SocketType , QObject *  )"
   "void abort ()"
   "bool bind ( const QHostAddress &  , quint16 = 0 , BindMode = DefaultForPlatform )"
   "bool bind ( quint16 = 0 , BindMode = DefaultForPlatform )"
   "virtual void connectToHost ( const QString &  , quint16 , OpenMode = ReadWrite , NetworkLayerProtocol = AnyIPProtocol )"
   "virtual void connectToHost ( const QHostAddress &  , quint16 , OpenMode = ReadWrite )"
   "virtual void disconnectFromHost ()"
   "SocketError error () const"
   "bool flush ()"
   "bool isValid () const"
   "QHostAddress localAddress () const"
   "quint16 localPort () const"
   "PauseModes pauseMode () const"
   "QHostAddress peerAddress () const"
   "QString peerName () const"
   "quint16 peerPort () const"
   "QNetworkProxy proxy () const"
   "qint64 readBufferSize () const"
   "virtual void resume ()"
   "void setPauseMode ( PauseModes )"
   "void setProxy ( const QNetworkProxy &  )"
   "virtual void setReadBufferSize ( qint64 )"
   "virtual void setSocketOption ( QAbstractSocket::SocketOption , const QVariant &  )"
   "virtual QVariant socketOption ( QAbstractSocket::SocketOption )"
   "SocketType socketType () const"
   "SocketState state () const"
   "virtual bool waitForConnected ( int = 30000 )"
   "virtual bool waitForDisconnected ( int = 30000 )"
   "protected void setLocalAddress ( const QHostAddress &  )"
   "protected void setLocalPort ( quint16 )"
   "protected void setPeerAddress ( const QHostAddress &  )"
   "protected void setPeerName ( const QString &  )"
   "protected void setPeerPort ( quint16 )"
   "protected void setSocketError ( SocketError )"
   "protected void setSocketState ( SocketState )"
   "virtual bool atEnd () const"
   "virtual qint64 bytesAvailable () const"
   "virtual qint64 bytesToWrite () const"
   "virtual bool canReadLine () const"
   "virtual void close ()"
   "virtual bool isSequential () const"
   "virtual bool waitForBytesWritten ( int = 30000 )"
   "virtual bool waitForReadyRead ( int = 30000 )")
  (("QAbstractSpinBox" . "QWidget")
   "new QAbstractSpinBox ( QWidget *  = 0 )"
   "Qt::Alignment alignment () const"
   "ButtonSymbols buttonSymbols () const"
   "CorrectionMode correctionMode () const"
   "virtual void fixup ( QString &  ) const"
   "bool hasAcceptableInput () const"
   "bool hasFrame () const"
   "void interpretText ()"
   "bool isAccelerated () const"
   "bool isGroupSeparatorShown () const"
   "bool isReadOnly () const"
   "bool keyboardTracking () const"
   "void setAccelerated ( bool )"
   "void setAlignment ( Qt::Alignment )"
   "void setButtonSymbols ( ButtonSymbols )"
   "void setCorrectionMode ( CorrectionMode )"
   "void setFrame ( bool )"
   "void setGroupSeparatorShown ( bool )"
   "void setKeyboardTracking ( bool )"
   "void setReadOnly ( bool )"
   "void setSpecialValueText ( const QString &  )"
   "void setWrapping ( bool )"
   "QString specialValueText () const"
   "virtual void stepBy ( int )"
   "QString text () const"
   "virtual QValidator::State validate ( QString &  , int &  ) const"
   "bool wrapping () const"
   "protected void initStyleOption ( QStyleOptionSpinBox *  ) const"
   "protected QLineEdit * lineEdit () const"
   "protected void setLineEdit ( QLineEdit *  )"
   "virtual bool event ( QEvent *  )"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QAbstractState" . "QObject")
   "bool active () const"
   "QStateMachine * machine () const"
   "QState * parentState () const")
  (("QAbstractTableModel" . "QAbstractItemModel")
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const")
  (("QAbstractTextDocumentLayout" . "QObject")
   "new QAbstractTextDocumentLayout ( QTextDocument *  )"
   "QString anchorAt ( const QPointF &  ) const"
   "virtual QRectF blockBoundingRect ( const QTextBlock &  ) const = 0"
   "QTextDocument * document () const"
   "virtual QSizeF documentSize () const = 0"
   "virtual void draw ( QPainter *  , const PaintContext &  ) = 0"
   "virtual QRectF frameBoundingRect ( QTextFrame *  ) const = 0"
   "virtual int hitTest ( const QPointF &  , Qt::HitTestAccuracy ) const = 0"
   "virtual int pageCount () const = 0"
   "QPaintDevice * paintDevice () const"
   "void setPaintDevice ( QPaintDevice *  )"
   "protected QTextCharFormat format ( int )")
  (("QAbstractTransition" . "QObject")
   "new QAbstractTransition ( QState *  = 0 )"
   "void addAnimation ( QAbstractAnimation *  )"
   "QList<QAbstractAnimation *> animations () const"
   "QStateMachine * machine () const"
   "void removeAnimation ( QAbstractAnimation *  )"
   "void setTargetState ( QAbstractState *  )"
   "void setTargetStates ( const QList<QAbstractState *> &  )"
   "void setTransitionType ( TransitionType )"
   "QState * sourceState () const"
   "QAbstractState * targetState () const"
   "QList<QAbstractState *> targetStates () const"
   "TransitionType transitionType () const")
  (("QAbstractVideoSurface" . "QObject")
   "Error error () const"
   "bool isActive () const"
   "virtual bool isFormatSupported ( const QVideoSurfaceFormat &  ) const"
   "QSize nativeResolution () const"
   "virtual QVideoSurfaceFormat nearestFormat ( const QVideoSurfaceFormat &  ) const"
   "virtual bool present ( const QVideoFrame &  ) = 0"
   "virtual bool start ( const QVideoSurfaceFormat &  )"
   "virtual void stop ()"
   "QVideoSurfaceFormat surfaceFormat () const"
   "protected void setError ( Error )"
   "protected void setNativeResolution ( const QSize &  )")
  (("QAction" . "QObject")
   "new QAction ( QObject *  )"
   "new QAction ( const QString &  , QObject *  )"
   "new QAction ( const QIcon &  , const QString &  , QObject *  )"
   "QActionGroup * actionGroup () const"
   "void activate ( ActionEvent )"
   "QList<QGraphicsWidget *> associatedGraphicsWidgets () const"
   "QList<QWidget *> associatedWidgets () const"
   "bool autoRepeat () const"
   "QVariant data () const"
   "QFont font () const"
   "QIcon icon () const"
   "QString iconText () const"
   "bool isCheckable () const"
   "bool isChecked () const"
   "bool isEnabled () const"
   "bool isIconVisibleInMenu () const"
   "bool isSeparator () const"
   "bool isVisible () const"
   "QMenu * menu () const"
   "MenuRole menuRole () const"
   "QWidget * parentWidget () const"
   "Priority priority () const"
   "void setActionGroup ( QActionGroup *  )"
   "void setAutoRepeat ( bool )"
   "void setCheckable ( bool )"
   "void setData ( const QVariant &  )"
   "void setFont ( const QFont &  )"
   "void setIcon ( const QIcon &  )"
   "void setIconText ( const QString &  )"
   "void setIconVisibleInMenu ( bool )"
   "void setMenu ( QMenu *  )"
   "void setMenuRole ( MenuRole )"
   "void setPriority ( Priority )"
   "void setSeparator ( bool )"
   "void setShortcut ( const QKeySequence &  )"
   "void setShortcutContext ( Qt::ShortcutContext )"
   "void setShortcuts ( const QList<QKeySequence> &  )"
   "void setShortcuts ( QKeySequence::StandardKey )"
   "void setStatusTip ( const QString &  )"
   "void setText ( const QString &  )"
   "void setToolTip ( const QString &  )"
   "void setWhatsThis ( const QString &  )"
   "QKeySequence shortcut () const"
   "Qt::ShortcutContext shortcutContext () const"
   "QList<QKeySequence> shortcuts () const"
   "bool showStatusText ( QWidget *  = 0 )"
   "QString statusTip () const"
   "QString text () const"
   "QString toolTip () const"
   "QString whatsThis () const")
  (("QActionGroup" . "QObject")
   "new QActionGroup ( QObject *  )"
   "QList<QAction *> actions () const"
   "QAction * addAction ( QAction *  )"
   "QAction * addAction ( const QString &  )"
   "QAction * addAction ( const QIcon &  , const QString &  )"
   "QAction * checkedAction () const"
   "bool isEnabled () const"
   "bool isExclusive () const"
   "bool isVisible () const"
   "void removeAction ( QAction *  )")
  (("QAnimationGroup" . "QAbstractAnimation")
   "new QAnimationGroup ( QObject *  = 0 )"
   "void addAnimation ( QAbstractAnimation *  )"
   "QAbstractAnimation * animationAt ( int ) const"
   "int animationCount () const"
   "void clear ()"
   "int indexOfAnimation ( QAbstractAnimation *  ) const"
   "void insertAnimation ( int , QAbstractAnimation *  )"
   "void removeAnimation ( QAbstractAnimation *  )"
   "QAbstractAnimation * takeAnimation ( int )")
  (("QApplication" . "QGuiApplication")
   "QString styleSheet () const"
   "virtual bool notify ( QObject *  , QEvent *  )"
   "static QWidget * activeModalWidget ()"
   "static QWidget * activePopupWidget ()"
   "static QWidget * activeWindow ()"
   "static void alert ( QWidget *  , int = 0 )"
   "static QWidgetList allWidgets ()"
   "static void beep ()"
   "static int colorSpec ()"
   "static int cursorFlashTime ()"
   "static QDesktopWidget * desktop ()"
   "static int doubleClickInterval ()"
   "static int exec ()"
   "static QWidget * focusWidget ()"
   "static QFont font ()"
   "static QFont font ( const QWidget *  )"
   "static QFont font ( const char *  )"
   "static QFontMetrics fontMetrics ()"
   "static QSize globalStrut ()"
   "static bool isEffectEnabled ( Qt::UIEffect )"
   "static int keyboardInputInterval ()"
   "static QPalette palette ( const QWidget *  )"
   "static QPalette palette ( const char *  )"
   "static void setActiveWindow ( QWidget *  )"
   "static void setColorSpec ( int )"
   "static void setCursorFlashTime ( int )"
   "static void setDoubleClickInterval ( int )"
   "static void setEffectEnabled ( Qt::UIEffect , bool = true )"
   "static void setFont ( const QFont &  , const char *  = 0 )"
   "static void setGlobalStrut ( const QSize & )"
   "static void setKeyboardInputInterval ( int )"
   "static void setPalette ( const QPalette &  , const char *  = 0 )"
   "static void setStartDragDistance ( int )"
   "static void setStartDragTime ( int )"
   "static void setStyle ( QStyle *  )"
   "static QStyle * setStyle ( const QString &  )"
   "static void setWheelScrollLines ( int )"
   "static void setWindowIcon ( const QIcon &  )"
   "static int startDragDistance ()"
   "static int startDragTime ()"
   "static QStyle * style ()"
   "static QWidget * topLevelAt ( const QPoint &  )"
   "static QWidget * topLevelAt ( int , int )"
   "static QWidgetList topLevelWidgets ()"
   "static int wheelScrollLines ()"
   "static QWidget * widgetAt ( const QPoint &  )"
   "static QWidget * widgetAt ( int , int )"
   "static QIcon windowIcon ()")
  (("QAudioOutput" . "QObject")
   "new QAudioOutput ( const QAudioFormat &  = QAudioFormat() , QObject *  = 0 )"
   "new QAudioOutput ( const QAudioDeviceInfo &  , const QAudioFormat &  = QAudioFormat() , QObject *  = 0 )"
   "int bufferSize () const"
   "int bytesFree () const"
   "QString category () const"
   "qint64 elapsedUSecs () const"
   "QAudio::Error error () const"
   "QAudioFormat format () const"
   "int notifyInterval () const"
   "int periodSize () const"
   "qint64 processedUSecs () const"
   "void reset ()"
   "void resume ()"
   "void setBufferSize ( int )"
   "void setCategory ( const QString &  )"
   "void setNotifyInterval ( int )"
   "void setVolume ( qreal )"
   "QAudio::State state () const"
   "void stop ()"
   "void suspend ()"
   "qreal volume () const")
  (("QAudioRecorder" . "QMediaRecorder")
   "new QAudioRecorder ( QObject *  = 0 )"
   "QString audioInput () const"
   "QString audioInputDescription ( const QString &  ) const"
   "QStringList audioInputs () const"
   "QString defaultAudioInput () const")
  (("QBoxLayout" . "QLayout")
   "new QBoxLayout ( Direction , QWidget *  = 0 )"
   "void addLayout ( QLayout *  , int = 0 )"
   "void addSpacerItem ( QSpacerItem *  )"
   "void addSpacing ( int )"
   "void addStretch ( int = 0 )"
   "void addStrut ( int )"
   "void addWidget ( QWidget *  , int = 0 , Qt::Alignment = 0 )"
   "Direction direction () const"
   "void insertItem ( int , QLayoutItem *  )"
   "void insertLayout ( int , QLayout *  , int = 0 )"
   "void insertSpacerItem ( int , QSpacerItem *  )"
   "void insertSpacing ( int , int )"
   "void insertStretch ( int , int = 0 )"
   "void insertWidget ( int , QWidget *  , int = 0 , Qt::Alignment = 0 )"
   "void setDirection ( Direction )"
   "void setSpacing ( int )"
   "void setStretch ( int , int )"
   "bool setStretchFactor ( QWidget *  , int )"
   "bool setStretchFactor ( QLayout *  , int )"
   "int spacing () const"
   "int stretch ( int ) const"
   "virtual void addItem ( QLayoutItem *  )"
   "virtual int count () const"
   "virtual Qt::Orientations expandingDirections () const"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual void invalidate ()"
   "virtual QLayoutItem * itemAt ( int ) const"
   "virtual QSize maximumSize () const"
   "virtual int minimumHeightForWidth ( int ) const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect &  )"
   "virtual QSize sizeHint () const"
   "virtual QLayoutItem * takeAt ( int )")
  (("QBuffer" . "QIODevice")
   "new QBuffer ( QObject *  = 0 )"
   "QByteArray & buffer ()"
   "const QByteArray & buffer () const"
   "const QByteArray & data () const"
   "void setData ( const QByteArray &  )"
   "void setData ( const char *  , int )"
   "virtual bool atEnd () const"
   "virtual bool canReadLine () const"
   "virtual void close ()"
   "virtual bool open ( OpenMode )"
   "virtual qint64 pos () const"
   "virtual bool seek ( qint64 )"
   "virtual qint64 size () const")
  (("QButtonGroup" . "QObject")
   "new QButtonGroup ( QObject *  = 0 )"
   "void addButton ( QAbstractButton *  , int = -1 )"
   "QAbstractButton * button ( int ) const"
   "QList<QAbstractButton *> buttons () const"
   "QAbstractButton * checkedButton () const"
   "int checkedId () const"
   "bool exclusive () const"
   "int id ( QAbstractButton *  ) const"
   "void removeButton ( QAbstractButton *  )"
   "void setExclusive ( bool )"
   "void setId ( QAbstractButton *  , int )")
  (("QCalendarWidget" . "QWidget")
   "new QCalendarWidget ( QWidget *  = 0 )"
   "int dateEditAcceptDelay () const"
   "QTextCharFormat dateTextFormat ( const QDate &  ) const"
   "Qt::DayOfWeek firstDayOfWeek () const"
   "QTextCharFormat headerTextFormat () const"
   "HorizontalHeaderFormat horizontalHeaderFormat () const"
   "bool isDateEditEnabled () const"
   "bool isGridVisible () const"
   "bool isNavigationBarVisible () const"
   "QDate maximumDate () const"
   "QDate minimumDate () const"
   "int monthShown () const"
   "QDate selectedDate () const"
   "SelectionMode selectionMode () const"
   "void setDateEditAcceptDelay ( int )"
   "void setDateEditEnabled ( bool )"
   "void setDateTextFormat ( const QDate &  , const QTextCharFormat &  )"
   "void setFirstDayOfWeek ( Qt::DayOfWeek )"
   "void setHeaderTextFormat ( const QTextCharFormat &  )"
   "void setHorizontalHeaderFormat ( HorizontalHeaderFormat )"
   "void setMaximumDate ( const QDate &  )"
   "void setMinimumDate ( const QDate &  )"
   "void setSelectionMode ( SelectionMode )"
   "void setVerticalHeaderFormat ( VerticalHeaderFormat )"
   "void setWeekdayTextFormat ( Qt::DayOfWeek , const QTextCharFormat &  )"
   "VerticalHeaderFormat verticalHeaderFormat () const"
   "QTextCharFormat weekdayTextFormat ( Qt::DayOfWeek ) const"
   "int yearShown () const"
   "protected void updateCell ( const QDate &  )"
   "protected void updateCells ()"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QCamera" . "QMediaObject")
   "new QCamera ( QObject *  = 0 )"
   "new QCamera ( const QByteArray &  , QObject *  = 0 )"
   "new QCamera ( const QCameraInfo &  , QObject *  = 0 )"
   "new QCamera ( QCamera::Position , QObject *  = 0 )"
   "CaptureModes captureMode () const"
   "Error error () const"
   "QString errorString () const"
   "QCameraExposure * exposure () const"
   "QCameraFocus * focus () const"
   "QCameraImageProcessing * imageProcessing () const"
   "bool isCaptureModeSupported ( CaptureModes ) const"
   "QCamera::LockStatus lockStatus () const"
   "QCamera::LockStatus lockStatus ( QCamera::LockType ) const"
   "QCamera::LockTypes requestedLocks () const"
   "void setViewfinder ( QVideoWidget *  )"
   "void setViewfinder ( QGraphicsVideoItem *  )"
   "void setViewfinder ( QAbstractVideoSurface *  )"
   "void setViewfinderSettings ( const QCameraViewfinderSettings &  )"
   "State state () const"
   "Status status () const"
   "QCamera::LockTypes supportedLocks () const"
   "QList<FrameRateRange> supportedViewfinderFrameRateRanges ( const QCameraViewfinderSettings &  = QCameraViewfinderSettings() ) const"
   "QList<QVideoFrame::PixelFormat> supportedViewfinderPixelFormats ( const QCameraViewfinderSettings &  = QCameraViewfinderSettings() ) const"
   "QList<QSize> supportedViewfinderResolutions ( const QCameraViewfinderSettings &  = QCameraViewfinderSettings() ) const"
   "QList<QCameraViewfinderSettings> supportedViewfinderSettings ( const QCameraViewfinderSettings &  = QCameraViewfinderSettings() ) const"
   "QCameraViewfinderSettings viewfinderSettings () const"
   "virtual QMultimedia::AvailabilityStatus availability () const")
  (("QCameraExposure" . "QObject")
   "qreal aperture () const"
   "qreal exposureCompensation () const"
   "ExposureMode exposureMode () const"
   "FlashModes flashMode () const"
   "bool isAvailable () const"
   "bool isExposureModeSupported ( ExposureMode ) const"
   "bool isFlashModeSupported ( FlashModes ) const"
   "bool isFlashReady () const"
   "bool isMeteringModeSupported ( MeteringMode ) const"
   "int isoSensitivity () const"
   "MeteringMode meteringMode () const"
   "qreal requestedAperture () const"
   "int requestedIsoSensitivity () const"
   "qreal requestedShutterSpeed () const"
   "void setSpotMeteringPoint ( const QPointF &  )"
   "qreal shutterSpeed () const"
   "QPointF spotMeteringPoint () const"
   "QList<qreal> supportedApertures ( bool *  = 0 ) const"
   "QList<int> supportedIsoSensitivities ( bool *  = 0 ) const"
   "QList<qreal> supportedShutterSpeeds ( bool *  = 0 ) const")
  (("QCameraFocus" . "QObject")
   "QPointF customFocusPoint () const"
   "qreal digitalZoom () const"
   "FocusModes focusMode () const"
   "FocusPointMode focusPointMode () const"
   "QCameraFocusZoneList focusZones () const"
   "bool isAvailable () const"
   "bool isFocusModeSupported ( FocusModes ) const"
   "bool isFocusPointModeSupported ( FocusPointMode ) const"
   "qreal maximumDigitalZoom () const"
   "qreal maximumOpticalZoom () const"
   "qreal opticalZoom () const"
   "void setCustomFocusPoint ( const QPointF &  )"
   "void setFocusMode ( FocusModes )"
   "void setFocusPointMode ( FocusPointMode )"
   "void zoomTo ( qreal , qreal )")
  (("QCameraImageCapture" . "QObject")
   "new QCameraImageCapture ( QMediaObject *  , QObject *  = 0 )"
   "QMultimedia::AvailabilityStatus availability () const"
   "QVideoFrame::PixelFormat bufferFormat () const"
   "CaptureDestinations captureDestination () const"
   "QImageEncoderSettings encodingSettings () const"
   "Error error () const"
   "QString errorString () const"
   "QString imageCodecDescription ( const QString &  ) const"
   "bool isAvailable () const"
   "bool isCaptureDestinationSupported ( CaptureDestinations ) const"
   "bool isReadyForCapture () const"
   "void setBufferFormat ( const QVideoFrame::PixelFormat )"
   "void setCaptureDestination ( CaptureDestinations )"
   "void setEncodingSettings ( const QImageEncoderSettings &  )"
   "QList<QVideoFrame::PixelFormat> supportedBufferFormats () const"
   "QStringList supportedImageCodecs () const"
   "QList<QSize> supportedResolutions ( const QImageEncoderSettings &  = QImageEncoderSettings() , bool *  = 0 ) const"
   "virtual QMediaObject * mediaObject () const")
  (("QCameraImageProcessing" . "QObject")
   "ColorFilter colorFilter () const"
   "qreal contrast () const"
   "qreal denoisingLevel () const"
   "bool isAvailable () const"
   "bool isColorFilterSupported ( ColorFilter ) const"
   "bool isWhiteBalanceModeSupported ( WhiteBalanceMode ) const"
   "qreal manualWhiteBalance () const"
   "qreal saturation () const"
   "void setColorFilter ( ColorFilter )"
   "void setContrast ( qreal )"
   "void setDenoisingLevel ( qreal )"
   "void setManualWhiteBalance ( qreal )"
   "void setSaturation ( qreal )"
   "void setSharpeningLevel ( qreal )"
   "void setWhiteBalanceMode ( WhiteBalanceMode )"
   "qreal sharpeningLevel () const"
   "WhiteBalanceMode whiteBalanceMode () const")
  (("QCameraViewfinder" . "QVideoWidget")
   "new QCameraViewfinder ( QWidget *  = 0 )"
   "QMediaObject * mediaObject () const"
   "protected bool setMediaObject ( QMediaObject *  )")
  (("QCheckBox" . "QAbstractButton")
   "new QCheckBox ( QWidget *  = 0 )"
   "new QCheckBox ( const QString &  , QWidget *  = 0 )"
   "Qt::CheckState checkState () const"
   "bool isTristate () const"
   "void setCheckState ( Qt::CheckState )"
   "void setTristate ( bool = true )"
   "protected void initStyleOption ( QStyleOptionButton *  ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QClipboard" . "QObject")
   "void clear ( Mode = Clipboard )"
   "QImage image ( Mode = Clipboard ) const"
   "const QMimeData * mimeData ( Mode = Clipboard ) const"
   "bool ownsClipboard () const"
   "bool ownsFindBuffer () const"
   "bool ownsSelection () const"
   "QPixmap pixmap ( Mode = Clipboard ) const"
   "void setImage ( const QImage &  , Mode = Clipboard )"
   "void setMimeData ( QMimeData *  , Mode = Clipboard )"
   "void setPixmap ( const QPixmap &  , Mode = Clipboard )"
   "void setText ( const QString &  , Mode = Clipboard )"
   "bool supportsFindBuffer () const"
   "bool supportsSelection () const"
   "QString text ( Mode = Clipboard ) const"
   "QString text ( QString &  , Mode = Clipboard ) const")
  (("QColorDialog" . "QDialog")
   "new QColorDialog ( QWidget *  = 0 )"
   "new QColorDialog ( const QColor &  , QWidget *  = 0 )"
   "QColor currentColor () const"
   "void open ( QObject *  , const char *  )"
   "ColorDialogOptions options () const"
   "QColor selectedColor () const"
   "void setCurrentColor ( const QColor &  )"
   "void setOption ( ColorDialogOption , bool = true )"
   "void setOptions ( ColorDialogOptions )"
   "bool testOption ( ColorDialogOption ) const"
   "virtual void setVisible ( bool )"
   "static QColor customColor ( int )"
   "static int customCount ()"
   "static QColor getColor ( const QColor &  = Qt::white , QWidget *  = 0 , const QString &  = QString() , ColorDialogOptions = 0 )"
   "static void setCustomColor ( int , QColor )"
   "static void setStandardColor ( int , QColor )"
   "static QColor standardColor ( int )")
  (("QColumnView" . "QAbstractItemView")
   "new QColumnView ( QWidget *  = 0 )"
   "QList<int> columnWidths () const"
   "QWidget * previewWidget () const"
   "bool resizeGripsVisible () const"
   "void setColumnWidths ( const QList<int> &  )"
   "void setPreviewWidget ( QWidget *  )"
   "void setResizeGripsVisible ( bool )"
   "protected void initializeColumn ( QAbstractItemView *  ) const"
   "virtual QModelIndex indexAt ( const QPoint &  ) const"
   "virtual void scrollTo ( const QModelIndex &  , ScrollHint = EnsureVisible )"
   "virtual void selectAll ()"
   "virtual void setModel ( QAbstractItemModel *  )"
   "virtual void setRootIndex ( const QModelIndex &  )"
   "virtual void setSelectionModel ( QItemSelectionModel *  )"
   "virtual QSize sizeHint () const"
   "virtual QRect visualRect ( const QModelIndex &  ) const")
  (("QComboBox" . "QWidget")
   "new QComboBox ( QWidget *  = 0 )"
   "void addItem ( const QString &  , const QVariant &  = QVariant() )"
   "void addItem ( const QIcon &  , const QString &  , const QVariant &  = QVariant() )"
   "void addItems ( const QStringList &  )"
   "QCompleter * completer () const"
   "int count () const"
   "QVariant currentData ( int = Qt::UserRole ) const"
   "int currentIndex () const"
   "QString currentText () const"
   "bool duplicatesEnabled () const"
   "int findData ( const QVariant &  , int = Qt::UserRole , Qt::MatchFlags = static_cast<Qt::MatchFlags> ( Qt::MatchExactly | Qt::MatchCaseSensitive ) ) const"
   "int findText ( const QString &  , Qt::MatchFlags = static_cast<Qt::MatchFlags> ( Qt::MatchExactly | Qt::MatchCaseSensitive ) ) const"
   "bool hasFrame () const"
   "virtual void hidePopup ()"
   "QSize iconSize () const"
   "void insertItem ( int , const QString &  , const QVariant &  = QVariant() )"
   "void insertItem ( int , const QIcon &  , const QString &  , const QVariant &  = QVariant() )"
   "void insertItems ( int , const QStringList &  )"
   "InsertPolicy insertPolicy () const"
   "void insertSeparator ( int )"
   "bool isEditable () const"
   "QVariant itemData ( int , int = Qt::UserRole ) const"
   "QAbstractItemDelegate * itemDelegate () const"
   "QIcon itemIcon ( int ) const"
   "QString itemText ( int ) const"
   "QLineEdit * lineEdit () const"
   "int maxCount () const"
   "int maxVisibleItems () const"
   "int minimumContentsLength () const"
   "QAbstractItemModel * model () const"
   "int modelColumn () const"
   "void removeItem ( int )"
   "QModelIndex rootModelIndex () const"
   "void setCompleter ( QCompleter *  )"
   "void setDuplicatesEnabled ( bool )"
   "void setEditable ( bool )"
   "void setFrame ( bool )"
   "void setIconSize ( const QSize &  )"
   "void setInsertPolicy ( InsertPolicy )"
   "void setItemData ( int , const QVariant &  , int = Qt::UserRole )"
   "void setItemDelegate ( QAbstractItemDelegate *  )"
   "void setItemIcon ( int , const QIcon &  )"
   "void setItemText ( int , const QString &  )"
   "void setLineEdit ( QLineEdit *  )"
   "void setMaxCount ( int )"
   "void setMaxVisibleItems ( int )"
   "void setMinimumContentsLength ( int )"
   "void setModel ( QAbstractItemModel *  )"
   "void setModelColumn ( int )"
   "void setRootModelIndex ( const QModelIndex &  )"
   "void setSizeAdjustPolicy ( SizeAdjustPolicy )"
   "void setValidator ( const QValidator *  )"
   "void setView ( QAbstractItemView *  )"
   "virtual void showPopup ()"
   "SizeAdjustPolicy sizeAdjustPolicy () const"
   "const QValidator * validator () const"
   "QAbstractItemView * view () const"
   "protected void initStyleOption ( QStyleOptionComboBox *  ) const"
   "virtual bool event ( QEvent *  )"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QCommandLinkButton" . "QPushButton")
   "new QCommandLinkButton ( QWidget *  = 0 )"
   "new QCommandLinkButton ( const QString &  , QWidget *  = 0 )"
   "new QCommandLinkButton ( const QString &  , const QString &  , QWidget *  = 0 )"
   "QString description () const"
   "void setDescription ( const QString &  )")
  (("QCommonStyle" . "QStyle")
   "new QCommonStyle ()"
   "virtual void drawComplexControl ( ComplexControl , const QStyleOptionComplex *  , QPainter *  , const QWidget *  = 0 ) const"
   "virtual void drawControl ( ControlElement , const QStyleOption *  , QPainter *  , const QWidget *  = 0 ) const"
   "virtual void drawPrimitive ( PrimitiveElement , const QStyleOption *  , QPainter *  , const QWidget *  = 0 ) const"
   "virtual QPixmap generatedIconPixmap ( QIcon::Mode , const QPixmap &  , const QStyleOption *  ) const"
   "virtual SubControl hitTestComplexControl ( ComplexControl , const QStyleOptionComplex *  , const QPoint &  , const QWidget *  = 0 ) const"
   "virtual int layoutSpacing ( QSizePolicy::ControlType , QSizePolicy::ControlType , Qt::Orientation , const QStyleOption *  = 0 , const QWidget *  = 0 ) const"
   "virtual int pixelMetric ( PixelMetric , const QStyleOption *  = 0 , const QWidget *  = 0 ) const"
   "virtual void polish ( QPalette &  )"
   "virtual void polish ( QApplication *  )"
   "virtual void polish ( QWidget *  )"
   "virtual QSize sizeFromContents ( ContentsType , const QStyleOption *  , const QSize &  , const QWidget *  = 0 ) const"
   "virtual QPixmap standardPixmap ( StandardPixmap , const QStyleOption *  = 0 , const QWidget *  = 0 ) const"
   "virtual int styleHint ( StyleHint , const QStyleOption *  = 0 , const QWidget *  = 0 , QStyleHintReturn *  = 0 ) const"
   "virtual QRect subControlRect ( ComplexControl , const QStyleOptionComplex *  , SubControl , const QWidget *  = 0 ) const"
   "virtual QRect subElementRect ( SubElement , const QStyleOption *  , const QWidget *  = 0 ) const"
   "virtual void unpolish ( QWidget *  )"
   "virtual void unpolish ( QApplication *  )")
  (("QCompleter" . "QObject")
   "new QCompleter ( QObject *  = 0 )"
   "new QCompleter ( QAbstractItemModel *  , QObject *  = 0 )"
   "new QCompleter ( const QStringList &  , QObject *  = 0 )"
   "Qt::CaseSensitivity caseSensitivity () const"
   "int completionColumn () const"
   "int completionCount () const"
   "CompletionMode completionMode () const"
   "QAbstractItemModel * completionModel () const"
   "QString completionPrefix () const"
   "int completionRole () const"
   "QString currentCompletion () const"
   "QModelIndex currentIndex () const"
   "int currentRow () const"
   "Qt::MatchFlags filterMode () const"
   "int maxVisibleItems () const"
   "QAbstractItemModel * model () const"
   "ModelSorting modelSorting () const"
   "virtual QString pathFromIndex ( const QModelIndex &  ) const"
   "QAbstractItemView * popup () const"
   "void setCaseSensitivity ( Qt::CaseSensitivity )"
   "void setCompletionColumn ( int )"
   "void setCompletionMode ( CompletionMode )"
   "void setCompletionRole ( int )"
   "bool setCurrentRow ( int )"
   "void setFilterMode ( Qt::MatchFlags )"
   "void setMaxVisibleItems ( int )"
   "void setModel ( QAbstractItemModel *  )"
   "void setModelSorting ( ModelSorting )"
   "void setPopup ( QAbstractItemView *  )"
   "void setWidget ( QWidget *  )"
   "virtual QStringList splitPath ( const QString &  ) const"
   "QWidget * widget () const"
   "bool wrapAround () const")
  (("QCoreApplication" . "QObject")
   "void installNativeEventFilter ( QAbstractNativeEventFilter *  )"
   "virtual bool notify ( QObject *  , QEvent *  )"
   "void removeNativeEventFilter ( QAbstractNativeEventFilter *  )"
   "static void addLibraryPath ( const QString &  )"
   "static QString applicationDirPath ()"
   "static QString applicationFilePath ()"
   "static QString applicationName ()"
   "static qint64 applicationPid ()"
   "static QString applicationVersion ()"
   "static QStringList arguments ()"
   "static bool closingDown ()"
   "static QAbstractEventDispatcher * eventDispatcher ()"
   "static int exec ()"
   "static void exit ( int = 0 )"
   "static void flush ()"
   "static bool installTranslator ( QTranslator *  )"
   "static QCoreApplication * instance ()"
   "static bool isQuitLockEnabled ()"
   "static bool isSetuidAllowed ()"
   "static QStringList libraryPaths ()"
   "static QString organizationDomain ()"
   "static QString organizationName ()"
   "static void postEvent ( QObject *  , QEvent *  , int = Qt::NormalEventPriority )"
   "static void processEvents ( QEventLoop::ProcessEventsFlags = QEventLoop::AllEvents )"
   "static void processEvents ( QEventLoop::ProcessEventsFlags , int )"
   "static void removeLibraryPath ( const QString &  )"
   "static void removePostedEvents ( QObject *  , int = 0 )"
   "static bool removeTranslator ( QTranslator *  )"
   "static bool sendEvent ( QObject *  , QEvent *  )"
   "static void sendPostedEvents ( QObject *  = 0 , int = 0 )"
   "static void setApplicationName ( const QString &  )"
   "static void setApplicationVersion ( const QString &  )"
   "static void setAttribute ( Qt::ApplicationAttribute , bool = true )"
   "static void setEventDispatcher ( QAbstractEventDispatcher *  )"
   "static void setLibraryPaths ( const QStringList &  )"
   "static void setOrganizationDomain ( const QString &  )"
   "static void setOrganizationName ( const QString &  )"
   "static void setQuitLockEnabled ( bool )"
   "static void setSetuidAllowed ( bool )"
   "static bool startingUp ()"
   "static bool testAttribute ( Qt::ApplicationAttribute )"
   "static QString translate ( const char *  , const char *  , const char *  = 0 , int = -1 )")
  (("QDataWidgetMapper" . "QObject")
   "new QDataWidgetMapper ( QObject *  = 0 )"
   "void addMapping ( QWidget *  , int )"
   "void addMapping ( QWidget *  , int , const QByteArray &  )"
   "void clearMapping ()"
   "int currentIndex () const"
   "QAbstractItemDelegate * itemDelegate () const"
   "QByteArray mappedPropertyName ( QWidget *  ) const"
   "int mappedSection ( QWidget *  ) const"
   "QWidget * mappedWidgetAt ( int ) const"
   "QAbstractItemModel * model () const"
   "Qt::Orientation orientation () const"
   "void removeMapping ( QWidget *  )"
   "QModelIndex rootIndex () const"
   "void setItemDelegate ( QAbstractItemDelegate *  )"
   "void setModel ( QAbstractItemModel *  )"
   "void setOrientation ( Qt::Orientation )"
   "void setRootIndex ( const QModelIndex &  )"
   "void setSubmitPolicy ( SubmitPolicy )"
   "SubmitPolicy submitPolicy () const")
  (("QDateEdit" . "QDateTimeEdit")
   "new QDateEdit ( QWidget *  = 0 )"
   "new QDateEdit ( const QDate &  , QWidget *  = 0 )")
  (("QDateTimeEdit" . "QAbstractSpinBox")
   "new QDateTimeEdit ( QWidget *  = 0 )"
   "new QDateTimeEdit ( const QDateTime &  , QWidget *  = 0 )"
   "new QDateTimeEdit ( const QDate &  , QWidget *  = 0 )"
   "new QDateTimeEdit ( const QTime &  , QWidget *  = 0 )"
   "bool calendarPopup () const"
   "QCalendarWidget * calendarWidget () const"
   "void clearMaximumDate ()"
   "void clearMaximumDateTime ()"
   "void clearMaximumTime ()"
   "void clearMinimumDate ()"
   "void clearMinimumDateTime ()"
   "void clearMinimumTime ()"
   "Section currentSection () const"
   "int currentSectionIndex () const"
   "QDate date () const"
   "QDateTime dateTime () const"
   "QString displayFormat () const"
   "Sections displayedSections () const"
   "QDate maximumDate () const"
   "QDateTime maximumDateTime () const"
   "QTime maximumTime () const"
   "QDate minimumDate () const"
   "QDateTime minimumDateTime () const"
   "QTime minimumTime () const"
   "Section sectionAt ( int ) const"
   "int sectionCount () const"
   "QString sectionText ( Section ) const"
   "void setCalendarPopup ( bool )"
   "void setCalendarWidget ( QCalendarWidget *  )"
   "void setCurrentSection ( Section )"
   "void setCurrentSectionIndex ( int )"
   "void setDateRange ( const QDate &  , const QDate &  )"
   "void setDateTimeRange ( const QDateTime &  , const QDateTime &  )"
   "void setDisplayFormat ( const QString &  )"
   "void setMaximumDate ( const QDate &  )"
   "void setMaximumDateTime ( const QDateTime &  )"
   "void setMaximumTime ( const QTime &  )"
   "void setMinimumDate ( const QDate &  )"
   "void setMinimumDateTime ( const QDateTime &  )"
   "void setMinimumTime ( const QTime &  )"
   "void setSelectedSection ( Section )"
   "void setTimeRange ( const QTime &  , const QTime &  )"
   "void setTimeSpec ( Qt::TimeSpec )"
   "QTime time () const"
   "Qt::TimeSpec timeSpec () const"
   "protected void initStyleOption ( QStyleOptionSpinBox *  ) const"
   "virtual void clear ()"
   "virtual bool event ( QEvent *  )"
   "virtual QSize sizeHint () const"
   "virtual void stepBy ( int )")
  (("QDesktopWidget" . "QWidget")
   "const QRect availableGeometry ( int = -1 ) const"
   "const QRect availableGeometry ( const QWidget *  ) const"
   "const QRect availableGeometry ( const QPoint &  ) const"
   "bool isVirtualDesktop () const"
   "int primaryScreen () const"
   "QWidget * screen ( int = -1 )"
   "int screenCount () const"
   "const QRect screenGeometry ( int = -1 ) const"
   "const QRect screenGeometry ( const QWidget *  ) const"
   "const QRect screenGeometry ( const QPoint &  ) const"
   "int screenNumber ( const QWidget *  = 0 ) const"
   "int screenNumber ( const QPoint &  ) const")
  (("QDial" . "QAbstractSlider")
   "new QDial ( QWidget *  = 0 )"
   "int notchSize () const"
   "qreal notchTarget () const"
   "bool notchesVisible () const"
   "void setNotchTarget ( double )"
   "bool wrapping () const"
   "protected void initStyleOption ( QStyleOptionSlider *  ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QDialog" . "QWidget")
   "new QDialog ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "bool isSizeGripEnabled () const"
   "int result () const"
   "void setModal ( bool )"
   "void setResult ( int )"
   "void setSizeGripEnabled ( bool )"
   "virtual QSize minimumSizeHint () const"
   "virtual void setVisible ( bool )"
   "virtual QSize sizeHint () const")
  (("QDialogButtonBox" . "QWidget")
   "new QDialogButtonBox ( QWidget *  = 0 )"
   "new QDialogButtonBox ( Qt::Orientation , QWidget *  = 0 )"
   "new QDialogButtonBox ( StandardButtons , QWidget *  = 0 )"
   "new QDialogButtonBox ( StandardButtons , Qt::Orientation , QWidget *  = 0 )"
   "void addButton ( QAbstractButton *  , ButtonRole )"
   "QPushButton * addButton ( const QString &  , ButtonRole )"
   "QPushButton * addButton ( StandardButton )"
   "QPushButton * button ( StandardButton ) const"
   "ButtonRole buttonRole ( QAbstractButton *  ) const"
   "QList<QAbstractButton *> buttons () const"
   "bool centerButtons () const"
   "void clear ()"
   "Qt::Orientation orientation () const"
   "void removeButton ( QAbstractButton *  )"
   "void setCenterButtons ( bool )"
   "void setOrientation ( Qt::Orientation )"
   "void setStandardButtons ( StandardButtons )"
   "StandardButton standardButton ( QAbstractButton *  ) const"
   "StandardButtons standardButtons () const")
  (("QDirModel" . "QAbstractItemModel")
   "new QDirModel ( const QStringList &  , QDir::Filters , QDir::SortFlags , QObject *  = 0 )"
   "new QDirModel ( QObject *  = 0 )"
   "QIcon fileIcon ( const QModelIndex &  ) const"
   "QFileInfo fileInfo ( const QModelIndex &  ) const"
   "QString fileName ( const QModelIndex &  ) const"
   "QString filePath ( const QModelIndex &  ) const"
   "QDir::Filters filter () const"
   "QFileIconProvider * iconProvider () const"
   "QModelIndex index ( const QString &  , int = 0 ) const"
   "bool isDir ( const QModelIndex &  ) const"
   "bool isReadOnly () const"
   "bool lazyChildCount () const"
   "QModelIndex mkdir ( const QModelIndex &  , const QString &  )"
   "QStringList nameFilters () const"
   "bool remove ( const QModelIndex &  )"
   "bool resolveSymlinks () const"
   "bool rmdir ( const QModelIndex &  )"
   "void setFilter ( QDir::Filters )"
   "void setIconProvider ( QFileIconProvider *  )"
   "void setLazyChildCount ( bool )"
   "void setNameFilters ( const QStringList &  )"
   "void setReadOnly ( bool )"
   "void setResolveSymlinks ( bool )"
   "void setSorting ( QDir::SortFlags )"
   "QDir::SortFlags sorting () const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool hasChildren ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual QMimeData * mimeData ( const QModelIndexList &  ) const"
   "virtual QStringList mimeTypes () const"
   "virtual QModelIndex parent ( const QModelIndex &  ) const"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual Qt::DropActions supportedDropActions () const")
  (("QDockWidget" . "QWidget")
   "new QDockWidget ( const QString &  , QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "new QDockWidget ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "Qt::DockWidgetAreas allowedAreas () const"
   "DockWidgetFeatures features () const"
   "bool isAreaAllowed ( Qt::DockWidgetArea ) const"
   "bool isFloating () const"
   "void setAllowedAreas ( Qt::DockWidgetAreas )"
   "void setFeatures ( DockWidgetFeatures )"
   "void setFloating ( bool )"
   "void setTitleBarWidget ( QWidget *  )"
   "void setWidget ( QWidget *  )"
   "QWidget * titleBarWidget () const"
   "QAction * toggleViewAction () const"
   "QWidget * widget () const"
   "protected void initStyleOption ( QStyleOptionDockWidget *  ) const")
  (("QDoubleSpinBox" . "QAbstractSpinBox")
   "new QDoubleSpinBox ( QWidget *  = 0 )"
   "QString cleanText () const"
   "int decimals () const"
   "double maximum () const"
   "double minimum () const"
   "QString prefix () const"
   "void setDecimals ( int )"
   "void setMaximum ( double )"
   "void setMinimum ( double )"
   "void setPrefix ( const QString &  )"
   "void setRange ( double , double )"
   "void setSingleStep ( double )"
   "void setSuffix ( const QString &  )"
   "double singleStep () const"
   "QString suffix () const"
   "virtual QString textFromValue ( double ) const"
   "double value () const"
   "virtual double valueFromText ( const QString &  ) const"
   "virtual void fixup ( QString &  ) const"
   "virtual QValidator::State validate ( QString &  , int &  ) const")
  (("QDoubleValidator" . "QValidator")
   "new QDoubleValidator ( QObject *  = 0 )"
   "new QDoubleValidator ( double , double , int , QObject *  = 0 )"
   "double bottom () const"
   "int decimals () const"
   "Notation notation () const"
   "void setBottom ( double )"
   "void setDecimals ( int )"
   "void setNotation ( Notation )"
   "virtual void setRange ( double , double , int = 0 )"
   "void setTop ( double )"
   "double top () const"
   "virtual QValidator::State validate ( QString &  , int &  ) const")
  (("QDrag" . "QObject")
   "new QDrag ( QObject *  )"
   "QPixmap dragCursor ( Qt::DropAction ) const"
   "Qt::DropAction exec ( Qt::DropActions = Qt::MoveAction )"
   "Qt::DropAction exec ( Qt::DropActions , Qt::DropAction )"
   "QPoint hotSpot () const"
   "QMimeData * mimeData () const"
   "QPixmap pixmap () const"
   "void setDragCursor ( const QPixmap &  , Qt::DropAction )"
   "void setHotSpot ( const QPoint &  )"
   "void setMimeData ( QMimeData *  )"
   "void setPixmap ( const QPixmap &  )"
   "QObject * source () const"
   "Qt::DropActions supportedActions () const"
   "QObject * target () const")
  (("QErrorMessage" . "QDialog")
   "new QErrorMessage ( QWidget *  = 0 )")
  (("QEventLoop" . "QObject")
   "new QEventLoop ( QObject *  = 0 )"
   "int exec ( ProcessEventsFlags = AllEvents )"
   "void exit ( int = 0 )"
   "bool isRunning () const"
   "bool processEvents ( ProcessEventsFlags = AllEvents )"
   "void processEvents ( ProcessEventsFlags , int )"
   "void wakeUp ()"
   "virtual bool event ( QEvent *  )")
  (("QEventTransition" . "QAbstractTransition")
   "new QEventTransition ( QState *  = 0 )"
   "new QEventTransition ( QObject *  , QEvent::Type , QState *  = 0 )"
   "QObject * eventSource () const"
   "QEvent::Type eventType () const"
   "void setEventSource ( QObject *  )"
   "void setEventType ( QEvent::Type )")
  (("QFile" . "QFileDevice")
   "new QFile ( const QString &  )"
   "new QFile ( QObject *  )"
   "new QFile ( const QString &  , QObject *  )"
   "bool copy ( const QString &  )"
   "bool exists () const"
   "bool link ( const QString &  )"
   "bool remove ()"
   "bool rename ( const QString &  )"
   "void setFileName ( const QString &  )"
   "QString symLinkTarget () const"
   "virtual QString fileName () const"
   "virtual bool open ( OpenMode )"
   "virtual Permissions permissions () const"
   "virtual bool resize ( qint64 )"
   "virtual bool setPermissions ( Permissions )"
   "virtual qint64 size () const"
   "static bool copy ( const QString &  , const QString &  )"
   "static QString decodeName ( const QByteArray &  )"
   "static QString decodeName ( const char *  )"
   "static QByteArray encodeName ( const QString &  )"
   "static bool exists ( const QString &  )"
   "static bool link ( const QString &  , const QString &  )"
   "static Permissions permissions ( const QString &  )"
   "static bool remove ( const QString &  )"
   "static bool rename ( const QString &  , const QString &  )"
   "static bool resize ( const QString &  , qint64 )"
   "static bool setPermissions ( const QString &  , Permissions )"
   "static QString symLinkTarget ( const QString &  )")
  (("QFileDevice" . "QIODevice")
   "FileError error () const"
   "virtual QString fileName () const"
   "bool flush ()"
   "int handle () const"
   "virtual Permissions permissions () const"
   "virtual bool resize ( qint64 )"
   "virtual bool setPermissions ( Permissions )"
   "void unsetError ()"
   "virtual bool atEnd () const"
   "virtual void close ()"
   "virtual bool isSequential () const"
   "virtual qint64 pos () const"
   "virtual bool seek ( qint64 )"
   "virtual qint64 size () const")
  (("QFileDialog" . "QDialog")
   "new QFileDialog ( QWidget *  , Qt::WindowFlags )"
   "new QFileDialog ( QWidget *  = 0 , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() )"
   "AcceptMode acceptMode () const"
   "QString defaultSuffix () const"
   "QDir directory () const"
   "QUrl directoryUrl () const"
   "FileMode fileMode () const"
   "QDir::Filters filter () const"
   "QStringList history () const"
   "QFileIconProvider * iconProvider () const"
   "QAbstractItemDelegate * itemDelegate () const"
   "QString labelText ( DialogLabel ) const"
   "QStringList mimeTypeFilters () const"
   "QStringList nameFilters () const"
   "void open ( QObject *  , const char *  )"
   "Options options () const"
   "QAbstractProxyModel * proxyModel () const"
   "bool restoreState ( const QByteArray &  )"
   "QByteArray saveState () const"
   "void selectFile ( const QString &  )"
   "void selectMimeTypeFilter ( const QString &  )"
   "void selectNameFilter ( const QString &  )"
   "void selectUrl ( const QUrl &  )"
   "QStringList selectedFiles () const"
   "QString selectedNameFilter () const"
   "QList<QUrl> selectedUrls () const"
   "void setAcceptMode ( AcceptMode )"
   "void setDefaultSuffix ( const QString &  )"
   "void setDirectory ( const QString &  )"
   "void setDirectory ( const QDir &  )"
   "void setDirectoryUrl ( const QUrl &  )"
   "void setFileMode ( FileMode )"
   "void setFilter ( QDir::Filters )"
   "void setHistory ( const QStringList &  )"
   "void setIconProvider ( QFileIconProvider *  )"
   "void setItemDelegate ( QAbstractItemDelegate *  )"
   "void setLabelText ( DialogLabel , const QString &  )"
   "void setMimeTypeFilters ( const QStringList &  )"
   "void setNameFilter ( const QString &  )"
   "void setNameFilters ( const QStringList &  )"
   "void setOption ( Option , bool = true )"
   "void setOptions ( Options )"
   "void setProxyModel ( QAbstractProxyModel *  )"
   "void setSidebarUrls ( const QList<QUrl> &  )"
   "void setViewMode ( ViewMode )"
   "QList<QUrl> sidebarUrls () const"
   "bool testOption ( Option ) const"
   "ViewMode viewMode () const"
   "virtual void setVisible ( bool )"
   "static QString getExistingDirectory ( QWidget *  = 0 , const QString &  = QString() , const QString &  = QString() , Options = ShowDirsOnly )"
   "static QUrl getExistingDirectoryUrl ( QWidget *  = 0 , const QString &  = QString() , const QUrl &  = QUrl() , Options = ShowDirsOnly , const QStringList &  = QStringList() )"
   "static QString getOpenFileName ( QWidget *  = 0 , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() , QString *  = 0 , Options = 0 )"
   "static QStringList getOpenFileNames ( QWidget *  = 0 , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() , QString *  = 0 , Options = 0 )"
   "static QUrl getOpenFileUrl ( QWidget *  = 0 , const QString &  = QString() , const QUrl &  = QUrl() , const QString &  = QString() , QString *  = 0 , Options = 0 , const QStringList &  = QStringList() )"
   "static QList<QUrl> getOpenFileUrls ( QWidget *  = 0 , const QString &  = QString() , const QUrl &  = QUrl() , const QString &  = QString() , QString *  = 0 , Options = 0 , const QStringList &  = QStringList() )"
   "static QString getSaveFileName ( QWidget *  = 0 , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() , QString *  = 0 , Options = 0 )"
   "static QUrl getSaveFileUrl ( QWidget *  = 0 , const QString &  = QString() , const QUrl &  = QUrl() , const QString &  = QString() , QString *  = 0 , Options = 0 , const QStringList &  = QStringList() )")
  (("QFileSelector" . "QObject")
   "new QFileSelector ( QObject *  = 0 )"
   "QStringList allSelectors () const"
   "QStringList extraSelectors () const"
   "QString select ( const QString &  ) const"
   "QUrl select ( const QUrl &  ) const"
   "void setExtraSelectors ( const QStringList &  )")
  (("QFileSystemModel" . "QAbstractItemModel")
   "new QFileSystemModel ( QObject *  = 0 )"
   "QIcon fileIcon ( const QModelIndex &  ) const"
   "QFileInfo fileInfo ( const QModelIndex &  ) const"
   "QString fileName ( const QModelIndex &  ) const"
   "QString filePath ( const QModelIndex &  ) const"
   "QDir::Filters filter () const"
   "QFileIconProvider * iconProvider () const"
   "QModelIndex index ( const QString &  , int = 0 ) const"
   "bool isDir ( const QModelIndex &  ) const"
   "bool isReadOnly () const"
   "QDateTime lastModified ( const QModelIndex &  ) const"
   "QModelIndex mkdir ( const QModelIndex &  , const QString &  )"
   "QVariant myComputer ( int = Qt::DisplayRole ) const"
   "bool nameFilterDisables () const"
   "QStringList nameFilters () const"
   "QFile::Permissions permissions ( const QModelIndex &  ) const"
   "bool remove ( const QModelIndex &  )"
   "bool resolveSymlinks () const"
   "bool rmdir ( const QModelIndex &  )"
   "QDir rootDirectory () const"
   "QString rootPath () const"
   "void setFilter ( QDir::Filters )"
   "void setIconProvider ( QFileIconProvider *  )"
   "void setNameFilterDisables ( bool )"
   "void setNameFilters ( const QStringList &  )"
   "void setReadOnly ( bool )"
   "void setResolveSymlinks ( bool )"
   "QModelIndex setRootPath ( const QString &  )"
   "qint64 size ( const QModelIndex &  ) const"
   "QString type ( const QModelIndex &  ) const"
   "virtual bool canFetchMore ( const QModelIndex &  ) const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual void fetchMore ( const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool hasChildren ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual QMimeData * mimeData ( const QModelIndexList &  ) const"
   "virtual QStringList mimeTypes () const"
   "virtual QModelIndex parent ( const QModelIndex &  ) const"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual Qt::DropActions supportedDropActions () const")
  (("QFileSystemWatcher" . "QObject")
   "new QFileSystemWatcher ( QObject *  = 0 )"
   "new QFileSystemWatcher ( const QStringList &  , QObject *  = 0 )"
   "bool addPath ( const QString &  )"
   "QStringList addPaths ( const QStringList &  )"
   "QStringList directories () const"
   "QStringList files () const"
   "bool removePath ( const QString &  )"
   "QStringList removePaths ( const QStringList &  )")
  (("QFinalState" . "QAbstractState")
   "new QFinalState ( QState *  = 0 )")
  (("QFocusFrame" . "QWidget")
   "new QFocusFrame ( QWidget *  = 0 )"
   "void setWidget ( QWidget *  )"
   "QWidget * widget () const"
   "protected void initStyleOption ( QStyleOption *  ) const")
  (("QFontComboBox" . "QComboBox")
   "new QFontComboBox ( QWidget *  = 0 )"
   "QFont currentFont () const"
   "FontFilters fontFilters () const"
   "void setFontFilters ( FontFilters )"
   "void setWritingSystem ( QFontDatabase::WritingSystem )"
   "QFontDatabase::WritingSystem writingSystem () const"
   "virtual QSize sizeHint () const")
  (("QFontDialog" . "QDialog")
   "new QFontDialog ( QWidget *  = 0 )"
   "new QFontDialog ( const QFont &  , QWidget *  = 0 )"
   "QFont currentFont () const"
   "void open ( QObject *  , const char *  )"
   "FontDialogOptions options () const"
   "QFont selectedFont () const"
   "void setCurrentFont ( const QFont &  )"
   "void setOption ( FontDialogOption , bool = true )"
   "void setOptions ( FontDialogOptions )"
   "bool testOption ( FontDialogOption ) const"
   "virtual void setVisible ( bool )"
   "static QFont getFont ( bool *  , const QFont &  , QWidget *  = 0 , const QString &  = QString() , FontDialogOptions = 0 )"
   "static QFont getFont ( bool *  , QWidget *  = 0 )")
  (("QFormLayout" . "QLayout")
   "new QFormLayout ( QWidget *  = 0 )"
   "void addRow ( QWidget *  , QWidget *  )"
   "void addRow ( QWidget *  , QLayout *  )"
   "void addRow ( const QString &  , QWidget *  )"
   "void addRow ( const QString &  , QLayout *  )"
   "void addRow ( QWidget *  )"
   "void addRow ( QLayout *  )"
   "FieldGrowthPolicy fieldGrowthPolicy () const"
   "Qt::Alignment formAlignment () const"
   "int horizontalSpacing () const"
   "void insertRow ( int , QWidget *  , QWidget *  )"
   "void insertRow ( int , QWidget *  , QLayout *  )"
   "void insertRow ( int , const QString &  , QWidget *  )"
   "void insertRow ( int , const QString &  , QLayout *  )"
   "void insertRow ( int , QWidget *  )"
   "void insertRow ( int , QLayout *  )"
   "QLayoutItem * itemAt ( int , ItemRole ) const"
   "Qt::Alignment labelAlignment () const"
   "QWidget * labelForField ( QWidget *  ) const"
   "QWidget * labelForField ( QLayout *  ) const"
   "int rowCount () const"
   "RowWrapPolicy rowWrapPolicy () const"
   "void setFieldGrowthPolicy ( FieldGrowthPolicy )"
   "void setFormAlignment ( Qt::Alignment )"
   "void setHorizontalSpacing ( int )"
   "void setItem ( int , ItemRole , QLayoutItem *  )"
   "void setLabelAlignment ( Qt::Alignment )"
   "void setLayout ( int , ItemRole , QLayout *  )"
   "void setRowWrapPolicy ( RowWrapPolicy )"
   "void setSpacing ( int )"
   "void setVerticalSpacing ( int )"
   "void setWidget ( int , ItemRole , QWidget *  )"
   "int spacing () const"
   "int verticalSpacing () const"
   "virtual void addItem ( QLayoutItem *  )"
   "virtual int count () const"
   "virtual Qt::Orientations expandingDirections () const"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual void invalidate ()"
   "virtual QLayoutItem * itemAt ( int ) const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect &  )"
   "virtual QSize sizeHint () const"
   "virtual QLayoutItem * takeAt ( int )")
  (("QFrame" . "QWidget")
   "new QFrame ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "QRect frameRect () const"
   "Shadow frameShadow () const"
   "Shape frameShape () const"
   "int frameStyle () const"
   "int frameWidth () const"
   "int lineWidth () const"
   "int midLineWidth () const"
   "void setFrameRect ( const QRect & )"
   "void setFrameShadow ( Shadow )"
   "void setFrameShape ( Shape )"
   "void setFrameStyle ( int )"
   "void setLineWidth ( int )"
   "void setMidLineWidth ( int )"
   "protected void initStyleOption ( QStyleOptionFrame *  ) const"
   "virtual QSize sizeHint () const")
  (("QGesture" . "QObject")
   "new QGesture ( QObject *  = 0 )"
   "GestureCancelPolicy gestureCancelPolicy () const"
   "Qt::GestureType gestureType () const"
   "bool hasHotSpot () const"
   "QPointF hotSpot () const"
   "void setGestureCancelPolicy ( GestureCancelPolicy )"
   "void setHotSpot ( const QPointF &  )"
   "Qt::GestureState state () const"
   "void unsetHotSpot ()")
  (("QGraphicsAnchor" . "QObject")
   "void setSizePolicy ( QSizePolicy::Policy )"
   "void setSpacing ( qreal )"
   "QSizePolicy::Policy sizePolicy () const"
   "qreal spacing () const"
   "void unsetSpacing ()")
  (("QGraphicsBlurEffect" . "QGraphicsEffect")
   "new QGraphicsBlurEffect ( QObject *  = 0 )"
   "BlurHints blurHints () const"
   "qreal blurRadius () const"
   "virtual QRectF boundingRectFor ( const QRectF &  ) const")
  (("QGraphicsColorizeEffect" . "QGraphicsEffect")
   "new QGraphicsColorizeEffect ( QObject *  = 0 )"
   "QColor color () const"
   "qreal strength () const")
  (("QGraphicsDropShadowEffect" . "QGraphicsEffect")
   "new QGraphicsDropShadowEffect ( QObject *  = 0 )"
   "qreal blurRadius () const"
   "QColor color () const"
   "QPointF offset () const"
   "qreal xOffset () const"
   "qreal yOffset () const"
   "virtual QRectF boundingRectFor ( const QRectF &  ) const")
  (("QGraphicsEffect" . "QObject")
   "new QGraphicsEffect ( QObject *  = 0 )"
   "QRectF boundingRect () const"
   "virtual QRectF boundingRectFor ( const QRectF &  ) const"
   "bool isEnabled () const"
   "protected void drawSource ( QPainter *  )"
   "protected QRectF sourceBoundingRect ( Qt::CoordinateSystem = Qt::LogicalCoordinates ) const"
   "protected bool sourceIsPixmap () const"
   "protected void updateBoundingRect ()")
  (("QGraphicsObject" . "QObject")
   "void grabGesture ( Qt::GestureType , Qt::GestureFlags = Qt::GestureFlags() )"
   "void ungrabGesture ( Qt::GestureType )")
  (("QGraphicsOpacityEffect" . "QGraphicsEffect")
   "new QGraphicsOpacityEffect ( QObject *  = 0 )"
   "qreal opacity () const"
   "QBrush opacityMask () const")
  (("QGraphicsProxyWidget" . "QGraphicsWidget")
   "new QGraphicsProxyWidget ( QGraphicsItem *  = 0 , Qt::WindowFlags = 0 )"
   "QGraphicsProxyWidget * createProxyForChildWidget ( QWidget *  )"
   "void setWidget ( QWidget *  )"
   "QRectF subWidgetRect ( const QWidget *  ) const"
   "QWidget * widget () const"
   "virtual void paint ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  )"
   "virtual void setGeometry ( const QRectF &  )"
   "virtual int type () const")
  (("QGraphicsRotation" . "QGraphicsTransform")
   "new QGraphicsRotation ( QObject *  = 0 )"
   "qreal angle () const"
   "QVector3D axis () const"
   "QVector3D origin () const"
   "void setAngle ( qreal )"
   "void setAxis ( const QVector3D &  )"
   "void setAxis ( Qt::Axis )"
   "void setOrigin ( const QVector3D &  )")
  (("QGraphicsScale" . "QGraphicsTransform")
   "new QGraphicsScale ( QObject *  = 0 )"
   "QVector3D origin () const"
   "void setOrigin ( const QVector3D &  )"
   "void setXScale ( qreal )"
   "void setYScale ( qreal )"
   "void setZScale ( qreal )"
   "qreal xScale () const"
   "qreal yScale () const"
   "qreal zScale () const")
  (("QGraphicsScene" . "QObject")
   "new QGraphicsScene ( QObject *  = 0 )"
   "new QGraphicsScene ( const QRectF &  , QObject *  = 0 )"
   "new QGraphicsScene ( qreal , qreal , qreal , qreal , QObject *  = 0 )"
   "QGraphicsItem * activePanel () const"
   "QGraphicsWidget * activeWindow () const"
   "QGraphicsEllipseItem * addEllipse ( const QRectF &  , const QPen &  = QPen() , const QBrush &  = QBrush() )"
   "QGraphicsEllipseItem * addEllipse ( qreal , qreal , qreal , qreal , const QPen &  = QPen() , const QBrush &  = QBrush() )"
   "void addItem ( QGraphicsItem *  )"
   "QGraphicsLineItem * addLine ( const QLineF &  , const QPen &  = QPen() )"
   "QGraphicsLineItem * addLine ( qreal , qreal , qreal , qreal , const QPen &  = QPen() )"
   "QGraphicsPathItem * addPath ( const QPainterPath &  , const QPen &  = QPen() , const QBrush &  = QBrush() )"
   "QGraphicsPixmapItem * addPixmap ( const QPixmap &  )"
   "QGraphicsPolygonItem * addPolygon ( const QPolygonF &  , const QPen &  = QPen() , const QBrush &  = QBrush() )"
   "QGraphicsRectItem * addRect ( const QRectF &  , const QPen &  = QPen() , const QBrush &  = QBrush() )"
   "QGraphicsRectItem * addRect ( qreal , qreal , qreal , qreal , const QPen &  = QPen() , const QBrush &  = QBrush() )"
   "QGraphicsSimpleTextItem * addSimpleText ( const QString &  , const QFont &  = QFont() )"
   "QGraphicsTextItem * addText ( const QString &  , const QFont &  = QFont() )"
   "QGraphicsProxyWidget * addWidget ( QWidget *  , Qt::WindowFlags = 0 )"
   "QBrush backgroundBrush () const"
   "int bspTreeDepth () const"
   "void clearFocus ()"
   "QList<QGraphicsItem *> collidingItems ( const QGraphicsItem *  , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QGraphicsItemGroup * createItemGroup ( const QList<QGraphicsItem *> &  )"
   "void destroyItemGroup ( QGraphicsItemGroup *  )"
   "QGraphicsItem * focusItem () const"
   "QFont font () const"
   "QBrush foregroundBrush () const"
   "bool hasFocus () const"
   "qreal height () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "void invalidate ( qreal , qreal , qreal , qreal , SceneLayers = AllLayers )"
   "bool isActive () const"
   "QGraphicsItem * itemAt ( const QPointF &  , const QTransform &  ) const"
   "QGraphicsItem * itemAt ( qreal , qreal , const QTransform &  ) const"
   "ItemIndexMethod itemIndexMethod () const"
   "QList<QGraphicsItem *> items ( Qt::SortOrder = Qt::DescendingOrder ) const"
   "QList<QGraphicsItem *> items ( const QPointF &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape , Qt::SortOrder = Qt::DescendingOrder , const QTransform &  = QTransform() ) const"
   "QList<QGraphicsItem *> items ( qreal , qreal , qreal , qreal , Qt::ItemSelectionMode , Qt::SortOrder , const QTransform &  = QTransform() ) const"
   "QList<QGraphicsItem *> items ( const QRectF &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape , Qt::SortOrder = Qt::DescendingOrder , const QTransform &  = QTransform() ) const"
   "QList<QGraphicsItem *> items ( const QPolygonF &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape , Qt::SortOrder = Qt::DescendingOrder , const QTransform &  = QTransform() ) const"
   "QList<QGraphicsItem *> items ( const QPainterPath &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape , Qt::SortOrder = Qt::DescendingOrder , const QTransform &  = QTransform() ) const"
   "QRectF itemsBoundingRect () const"
   "qreal minimumRenderSize () const"
   "QGraphicsItem * mouseGrabberItem () const"
   "QPalette palette () const"
   "void removeItem ( QGraphicsItem *  )"
   "void render ( QPainter *  , const QRectF &  = QRectF() , const QRectF &  = QRectF() , Qt::AspectRatioMode = Qt::KeepAspectRatio )"
   "QRectF sceneRect () const"
   "QList<QGraphicsItem *> selectedItems () const"
   "QPainterPath selectionArea () const"
   "bool sendEvent ( QGraphicsItem *  , QEvent *  )"
   "void setActivePanel ( QGraphicsItem *  )"
   "void setActiveWindow ( QGraphicsWidget *  )"
   "void setBackgroundBrush ( const QBrush &  )"
   "void setBspTreeDepth ( int )"
   "void setFocus ( Qt::FocusReason = Qt::OtherFocusReason )"
   "void setFocusItem ( QGraphicsItem *  , Qt::FocusReason = Qt::OtherFocusReason )"
   "void setFont ( const QFont &  )"
   "void setForegroundBrush ( const QBrush &  )"
   "void setItemIndexMethod ( ItemIndexMethod )"
   "void setMinimumRenderSize ( qreal )"
   "void setPalette ( const QPalette &  )"
   "void setSceneRect ( const QRectF &  )"
   "void setSceneRect ( qreal , qreal , qreal , qreal )"
   "void setSelectionArea ( const QPainterPath &  , const QTransform &  )"
   "void setSelectionArea ( const QPainterPath &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape , const QTransform &  = QTransform() )"
   "void setSelectionArea ( const QPainterPath &  , Qt::ItemSelectionOperation , Qt::ItemSelectionMode = Qt::IntersectsItemShape , const QTransform &  = QTransform() )"
   "void setStickyFocus ( bool )"
   "void setStyle ( QStyle *  )"
   "bool stickyFocus () const"
   "QStyle * style () const"
   "void update ( qreal , qreal , qreal , qreal )"
   "QList<QGraphicsView *> views () const"
   "qreal width () const")
  (("QGraphicsSvgItem" . "QGraphicsObject")
   "new QGraphicsSvgItem ( QGraphicsItem *  = 0 )"
   "new QGraphicsSvgItem ( const QString &  , QGraphicsItem *  = 0 )"
   "QString elementId () const"
   "QSize maximumCacheSize () const"
   "void setElementId ( const QString &  )"
   "void setMaximumCacheSize ( const QSize &  )"
   "virtual QRectF boundingRect () const"
   "virtual void paint ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  = 0 )"
   "virtual int type () const")
  (("QGraphicsTextItem" . "QGraphicsObject")
   "new QGraphicsTextItem ( QGraphicsItem *  = 0 )"
   "new QGraphicsTextItem ( const QString &  , QGraphicsItem *  = 0 )"
   "void adjustSize ()"
   "QColor defaultTextColor () const"
   "QTextDocument * document () const"
   "QFont font () const"
   "bool openExternalLinks () const"
   "void setDefaultTextColor ( const QColor &  )"
   "void setDocument ( QTextDocument *  )"
   "void setFont ( const QFont &  )"
   "void setHtml ( const QString &  )"
   "void setOpenExternalLinks ( bool )"
   "void setPlainText ( const QString &  )"
   "void setTabChangesFocus ( bool )"
   "void setTextCursor ( const QTextCursor &  )"
   "void setTextInteractionFlags ( Qt::TextInteractionFlags )"
   "void setTextWidth ( qreal )"
   "bool tabChangesFocus () const"
   "QTextCursor textCursor () const"
   "Qt::TextInteractionFlags textInteractionFlags () const"
   "qreal textWidth () const"
   "QString toHtml () const"
   "QString toPlainText () const"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF &  ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem *  ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsTransform" . "QObject"))
  (("QGraphicsVideoItem" . "QGraphicsObject")
   "new QGraphicsVideoItem ( QGraphicsItem *  = 0 )"
   "Qt::AspectRatioMode aspectRatioMode () const"
   "QMediaObject * mediaObject () const"
   "QSizeF nativeSize () const"
   "QPointF offset () const"
   "void setAspectRatioMode ( Qt::AspectRatioMode )"
   "void setOffset ( const QPointF &  )"
   "void setSize ( const QSizeF &  )"
   "QSizeF size () const"
   "virtual QRectF boundingRect () const"
   "virtual void paint ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  = 0 )")
  (("QGraphicsView" . "QAbstractScrollArea")
   "new QGraphicsView ( QWidget *  = 0 )"
   "new QGraphicsView ( QGraphicsScene *  , QWidget *  = 0 )"
   "Qt::Alignment alignment () const"
   "QBrush backgroundBrush () const"
   "CacheMode cacheMode () const"
   "void centerOn ( const QPointF &  )"
   "void centerOn ( qreal , qreal )"
   "void centerOn ( const QGraphicsItem *  )"
   "DragMode dragMode () const"
   "void ensureVisible ( const QRectF &  , int = 50 , int = 50 )"
   "void ensureVisible ( qreal , qreal , qreal , qreal , int = 50 , int = 50 )"
   "void ensureVisible ( const QGraphicsItem *  , int = 50 , int = 50 )"
   "void fitInView ( const QRectF &  , Qt::AspectRatioMode = Qt::IgnoreAspectRatio )"
   "void fitInView ( qreal , qreal , qreal , qreal , Qt::AspectRatioMode = Qt::IgnoreAspectRatio )"
   "void fitInView ( const QGraphicsItem *  , Qt::AspectRatioMode = Qt::IgnoreAspectRatio )"
   "QBrush foregroundBrush () const"
   "bool isInteractive () const"
   "bool isTransformed () const"
   "QGraphicsItem * itemAt ( const QPoint &  ) const"
   "QGraphicsItem * itemAt ( int , int ) const"
   "QList<QGraphicsItem *> items () const"
   "QList<QGraphicsItem *> items ( const QPoint &  ) const"
   "QList<QGraphicsItem *> items ( int , int ) const"
   "QList<QGraphicsItem *> items ( int , int , int , int , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QList<QGraphicsItem *> items ( const QRect &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QList<QGraphicsItem *> items ( const QPolygon &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QList<QGraphicsItem *> items ( const QPainterPath &  , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QPoint mapFromScene ( const QPointF &  ) const"
   "QPolygon mapFromScene ( const QRectF &  ) const"
   "QPolygon mapFromScene ( const QPolygonF &  ) const"
   "QPainterPath mapFromScene ( const QPainterPath &  ) const"
   "QPoint mapFromScene ( qreal , qreal ) const"
   "QPolygon mapFromScene ( qreal , qreal , qreal , qreal ) const"
   "QPointF mapToScene ( const QPoint &  ) const"
   "QPolygonF mapToScene ( const QRect &  ) const"
   "QPolygonF mapToScene ( const QPolygon &  ) const"
   "QPainterPath mapToScene ( const QPainterPath &  ) const"
   "QPointF mapToScene ( int , int ) const"
   "QPolygonF mapToScene ( int , int , int , int ) const"
   "QMatrix matrix () const"
   "OptimizationFlags optimizationFlags () const"
   "void render ( QPainter *  , const QRectF &  = QRectF() , const QRect &  = QRect() , Qt::AspectRatioMode = Qt::KeepAspectRatio )"
   "QPainter::RenderHints renderHints () const"
   "void resetCachedContent ()"
   "void resetMatrix ()"
   "void resetTransform ()"
   "ViewportAnchor resizeAnchor () const"
   "void rotate ( qreal )"
   "QRect rubberBandRect () const"
   "Qt::ItemSelectionMode rubberBandSelectionMode () const"
   "void scale ( qreal , qreal )"
   "QGraphicsScene * scene () const"
   "QRectF sceneRect () const"
   "void setAlignment ( Qt::Alignment )"
   "void setBackgroundBrush ( const QBrush &  )"
   "void setCacheMode ( CacheMode )"
   "void setDragMode ( DragMode )"
   "void setForegroundBrush ( const QBrush &  )"
   "void setInteractive ( bool )"
   "void setMatrix ( const QMatrix &  , bool = false )"
   "void setOptimizationFlag ( OptimizationFlag , bool = true )"
   "void setOptimizationFlags ( OptimizationFlags )"
   "void setRenderHint ( QPainter::RenderHint , bool = true )"
   "void setRenderHints ( QPainter::RenderHints )"
   "void setResizeAnchor ( ViewportAnchor )"
   "void setRubberBandSelectionMode ( Qt::ItemSelectionMode )"
   "void setScene ( QGraphicsScene *  )"
   "void setSceneRect ( const QRectF &  )"
   "void setSceneRect ( qreal , qreal , qreal , qreal )"
   "void setTransform ( const QTransform &  , bool = false )"
   "void setTransformationAnchor ( ViewportAnchor )"
   "void setViewportUpdateMode ( ViewportUpdateMode )"
   "void shear ( qreal , qreal )"
   "QTransform transform () const"
   "ViewportAnchor transformationAnchor () const"
   "void translate ( qreal , qreal )"
   "QTransform viewportTransform () const"
   "ViewportUpdateMode viewportUpdateMode () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "virtual QSize sizeHint () const")
  (("QGraphicsWebView" . "QGraphicsWidget")
   "new QGraphicsWebView ( QGraphicsItem *  = 0 )"
   "bool findText ( const QString &  , QWebPage::FindFlags = 0 )"
   "QIcon icon () const"
   "bool isModified () const"
   "bool isTiledBackingStoreFrozen () const"
   "void load ( const QUrl &  )"
   "void load ( const QNetworkRequest &  , QNetworkAccessManager::Operation = QNetworkAccessManager::GetOperation , const QByteArray &  = QByteArray() )"
   "QWebPage * page () const"
   "QAction * pageAction ( QWebPage::WebAction ) const"
   "QPainter::RenderHints renderHints () const"
   "bool resizesToContents () const"
   "void setContent ( const QByteArray &  , const QString &  = QString() , const QUrl &  = QUrl() )"
   "void setHtml ( const QString &  , const QUrl &  = QUrl() )"
   "void setPage ( QWebPage *  )"
   "void setRenderHint ( QPainter::RenderHint , bool = true )"
   "void setRenderHints ( QPainter::RenderHints )"
   "void setResizesToContents ( bool )"
   "void setTiledBackingStoreFrozen ( bool )"
   "void setUrl ( const QUrl & )"
   "void setZoomFactor ( qreal )"
   "QWebSettings * settings () const"
   "QString title () const"
   "void triggerPageAction ( QWebPage::WebAction , bool = false )"
   "QUrl url () const"
   "qreal zoomFactor () const"
   "virtual bool event ( QEvent *  )"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "virtual QVariant itemChange ( GraphicsItemChange , const QVariant &  )"
   "virtual void paint ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  = 0 )"
   "virtual void setGeometry ( const QRectF &  )"
   "virtual QSizeF sizeHint ( Qt::SizeHint , const QSizeF &  ) const"
   "virtual void updateGeometry ()")
  (("QGraphicsWidget" . "QGraphicsObject")
   "new QGraphicsWidget ( QGraphicsItem *  = 0 , Qt::WindowFlags = 0 )"
   "QList<QAction *> actions () const"
   "void addAction ( QAction *  )"
   "void addActions ( const QList<QAction *> &  )"
   "void adjustSize ()"
   "bool autoFillBackground () const"
   "Qt::FocusPolicy focusPolicy () const"
   "QGraphicsWidget * focusWidget () const"
   "QFont font () const"
   "int grabShortcut ( const QKeySequence &  , Qt::ShortcutContext = Qt::WindowShortcut )"
   "void insertAction ( QAction *  , QAction *  )"
   "void insertActions ( QAction *  , QList<QAction *>  )"
   "bool isActiveWindow () const"
   "QGraphicsLayout * layout () const"
   "Qt::LayoutDirection layoutDirection () const"
   "virtual void paintWindowFrame ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  = 0 )"
   "QPalette palette () const"
   "QRectF rect () const"
   "void releaseShortcut ( int )"
   "void removeAction ( QAction *  )"
   "void resize ( const QSizeF &  )"
   "void resize ( qreal , qreal )"
   "void setAttribute ( Qt::WidgetAttribute , bool = true )"
   "void setAutoFillBackground ( bool )"
   "void setContentsMargins ( qreal , qreal , qreal , qreal )"
   "void setFocusPolicy ( Qt::FocusPolicy )"
   "void setFont ( const QFont &  )"
   "void setGeometry ( qreal , qreal , qreal , qreal )"
   "void setLayout ( QGraphicsLayout *  )"
   "void setLayoutDirection ( Qt::LayoutDirection )"
   "void setPalette ( const QPalette &  )"
   "void setShortcutAutoRepeat ( int , bool = true )"
   "void setShortcutEnabled ( int , bool = true )"
   "void setStyle ( QStyle *  )"
   "void setWindowFlags ( Qt::WindowFlags )"
   "void setWindowFrameMargins ( qreal , qreal , qreal , qreal )"
   "void setWindowTitle ( const QString &  )"
   "QSizeF size () const"
   "QStyle * style () const"
   "bool testAttribute ( Qt::WidgetAttribute ) const"
   "void unsetLayoutDirection ()"
   "void unsetWindowFrameMargins ()"
   "Qt::WindowFlags windowFlags () const"
   "QRectF windowFrameGeometry () const"
   "QRectF windowFrameRect () const"
   "QString windowTitle () const"
   "Qt::WindowType windowType () const"
   "virtual QRectF boundingRect () const"
   "virtual void paint ( QPainter *  , const QStyleOptionGraphicsItem *  , QWidget *  = 0 )"
   "virtual void setGeometry ( const QRectF &  )"
   "virtual QPainterPath shape () const"
   "virtual int type () const"
   "static void setTabOrder ( QGraphicsWidget *  , QGraphicsWidget *  )")
  (("QGridLayout" . "QLayout")
   "new QGridLayout ( QWidget *  )"
   "new QGridLayout ()"
   "void addItem ( QLayoutItem *  , int , int , int = 1 , int = 1 , Qt::Alignment = 0 )"
   "void addLayout ( QLayout *  , int , int , Qt::Alignment = 0 )"
   "void addLayout ( QLayout *  , int , int , int , int , Qt::Alignment = 0 )"
   "void addWidget ( QWidget *  , int , int , Qt::Alignment = 0 )"
   "void addWidget ( QWidget *  , int , int , int , int , Qt::Alignment = 0 )"
   "QRect cellRect ( int , int ) const"
   "int columnCount () const"
   "int columnMinimumWidth ( int ) const"
   "int columnStretch ( int ) const"
   "int horizontalSpacing () const"
   "QLayoutItem * itemAtPosition ( int , int ) const"
   "Qt::Corner originCorner () const"
   "int rowCount () const"
   "int rowMinimumHeight ( int ) const"
   "int rowStretch ( int ) const"
   "void setColumnMinimumWidth ( int , int )"
   "void setColumnStretch ( int , int )"
   "void setHorizontalSpacing ( int )"
   "void setOriginCorner ( Qt::Corner )"
   "void setRowMinimumHeight ( int , int )"
   "void setRowStretch ( int , int )"
   "void setSpacing ( int )"
   "void setVerticalSpacing ( int )"
   "int spacing () const"
   "int verticalSpacing () const"
   "virtual int count () const"
   "virtual Qt::Orientations expandingDirections () const"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual void invalidate ()"
   "virtual QLayoutItem * itemAt ( int ) const"
   "virtual QSize maximumSize () const"
   "virtual int minimumHeightForWidth ( int ) const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect &  )"
   "virtual QSize sizeHint () const"
   "virtual QLayoutItem * takeAt ( int )")
  (("QGroupBox" . "QWidget")
   "new QGroupBox ( QWidget *  = 0 )"
   "new QGroupBox ( const QString &  , QWidget *  = 0 )"
   "Qt::Alignment alignment () const"
   "bool isCheckable () const"
   "bool isChecked () const"
   "bool isFlat () const"
   "void setAlignment ( int )"
   "void setCheckable ( bool )"
   "void setFlat ( bool )"
   "void setTitle ( const QString &  )"
   "QString title () const"
   "protected void initStyleOption ( QStyleOptionGroupBox *  ) const"
   "virtual QSize minimumSizeHint () const")
  (("QGuiApplication" . "QCoreApplication")
   "qreal devicePixelRatio () const"
   "bool isSavingSession () const"
   "bool isSessionRestored () const"
   "QString sessionId () const"
   "QString sessionKey () const"
   "virtual bool notify ( QObject *  , QEvent *  )"
   "static QWindowList allWindows ()"
   "static QString applicationDisplayName ()"
   "static Qt::ApplicationState applicationState ()"
   "static void changeOverrideCursor ( const QCursor &  )"
   "static QClipboard * clipboard ()"
   "static bool desktopSettingsAware ()"
   "static int exec ()"
   "static QObject * focusObject ()"
   "static QWindow * focusWindow ()"
   "static QFont font ()"
   "static QInputMethod * inputMethod ()"
   "static bool isLeftToRight ()"
   "static bool isRightToLeft ()"
   "static Qt::KeyboardModifiers keyboardModifiers ()"
   "static Qt::LayoutDirection layoutDirection ()"
   "static QWindow * modalWindow ()"
   "static Qt::MouseButtons mouseButtons ()"
   "static QCursor * overrideCursor ()"
   "static QPalette palette ()"
   "static QFunctionPointer platformFunction ( const QByteArray &  )"
   "static QString platformName ()"
   "static QPlatformNativeInterface * platformNativeInterface ()"
   "static QScreen * primaryScreen ()"
   "static Qt::KeyboardModifiers queryKeyboardModifiers ()"
   "static bool quitOnLastWindowClosed ()"
   "static void restoreOverrideCursor ()"
   "static QList<QScreen *> screens ()"
   "static void setApplicationDisplayName ( const QString &  )"
   "static void setDesktopSettingsAware ( bool )"
   "static void setFont ( const QFont &  )"
   "static void setLayoutDirection ( Qt::LayoutDirection )"
   "static void setOverrideCursor ( const QCursor &  )"
   "static void setPalette ( const QPalette &  )"
   "static void setQuitOnLastWindowClosed ( bool )"
   "static void setWindowIcon ( const QIcon &  )"
   "static QStyleHints * styleHints ()"
   "static void sync ()"
   "static QWindow * topLevelAt ( const QPoint &  )"
   "static QWindowList topLevelWindows ()"
   "static QIcon windowIcon ()")
  (("QHBoxLayout" . "QBoxLayout")
   "new QHBoxLayout ()"
   "new QHBoxLayout ( QWidget *  )")
  (("QHeaderView" . "QAbstractItemView")
   "new QHeaderView ( Qt::Orientation , QWidget *  = 0 )"
   "bool cascadingSectionResizes () const"
   "int count () const"
   "Qt::Alignment defaultAlignment () const"
   "int defaultSectionSize () const"
   "int hiddenSectionCount () const"
   "void hideSection ( int )"
   "bool highlightSections () const"
   "bool isSectionHidden ( int ) const"
   "bool isSortIndicatorShown () const"
   "int length () const"
   "int logicalIndex ( int ) const"
   "int logicalIndexAt ( int ) const"
   "int logicalIndexAt ( int , int ) const"
   "int logicalIndexAt ( const QPoint &  ) const"
   "int maximumSectionSize () const"
   "int minimumSectionSize () const"
   "void moveSection ( int , int )"
   "int offset () const"
   "Qt::Orientation orientation () const"
   "void resetDefaultSectionSize ()"
   "int resizeContentsPrecision () const"
   "void resizeSection ( int , int )"
   "void resizeSections ( QHeaderView::ResizeMode )"
   "bool restoreState ( const QByteArray &  )"
   "QByteArray saveState () const"
   "int sectionPosition ( int ) const"
   "ResizeMode sectionResizeMode ( int ) const"
   "int sectionSize ( int ) const"
   "int sectionSizeHint ( int ) const"
   "int sectionViewportPosition ( int ) const"
   "bool sectionsClickable () const"
   "bool sectionsHidden () const"
   "bool sectionsMovable () const"
   "bool sectionsMoved () const"
   "void setCascadingSectionResizes ( bool )"
   "void setDefaultAlignment ( Qt::Alignment )"
   "void setDefaultSectionSize ( int )"
   "void setHighlightSections ( bool )"
   "void setMaximumSectionSize ( int )"
   "void setMinimumSectionSize ( int )"
   "void setResizeContentsPrecision ( int )"
   "void setSectionHidden ( int , bool )"
   "void setSectionResizeMode ( ResizeMode )"
   "void setSectionResizeMode ( int , ResizeMode )"
   "void setSectionsClickable ( bool )"
   "void setSectionsMovable ( bool )"
   "void setSortIndicator ( int , Qt::SortOrder )"
   "void setSortIndicatorShown ( bool )"
   "void setStretchLastSection ( bool )"
   "void showSection ( int )"
   "Qt::SortOrder sortIndicatorOrder () const"
   "int sortIndicatorSection () const"
   "bool stretchLastSection () const"
   "int stretchSectionCount () const"
   "void swapSections ( int , int )"
   "int visualIndex ( int ) const"
   "int visualIndexAt ( int ) const"
   "protected void initStyleOption ( QStyleOptionHeader *  ) const"
   "virtual void reset ()"
   "virtual void setModel ( QAbstractItemModel *  )"
   "virtual void setVisible ( bool )"
   "virtual QSize sizeHint () const")
  (("QHelpContentModel" . "QAbstractItemModel")
   "QHelpContentItem * contentItemAt ( const QModelIndex &  ) const"
   "void createContents ( const QString &  )"
   "bool isCreatingContents () const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant data ( const QModelIndex &  , int ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual QModelIndex parent ( const QModelIndex &  ) const"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const")
  (("QHelpContentWidget" . "QTreeView")
   "QModelIndex indexOf ( const QUrl &  )")
  (("QHelpEngineCore" . "QObject")
   "new QHelpEngineCore ( const QString &  , QObject *  = 0 )"
   "bool addCustomFilter ( const QString &  , const QStringList &  )"
   "bool autoSaveFilter () const"
   "QString collectionFile () const"
   "bool copyCollectionFile ( const QString &  )"
   "QString currentFilter () const"
   "QStringList customFilters () const"
   "QVariant customValue ( const QString &  , const QVariant &  = QVariant() ) const"
   "QString documentationFileName ( const QString &  )"
   "QString error () const"
   "QByteArray fileData ( const QUrl &  ) const"
   "QList<QUrl> files ( const QString , const QStringList &  , const QString &  = QString() )"
   "QList<QStringList> filterAttributeSets ( const QString &  ) const"
   "QStringList filterAttributes () const"
   "QStringList filterAttributes ( const QString &  ) const"
   "QUrl findFile ( const QUrl &  ) const"
   "bool registerDocumentation ( const QString &  )"
   "QStringList registeredDocumentations () const"
   "bool removeCustomFilter ( const QString &  )"
   "bool removeCustomValue ( const QString &  )"
   "void setAutoSaveFilter ( bool )"
   "void setCollectionFile ( const QString &  )"
   "void setCurrentFilter ( const QString &  )"
   "bool setCustomValue ( const QString &  , const QVariant &  )"
   "bool setupData ()"
   "bool unregisterDocumentation ( const QString &  )"
   "static QVariant metaData ( const QString &  , const QString &  )"
   "static QString namespaceName ( const QString &  )")
  (("QHelpIndexModel" . "QStringListModel")
   "void createIndex ( const QString &  )"
   "QModelIndex filter ( const QString &  , const QString &  = QString() )"
   "bool isCreatingIndex () const")
  (("QHelpIndexWidget" . "QListView"))
  (("QHelpSearchEngine" . "QObject")
   "new QHelpSearchEngine ( QHelpEngineCore *  , QObject *  = 0 )"
   "int hitCount () const"
   "QList<QHelpSearchQuery> query () const"
   "QHelpSearchQueryWidget * queryWidget ()"
   "QHelpSearchResultWidget * resultWidget ()")
  (("QHelpSearchQueryWidget" . "QWidget")
   "new QHelpSearchQueryWidget ( QWidget *  = 0 )"
   "void collapseExtendedSearch ()"
   "void expandExtendedSearch ()"
   "bool isCompactMode () const"
   "QList<QHelpSearchQuery> query () const"
   "void setQuery ( const QList<QHelpSearchQuery> &  )")
  (("QHelpSearchResultWidget" . "QWidget")
   "QUrl linkAt ( const QPoint &  )")
  (("QHistoryState" . "QAbstractState")
   "new QHistoryState ( QState *  = 0 )"
   "new QHistoryState ( HistoryType , QState *  = 0 )"
   "QAbstractState * defaultState () const"
   "HistoryType historyType () const"
   "void setDefaultState ( QAbstractState *  )"
   "void setHistoryType ( HistoryType )")
  (("QHttpMultiPart" . "QObject")
   "new QHttpMultiPart ( QObject *  = 0 )"
   "new QHttpMultiPart ( ContentType , QObject *  = 0 )"
   "void append ( const QHttpPart &  )"
   "QByteArray boundary () const"
   "void setBoundary ( const QByteArray &  )"
   "void setContentType ( ContentType )")
  (("QIODevice" . "QObject")
   "virtual bool atEnd () const"
   "virtual qint64 bytesAvailable () const"
   "virtual qint64 bytesToWrite () const"
   "virtual bool canReadLine () const"
   "virtual void close ()"
   "QString errorString () const"
   "bool getChar ( char *  )"
   "bool isOpen () const"
   "bool isReadable () const"
   "virtual bool isSequential () const"
   "bool isTextModeEnabled () const"
   "bool isWritable () const"
   "virtual bool open ( OpenMode )"
   "OpenMode openMode () const"
   "qint64 peek ( char *  , qint64 )"
   "QByteArray peek ( qint64 )"
   "virtual qint64 pos () const"
   "bool putChar ( char )"
   "qint64 read ( char *  , qint64 )"
   "QByteArray read ( qint64 )"
   "QByteArray readAll ()"
   "qint64 readLine ( char *  , qint64 )"
   "QByteArray readLine ( qint64 = 0 )"
   "virtual bool reset ()"
   "virtual bool seek ( qint64 )"
   "void setTextModeEnabled ( bool )"
   "virtual qint64 size () const"
   "void ungetChar ( char )"
   "virtual bool waitForBytesWritten ( int )"
   "virtual bool waitForReadyRead ( int )"
   "qint64 write ( const char *  , qint64 )"
   "qint64 write ( const char *  )"
   "qint64 write ( const QByteArray &  )"
   "protected void setErrorString ( const QString &  )"
   "protected void setOpenMode ( OpenMode )")
  (("QIdentityProxyModel" . "QAbstractProxyModel")
   "new QIdentityProxyModel ( QObject *  = 0 )"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual bool insertColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool insertRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual QModelIndex mapFromSource ( const QModelIndex &  ) const"
   "virtual QItemSelection mapSelectionFromSource ( const QItemSelection &  ) const"
   "virtual QItemSelection mapSelectionToSource ( const QItemSelection &  ) const"
   "virtual QModelIndex mapToSource ( const QModelIndex &  ) const"
   "virtual QModelIndexList match ( const QModelIndex &  , int , const QVariant &  , int = 1 , Qt::MatchFlags = Qt::MatchFlags( Qt::MatchStartsWith | Qt::MatchWrap ) ) const"
   "virtual QModelIndex parent ( const QModelIndex &  ) const"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual void setSourceModel ( QAbstractItemModel *  )"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const")
  (("QInputDialog" . "QDialog")
   "new QInputDialog ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "QString cancelButtonText () const"
   "QStringList comboBoxItems () const"
   "int doubleDecimals () const"
   "double doubleMaximum () const"
   "double doubleMinimum () const"
   "double doubleValue () const"
   "InputMode inputMode () const"
   "int intMaximum () const"
   "int intMinimum () const"
   "int intStep () const"
   "int intValue () const"
   "bool isComboBoxEditable () const"
   "QString labelText () const"
   "QString okButtonText () const"
   "void open ( QObject *  , const char *  )"
   "InputDialogOptions options () const"
   "void setCancelButtonText ( const QString &  )"
   "void setComboBoxEditable ( bool )"
   "void setComboBoxItems ( const QStringList &  )"
   "void setDoubleDecimals ( int )"
   "void setDoubleMaximum ( double )"
   "void setDoubleMinimum ( double )"
   "void setDoubleRange ( double , double )"
   "void setDoubleValue ( double )"
   "void setInputMode ( InputMode )"
   "void setIntMaximum ( int )"
   "void setIntMinimum ( int )"
   "void setIntRange ( int , int )"
   "void setIntStep ( int )"
   "void setIntValue ( int )"
   "void setLabelText ( const QString &  )"
   "void setOkButtonText ( const QString &  )"
   "void setOption ( InputDialogOption , bool = true )"
   "void setOptions ( InputDialogOptions )"
   "void setTextEchoMode ( QLineEdit::EchoMode )"
   "void setTextValue ( const QString &  )"
   "bool testOption ( InputDialogOption ) const"
   "QLineEdit::EchoMode textEchoMode () const"
   "QString textValue () const"
   "virtual void done ( int )"
   "virtual QSize minimumSizeHint () const"
   "virtual void setVisible ( bool )"
   "virtual QSize sizeHint () const"
   "static double getDouble ( QWidget *  , const QString &  , const QString &  , double = 0 , double = -2147483647 , double = 2147483647 , int = 1 , bool *  = 0 , Qt::WindowFlags = 0 )"
   "static int getInt ( QWidget *  , const QString &  , const QString &  , int = 0 , int = -2147483647 , int = 2147483647 , int = 1 , bool *  = 0 , Qt::WindowFlags = 0 )"
   "static QString getItem ( QWidget *  , const QString &  , const QString &  , const QStringList &  , int = 0 , bool = true , bool *  = 0 , Qt::WindowFlags = 0 , Qt::InputMethodHints = Qt::ImhNone )"
   "static QString getMultiLineText ( QWidget *  , const QString &  , const QString &  , const QString &  = QString() , bool *  = 0 , Qt::WindowFlags = 0 , Qt::InputMethodHints = Qt::ImhNone )"
   "static QString getText ( QWidget *  , const QString &  , const QString &  , QLineEdit::EchoMode = QLineEdit::Normal , const QString &  = QString() , bool *  = 0 , Qt::WindowFlags = 0 , Qt::InputMethodHints = Qt::ImhNone )")
  (("QInputMethod" . "QObject")
   "QRectF cursorRectangle () const"
   "Qt::LayoutDirection inputDirection () const"
   "QRectF inputItemRectangle () const"
   "QTransform inputItemTransform () const"
   "bool isAnimating () const"
   "bool isVisible () const"
   "QRectF keyboardRectangle () const"
   "QLocale locale () const"
   "void setInputItemRectangle ( const QRectF &  )"
   "void setInputItemTransform ( const QTransform &  )"
   "void setVisible ( bool )"
   "static QVariant queryFocusObject ( Qt::InputMethodQuery , QVariant )")
  (("QIntValidator" . "QValidator")
   "new QIntValidator ( QObject *  = 0 )"
   "new QIntValidator ( int , int , QObject *  = 0 )"
   "int bottom () const"
   "void setBottom ( int )"
   "virtual void setRange ( int , int )"
   "void setTop ( int )"
   "int top () const"
   "virtual void fixup ( QString &  ) const"
   "virtual QValidator::State validate ( QString &  , int &  ) const")
  (("QItemDelegate" . "QAbstractItemDelegate")
   "new QItemDelegate ( QObject *  = 0 )"
   "bool hasClipping () const"
   "QItemEditorFactory * itemEditorFactory () const"
   "void setClipping ( bool )"
   "void setItemEditorFactory ( QItemEditorFactory *  )"
   "protected void drawBackground ( QPainter *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual QWidget * createEditor ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void paint ( QPainter *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void setEditorData ( QWidget *  , const QModelIndex &  ) const"
   "virtual void setModelData ( QWidget *  , QAbstractItemModel *  , const QModelIndex &  ) const"
   "virtual QSize sizeHint ( const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void updateEditorGeometry ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const")
  (("QItemSelectionModel" . "QObject")
   "new QItemSelectionModel ( QAbstractItemModel *  = 0 )"
   "new QItemSelectionModel ( QAbstractItemModel *  , QObject *  )"
   "bool columnIntersectsSelection ( int , const QModelIndex &  ) const"
   "QModelIndex currentIndex () const"
   "bool hasSelection () const"
   "bool isColumnSelected ( int , const QModelIndex &  ) const"
   "bool isRowSelected ( int , const QModelIndex &  ) const"
   "bool isSelected ( const QModelIndex &  ) const"
   "const QAbstractItemModel * model () const"
   "QAbstractItemModel * model ()"
   "bool rowIntersectsSelection ( int , const QModelIndex &  ) const"
   "QModelIndexList selectedColumns ( int = 0 ) const"
   "QModelIndexList selectedIndexes () const"
   "QModelIndexList selectedRows ( int = 0 ) const"
   "const QItemSelection selection () const"
   "void setModel ( QAbstractItemModel *  )"
   "protected void emitSelectionChanged ( const QItemSelection &  , const QItemSelection &  )")
  (("QJSEngine" . "QObject")
   "new QJSEngine ()"
   "new QJSEngine ( QObject *  )"
   "void collectGarbage ()"
   "QJSValue evaluate ( const QString &  , const QString &  = QString() , int = 1 )"
   "QJSValue globalObject () const"
   "void installTranslatorFunctions ( const QJSValue &  = QJSValue() )"
   "QJSValue newArray ( uint = 0 )"
   "QJSValue newObject ()"
   "QJSValue newQObject ( QObject *  )")
  (("QKeyEventTransition" . "QEventTransition")
   "new QKeyEventTransition ( QState *  = 0 )"
   "new QKeyEventTransition ( QObject *  , QEvent::Type , int , QState *  = 0 )"
   "int key () const"
   "Qt::KeyboardModifiers modifierMask () const"
   "void setKey ( int )"
   "void setModifierMask ( Qt::KeyboardModifiers )")
  (("QLCDNumber" . "QFrame")
   "new QLCDNumber ( QWidget *  = 0 )"
   "new QLCDNumber ( uint , QWidget *  = 0 )"
   "bool checkOverflow ( double ) const"
   "bool checkOverflow ( int ) const"
   "int digitCount () const"
   "int intValue () const"
   "Mode mode () const"
   "SegmentStyle segmentStyle () const"
   "void setDigitCount ( int )"
   "void setMode ( Mode )"
   "void setSegmentStyle ( SegmentStyle )"
   "bool smallDecimalPoint () const"
   "double value () const"
   "virtual QSize sizeHint () const")
  (("QLabel" . "QFrame")
   "new QLabel ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "new QLabel ( const QString &  , QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "Qt::Alignment alignment () const"
   "QWidget * buddy () const"
   "bool hasScaledContents () const"
   "bool hasSelectedText () const"
   "int indent () const"
   "int margin () const"
   "QMovie * movie () const"
   "bool openExternalLinks () const"
   "const QPicture * picture () const"
   "const QPixmap * pixmap () const"
   "QString selectedText () const"
   "int selectionStart () const"
   "void setAlignment ( Qt::Alignment )"
   "void setBuddy ( QWidget *  )"
   "void setIndent ( int )"
   "void setMargin ( int )"
   "void setOpenExternalLinks ( bool )"
   "void setScaledContents ( bool )"
   "void setSelection ( int , int )"
   "void setTextFormat ( Qt::TextFormat )"
   "void setTextInteractionFlags ( Qt::TextInteractionFlags )"
   "void setWordWrap ( bool )"
   "QString text () const"
   "Qt::TextFormat textFormat () const"
   "Qt::TextInteractionFlags textInteractionFlags () const"
   "bool wordWrap () const"
   "virtual int heightForWidth ( int ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QLayout" . "QObject")
   "bool activate ()"
   "virtual void addItem ( QLayoutItem *  ) = 0"
   "void addWidget ( QWidget *  )"
   "QMargins contentsMargins () const"
   "QRect contentsRect () const"
   "virtual int count () const = 0"
   "virtual int indexOf ( QWidget *  ) const"
   "bool isEnabled () const"
   "virtual QLayoutItem * itemAt ( int ) const = 0"
   "QWidget * menuBar () const"
   "QWidget * parentWidget () const"
   "void removeItem ( QLayoutItem *  )"
   "void removeWidget ( QWidget *  )"
   "QLayoutItem * replaceWidget ( QWidget *  , QWidget *  , Qt::FindChildOptions = Qt::FindChildrenRecursively )"
   "bool setAlignment ( QWidget *  , Qt::Alignment )"
   "bool setAlignment ( QLayout *  , Qt::Alignment )"
   "void setContentsMargins ( int , int , int , int )"
   "void setContentsMargins ( const QMargins &  )"
   "void setEnabled ( bool )"
   "void setMenuBar ( QWidget *  )"
   "void setSizeConstraint ( SizeConstraint )"
   "void setSpacing ( int )"
   "SizeConstraint sizeConstraint () const"
   "int spacing () const"
   "virtual QLayoutItem * takeAt ( int ) = 0"
   "void update ()"
   "protected void addChildLayout ( QLayout *  )"
   "protected void addChildWidget ( QWidget *  )"
   "protected QRect alignmentRect ( const QRect &  ) const"
   "virtual QSizePolicy::ControlTypes controlTypes () const"
   "virtual Qt::Orientations expandingDirections () const"
   "virtual QRect geometry () const"
   "virtual void invalidate ()"
   "virtual bool isEmpty () const"
   "virtual QLayout * layout ()"
   "virtual QSize maximumSize () const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect &  )"
   "static QSize closestAcceptableSize ( const QWidget *  , const QSize &  )")
  (("QLibrary" . "QObject")
   "new QLibrary ( QObject *  = 0 )"
   "new QLibrary ( const QString &  , QObject *  = 0 )"
   "new QLibrary ( const QString &  , int , QObject *  = 0 )"
   "new QLibrary ( const QString &  , const QString &  , QObject *  = 0 )"
   "QString errorString () const"
   "QString fileName () const"
   "bool isLoaded () const"
   "bool load ()"
   "LoadHints loadHints () const"
   "QFunctionPointer resolve ( const char *  )"
   "void setFileName ( const QString &  )"
   "void setFileNameAndVersion ( const QString &  , int )"
   "void setFileNameAndVersion ( const QString &  , const QString &  )"
   "void setLoadHints ( LoadHints )"
   "bool unload ()"
   "static bool isLibrary ( const QString &  )"
   "static QFunctionPointer resolve ( const QString &  , const char *  )"
   "static QFunctionPointer resolve ( const QString &  , int , const char *  )"
   "static QFunctionPointer resolve ( const QString &  , const QString &  , const char *  )")
  (("QLineEdit" . "QWidget")
   "new QLineEdit ( QWidget *  = 0 )"
   "new QLineEdit ( const QString &  , QWidget *  = 0 )"
   "void addAction ( QAction *  , ActionPosition )"
   "QAction * addAction ( const QIcon &  , ActionPosition )"
   "Qt::Alignment alignment () const"
   "void backspace ()"
   "QCompleter * completer () const"
   "QMenu * createStandardContextMenu ()"
   "void cursorBackward ( bool , int = 1 )"
   "void cursorForward ( bool , int = 1 )"
   "Qt::CursorMoveStyle cursorMoveStyle () const"
   "int cursorPosition () const"
   "int cursorPositionAt ( const QPoint &  )"
   "void cursorWordBackward ( bool )"
   "void cursorWordForward ( bool )"
   "void del ()"
   "void deselect ()"
   "QString displayText () const"
   "bool dragEnabled () const"
   "EchoMode echoMode () const"
   "void end ( bool )"
   "bool hasAcceptableInput () const"
   "bool hasFrame () const"
   "bool hasSelectedText () const"
   "void home ( bool )"
   "QString inputMask () const"
   "void insert ( const QString &  )"
   "bool isClearButtonEnabled () const"
   "bool isModified () const"
   "bool isReadOnly () const"
   "bool isRedoAvailable () const"
   "bool isUndoAvailable () const"
   "int maxLength () const"
   "QString selectedText () const"
   "int selectionStart () const"
   "void setAlignment ( Qt::Alignment )"
   "void setClearButtonEnabled ( bool )"
   "void setCompleter ( QCompleter *  )"
   "void setCursorMoveStyle ( Qt::CursorMoveStyle )"
   "void setCursorPosition ( int )"
   "void setDragEnabled ( bool )"
   "void setEchoMode ( EchoMode )"
   "void setFrame ( bool )"
   "void setInputMask ( const QString &  )"
   "void setMaxLength ( int )"
   "void setModified ( bool )"
   "void setReadOnly ( bool )"
   "void setSelection ( int , int )"
   "void setTextMargins ( int , int , int , int )"
   "void setTextMargins ( const QMargins &  )"
   "void setValidator ( const QValidator *  )"
   "QString text () const"
   "QMargins textMargins () const"
   "const QValidator * validator () const"
   "protected QRect cursorRect () const"
   "protected void initStyleOption ( QStyleOptionFrame *  ) const"
   "virtual bool event ( QEvent *  )"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QListView" . "QAbstractItemView")
   "new QListView ( QWidget *  = 0 )"
   "int batchSize () const"
   "void clearPropertyFlags ()"
   "Flow flow () const"
   "QSize gridSize () const"
   "bool isRowHidden ( int ) const"
   "bool isSelectionRectVisible () const"
   "bool isWrapping () const"
   "LayoutMode layoutMode () const"
   "int modelColumn () const"
   "Movement movement () const"
   "ResizeMode resizeMode () const"
   "void setBatchSize ( int )"
   "void setFlow ( Flow )"
   "void setGridSize ( const QSize &  )"
   "void setLayoutMode ( LayoutMode )"
   "void setModelColumn ( int )"
   "void setMovement ( Movement )"
   "void setResizeMode ( ResizeMode )"
   "void setRowHidden ( int , bool )"
   "void setSelectionRectVisible ( bool )"
   "void setSpacing ( int )"
   "void setUniformItemSizes ( bool )"
   "void setViewMode ( ViewMode )"
   "void setWordWrap ( bool )"
   "void setWrapping ( bool )"
   "int spacing () const"
   "bool uniformItemSizes () const"
   "ViewMode viewMode () const"
   "bool wordWrap () const"
   "protected QRect rectForIndex ( const QModelIndex &  ) const"
   "protected void setPositionForIndex ( const QPoint &  , const QModelIndex &  )"
   "virtual QModelIndex indexAt ( const QPoint &  ) const"
   "virtual void scrollTo ( const QModelIndex &  , ScrollHint = EnsureVisible )"
   "virtual QRect visualRect ( const QModelIndex &  ) const")
  (("QListWidget" . "QListView")
   "new QListWidget ( QWidget *  = 0 )"
   "void addItem ( const QString &  )"
   "void addItem ( QListWidgetItem *  )"
   "void addItems ( const QStringList &  )"
   "void closePersistentEditor ( QListWidgetItem *  )"
   "int count () const"
   "QListWidgetItem * currentItem () const"
   "int currentRow () const"
   "void editItem ( QListWidgetItem *  )"
   "QList<QListWidgetItem *> findItems ( const QString &  , Qt::MatchFlags ) const"
   "void insertItem ( int , QListWidgetItem *  )"
   "void insertItem ( int , const QString &  )"
   "void insertItems ( int , const QStringList &  )"
   "bool isSortingEnabled () const"
   "QListWidgetItem * item ( int ) const"
   "QListWidgetItem * itemAt ( const QPoint &  ) const"
   "QListWidgetItem * itemAt ( int , int ) const"
   "QWidget * itemWidget ( QListWidgetItem *  ) const"
   "void openPersistentEditor ( QListWidgetItem *  )"
   "void removeItemWidget ( QListWidgetItem *  )"
   "int row ( const QListWidgetItem *  ) const"
   "QList<QListWidgetItem *> selectedItems () const"
   "void setCurrentItem ( QListWidgetItem *  )"
   "void setCurrentItem ( QListWidgetItem *  , QItemSelectionModel::SelectionFlags )"
   "void setCurrentRow ( int )"
   "void setCurrentRow ( int , QItemSelectionModel::SelectionFlags )"
   "void setItemWidget ( QListWidgetItem *  , QWidget *  )"
   "void setSortingEnabled ( bool )"
   "void sortItems ( Qt::SortOrder = Qt::AscendingOrder )"
   "QListWidgetItem * takeItem ( int )"
   "QRect visualItemRect ( const QListWidgetItem *  ) const"
   "protected QModelIndex indexFromItem ( QListWidgetItem *  ) const"
   "protected QListWidgetItem * itemFromIndex ( const QModelIndex &  ) const"
   "protected QList<QListWidgetItem *> items ( const QMimeData *  ) const"
   "virtual void dropEvent ( QDropEvent *  )")
  (("QLocalServer" . "QObject")
   "new QLocalServer ( QObject *  = 0 )"
   "void close ()"
   "QString errorString () const"
   "QString fullServerName () const"
   "virtual bool hasPendingConnections () const"
   "bool isListening () const"
   "bool listen ( const QString &  )"
   "int maxPendingConnections () const"
   "virtual QLocalSocket * nextPendingConnection ()"
   "QAbstractSocket::SocketError serverError () const"
   "QString serverName () const"
   "void setMaxPendingConnections ( int )"
   "void setSocketOptions ( SocketOptions )"
   "SocketOptions socketOptions () const"
   "bool waitForNewConnection ( int = 0 , bool *  = 0 )"
   "static bool removeServer ( const QString &  )")
  (("QLocalSocket" . "QIODevice")
   "new QLocalSocket ( QObject *  = 0 )"
   "void abort ()"
   "void connectToServer ( OpenMode = ReadWrite )"
   "void connectToServer ( const QString &  , OpenMode = ReadWrite )"
   "void disconnectFromServer ()"
   "LocalSocketError error () const"
   "bool flush ()"
   "QString fullServerName () const"
   "bool isValid () const"
   "qint64 readBufferSize () const"
   "QString serverName () const"
   "void setReadBufferSize ( qint64 )"
   "void setServerName ( const QString &  )"
   "LocalSocketState state () const"
   "bool waitForConnected ( int = 30000 )"
   "bool waitForDisconnected ( int = 30000 )"
   "virtual qint64 bytesAvailable () const"
   "virtual qint64 bytesToWrite () const"
   "virtual bool canReadLine () const"
   "virtual void close ()"
   "virtual bool isSequential () const"
   "virtual bool open ( OpenMode = ReadWrite )"
   "virtual bool waitForBytesWritten ( int = 30000 )"
   "virtual bool waitForReadyRead ( int = 30000 )")
  (("QMainWindow" . "QWidget")
   "new QMainWindow ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "void addDockWidget ( Qt::DockWidgetArea , QDockWidget *  )"
   "void addDockWidget ( Qt::DockWidgetArea , QDockWidget *  , Qt::Orientation )"
   "void addToolBar ( Qt::ToolBarArea , QToolBar *  )"
   "void addToolBar ( QToolBar *  )"
   "QToolBar * addToolBar ( const QString &  )"
   "void addToolBarBreak ( Qt::ToolBarArea = Qt::TopToolBarArea )"
   "QWidget * centralWidget () const"
   "Qt::DockWidgetArea corner ( Qt::Corner ) const"
   "virtual QMenu * createPopupMenu ()"
   "DockOptions dockOptions () const"
   "Qt::DockWidgetArea dockWidgetArea ( QDockWidget *  ) const"
   "bool documentMode () const"
   "QSize iconSize () const"
   "void insertToolBar ( QToolBar *  , QToolBar *  )"
   "void insertToolBarBreak ( QToolBar *  )"
   "bool isAnimated () const"
   "bool isDockNestingEnabled () const"
   "QMenuBar * menuBar () const"
   "QWidget * menuWidget () const"
   "void removeDockWidget ( QDockWidget *  )"
   "void removeToolBar ( QToolBar *  )"
   "void removeToolBarBreak ( QToolBar *  )"
   "bool restoreDockWidget ( QDockWidget *  )"
   "bool restoreState ( const QByteArray &  , int = 0 )"
   "QByteArray saveState ( int = 0 ) const"
   "void setCentralWidget ( QWidget *  )"
   "void setCorner ( Qt::Corner , Qt::DockWidgetArea )"
   "void setDockOptions ( DockOptions )"
   "void setDocumentMode ( bool )"
   "void setIconSize ( const QSize &  )"
   "void setMenuBar ( QMenuBar *  )"
   "void setMenuWidget ( QWidget *  )"
   "void setStatusBar ( QStatusBar *  )"
   "void setTabPosition ( Qt::DockWidgetAreas , QTabWidget::TabPosition )"
   "void setTabShape ( QTabWidget::TabShape )"
   "void setToolButtonStyle ( Qt::ToolButtonStyle )"
   "void splitDockWidget ( QDockWidget *  , QDockWidget *  , Qt::Orientation )"
   "QStatusBar * statusBar () const"
   "QTabWidget::TabPosition tabPosition ( Qt::DockWidgetArea ) const"
   "QTabWidget::TabShape tabShape () const"
   "QList<QDockWidget *> tabifiedDockWidgets ( QDockWidget *  ) const"
   "void tabifyDockWidget ( QDockWidget *  , QDockWidget *  )"
   "QWidget * takeCentralWidget ()"
   "Qt::ToolBarArea toolBarArea ( QToolBar *  ) const"
   "bool toolBarBreak ( QToolBar *  ) const"
   "Qt::ToolButtonStyle toolButtonStyle () const"
   "bool unifiedTitleAndToolBarOnMac () const")
  (("QMdiArea" . "QAbstractScrollArea")
   "new QMdiArea ( QWidget *  = 0 )"
   "WindowOrder activationOrder () const"
   "QMdiSubWindow * activeSubWindow () const"
   "QMdiSubWindow * addSubWindow ( QWidget *  , Qt::WindowFlags = 0 )"
   "QBrush background () const"
   "QMdiSubWindow * currentSubWindow () const"
   "bool documentMode () const"
   "void removeSubWindow ( QWidget *  )"
   "void setActivationOrder ( WindowOrder )"
   "void setBackground ( const QBrush &  )"
   "void setDocumentMode ( bool )"
   "void setOption ( AreaOption , bool = true )"
   "void setTabPosition ( QTabWidget::TabPosition )"
   "void setTabShape ( QTabWidget::TabShape )"
   "void setTabsClosable ( bool )"
   "void setTabsMovable ( bool )"
   "void setViewMode ( ViewMode )"
   "QList<QMdiSubWindow *> subWindowList ( WindowOrder = CreationOrder ) const"
   "QTabWidget::TabPosition tabPosition () const"
   "QTabWidget::TabShape tabShape () const"
   "bool tabsClosable () const"
   "bool tabsMovable () const"
   "bool testOption ( AreaOption ) const"
   "ViewMode viewMode () const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QMdiSubWindow" . "QWidget")
   "new QMdiSubWindow ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "bool isShaded () const"
   "int keyboardPageStep () const"
   "int keyboardSingleStep () const"
   "QMdiArea * mdiArea () const"
   "void setKeyboardPageStep ( int )"
   "void setKeyboardSingleStep ( int )"
   "void setOption ( SubWindowOption , bool = true )"
   "void setSystemMenu ( QMenu *  )"
   "void setWidget ( QWidget *  )"
   "QMenu * systemMenu () const"
   "bool testOption ( SubWindowOption ) const"
   "QWidget * widget () const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QMediaControl" . "QObject"))
  (("QMediaObject" . "QObject")
   "virtual QMultimedia::AvailabilityStatus availability () const"
   "QStringList availableMetaData () const"
   "virtual bool bind ( QObject *  )"
   "virtual bool isAvailable () const"
   "bool isMetaDataAvailable () const"
   "QVariant metaData ( const QString &  ) const"
   "int notifyInterval () const"
   "virtual QMediaService * service () const"
   "void setNotifyInterval ( int )"
   "virtual void unbind ( QObject *  )"
   "protected void addPropertyWatch ( const QByteArray &  )"
   "protected void removePropertyWatch ( const QByteArray &  )")
  (("QMediaPlayer" . "QMediaObject")
   "new QMediaPlayer ( QObject *  = 0 , Flags = 0 )"
   "int bufferStatus () const"
   "QMediaContent currentMedia () const"
   "QNetworkConfiguration currentNetworkConfiguration () const"
   "qint64 duration () const"
   "Error error () const"
   "QString errorString () const"
   "bool isAudioAvailable () const"
   "bool isMuted () const"
   "bool isSeekable () const"
   "bool isVideoAvailable () const"
   "QMediaContent media () const"
   "MediaStatus mediaStatus () const"
   "qreal playbackRate () const"
   "QMediaPlaylist * playlist () const"
   "qint64 position () const"
   "void setVideoOutput ( QVideoWidget *  )"
   "void setVideoOutput ( QGraphicsVideoItem *  )"
   "void setVideoOutput ( QAbstractVideoSurface *  )"
   "State state () const"
   "int volume () const"
   "virtual QMultimedia::AvailabilityStatus availability () const"
   "static QMultimedia::SupportEstimate hasSupport ( const QString &  , const QStringList &  = QStringList() , Flags = 0 )")
  (("QMediaPlaylist" . "QObject")
   "new QMediaPlaylist ( QObject *  = 0 )"
   "bool addMedia ( const QMediaContent &  )"
   "bool addMedia ( const QList<QMediaContent> &  )"
   "bool clear ()"
   "int currentIndex () const"
   "QMediaContent currentMedia () const"
   "Error error () const"
   "QString errorString () const"
   "bool insertMedia ( int , const QMediaContent &  )"
   "bool insertMedia ( int , const QList<QMediaContent> &  )"
   "bool isEmpty () const"
   "bool isReadOnly () const"
   "void load ( const QNetworkRequest &  , const char *  = 0 )"
   "void load ( const QUrl &  , const char *  = 0 )"
   "QMediaContent media ( int ) const"
   "int mediaCount () const"
   "int nextIndex ( int = 1 ) const"
   "PlaybackMode playbackMode () const"
   "int previousIndex ( int = 1 ) const"
   "bool removeMedia ( int )"
   "bool removeMedia ( int , int )"
   "bool save ( const QUrl &  , const char *  = 0 )"
   "void setPlaybackMode ( PlaybackMode )"
   "virtual QMediaObject * mediaObject () const")
  (("QMediaRecorder" . "QObject")
   "new QMediaRecorder ( QMediaObject *  , QObject *  = 0 )"
   "QUrl actualLocation () const"
   "QString audioCodecDescription ( const QString &  ) const"
   "QAudioEncoderSettings audioSettings () const"
   "QMultimedia::AvailabilityStatus availability () const"
   "QStringList availableMetaData () const"
   "QString containerDescription ( const QString &  ) const"
   "QString containerFormat () const"
   "qint64 duration () const"
   "Error error () const"
   "QString errorString () const"
   "bool isAvailable () const"
   "bool isMetaDataAvailable () const"
   "bool isMetaDataWritable () const"
   "bool isMuted () const"
   "QVariant metaData ( const QString &  ) const"
   "QUrl outputLocation () const"
   "void setAudioSettings ( const QAudioEncoderSettings &  )"
   "void setContainerFormat ( const QString &  )"
   "void setEncodingSettings ( const QAudioEncoderSettings &  , const QVideoEncoderSettings &  = QVideoEncoderSettings() , const QString &  = QString() )"
   "void setMetaData ( const QString &  , const QVariant &  )"
   "bool setOutputLocation ( const QUrl &  )"
   "void setVideoSettings ( const QVideoEncoderSettings &  )"
   "State state () const"
   "Status status () const"
   "QStringList supportedAudioCodecs () const"
   "QList<int> supportedAudioSampleRates ( const QAudioEncoderSettings &  = QAudioEncoderSettings() , bool *  = 0 ) const"
   "QStringList supportedContainers () const"
   "QList<qreal> supportedFrameRates ( const QVideoEncoderSettings &  = QVideoEncoderSettings() , bool *  = 0 ) const"
   "QList<QSize> supportedResolutions ( const QVideoEncoderSettings &  = QVideoEncoderSettings() , bool *  = 0 ) const"
   "QStringList supportedVideoCodecs () const"
   "QString videoCodecDescription ( const QString &  ) const"
   "QVideoEncoderSettings videoSettings () const"
   "qreal volume () const"
   "virtual QMediaObject * mediaObject () const")
  (("QMediaService" . "QObject")
   "virtual void releaseControl ( QMediaControl *  ) = 0"
   "virtual QMediaControl * requestControl ( const char *  ) = 0")
  (("QMenu" . "QWidget")
   "new QMenu ( QWidget *  = 0 )"
   "new QMenu ( const QString &  , QWidget *  = 0 )"
   "QAction * actionAt ( const QPoint &  ) const"
   "QRect actionGeometry ( QAction *  ) const"
   "QAction * activeAction () const"
   "QAction * addAction ( const QString &  )"
   "QAction * addAction ( const QIcon &  , const QString &  )"
   "QAction * addAction ( const QString &  , const QObject *  , const char *  , const QKeySequence &  = 0 )"
   "QAction * addAction ( const QIcon &  , const QString &  , const QObject *  , const char *  , const QKeySequence &  = 0 )"
   "QAction * addMenu ( QMenu *  )"
   "QMenu * addMenu ( const QString &  )"
   "QMenu * addMenu ( const QIcon &  , const QString &  )"
   "QAction * addSection ( const QString &  )"
   "QAction * addSection ( const QIcon &  , const QString &  )"
   "QAction * addSeparator ()"
   "void clear ()"
   "QAction * exec ()"
   "QAction * exec ( const QPoint &  , QAction *  = 0 )"
   "void hideTearOffMenu ()"
   "QIcon icon () const"
   "QAction * insertMenu ( QAction *  , QMenu *  )"
   "QAction * insertSection ( QAction *  , const QString &  )"
   "QAction * insertSection ( QAction *  , const QIcon &  , const QString &  )"
   "QAction * insertSeparator ( QAction *  )"
   "bool isEmpty () const"
   "bool isTearOffEnabled () const"
   "bool isTearOffMenuVisible () const"
   "QAction * menuAction () const"
   "void popup ( const QPoint &  , QAction *  = 0 )"
   "bool separatorsCollapsible () const"
   "void setActiveAction ( QAction *  )"
   "void setIcon ( const QIcon &  )"
   "void setSeparatorsCollapsible ( bool )"
   "void setTearOffEnabled ( bool )"
   "void setTitle ( const QString &  )"
   "void setToolTipsVisible ( bool )"
   "QString title () const"
   "bool toolTipsVisible () const"
   "protected int columnCount () const"
   "protected void initStyleOption ( QStyleOptionMenuItem *  , const QAction *  ) const"
   "virtual QSize sizeHint () const"
   "static QAction * exec ( const QList<QAction *> &  , const QPoint &  , QAction *  = 0 , QWidget *  = 0 )")
  (("QMenuBar" . "QWidget")
   "new QMenuBar ( QWidget *  = 0 )"
   "QAction * actionAt ( const QPoint &  ) const"
   "QRect actionGeometry ( QAction *  ) const"
   "QAction * activeAction () const"
   "QAction * addAction ( const QString &  )"
   "QAction * addAction ( const QString &  , const QObject *  , const char *  )"
   "QAction * addMenu ( QMenu *  )"
   "QMenu * addMenu ( const QString &  )"
   "QMenu * addMenu ( const QIcon &  , const QString &  )"
   "QAction * addSeparator ()"
   "void clear ()"
   "QWidget * cornerWidget ( Qt::Corner = Qt::TopRightCorner ) const"
   "QAction * insertMenu ( QAction *  , QMenu *  )"
   "QAction * insertSeparator ( QAction *  )"
   "bool isDefaultUp () const"
   "bool isNativeMenuBar () const"
   "void setActiveAction ( QAction *  )"
   "void setCornerWidget ( QWidget *  , Qt::Corner = Qt::TopRightCorner )"
   "void setDefaultUp ( bool )"
   "void setNativeMenuBar ( bool )"
   "protected void initStyleOption ( QStyleOptionMenuItem *  , const QAction *  ) const"
   "virtual int heightForWidth ( int ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QMessageBox" . "QDialog")
   "new QMessageBox ( QWidget *  = 0 )"
   "new QMessageBox ( Icon , const QString &  , const QString &  , StandardButtons = NoButton , QWidget *  = 0 , Qt::WindowFlags = Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint )"
   "void addButton ( QAbstractButton *  , ButtonRole )"
   "QPushButton * addButton ( const QString &  , ButtonRole )"
   "QPushButton * addButton ( StandardButton )"
   "QAbstractButton * button ( StandardButton ) const"
   "ButtonRole buttonRole ( QAbstractButton *  ) const"
   "QList<QAbstractButton *> buttons () const"
   "QCheckBox * checkBox () const"
   "QAbstractButton * clickedButton () const"
   "QPushButton * defaultButton () const"
   "QString detailedText () const"
   "QAbstractButton * escapeButton () const"
   "Icon icon () const"
   "QPixmap iconPixmap () const"
   "QString informativeText () const"
   "void open ( QObject *  , const char *  )"
   "void removeButton ( QAbstractButton *  )"
   "void setCheckBox ( QCheckBox *  )"
   "void setDefaultButton ( QPushButton *  )"
   "void setDefaultButton ( StandardButton )"
   "void setDetailedText ( const QString &  )"
   "void setEscapeButton ( QAbstractButton *  )"
   "void setEscapeButton ( StandardButton )"
   "void setIcon ( Icon )"
   "void setIconPixmap ( const QPixmap &  )"
   "void setInformativeText ( const QString &  )"
   "void setStandardButtons ( StandardButtons )"
   "void setText ( const QString &  )"
   "void setTextFormat ( Qt::TextFormat )"
   "void setTextInteractionFlags ( Qt::TextInteractionFlags )"
   "void setWindowModality ( Qt::WindowModality )"
   "void setWindowTitle ( const QString &  )"
   "StandardButton standardButton ( QAbstractButton *  ) const"
   "StandardButtons standardButtons () const"
   "QString text () const"
   "Qt::TextFormat textFormat () const"
   "Qt::TextInteractionFlags textInteractionFlags () const"
   "virtual void setVisible ( bool )"
   "static void about ( QWidget *  , const QString &  , const QString &  )"
   "static void aboutQt ( QWidget *  , const QString &  = QString() )"
   "static StandardButton critical ( QWidget *  , const QString &  , const QString &  , StandardButtons = Ok , StandardButton = NoButton )"
   "static StandardButton information ( QWidget *  , const QString &  , const QString &  , StandardButtons = Ok , StandardButton = NoButton )"
   "static StandardButton question ( QWidget *  , const QString &  , const QString &  , StandardButtons = StandardButtons( Yes | No ) , StandardButton = NoButton )"
   "static StandardButton warning ( QWidget *  , const QString &  , const QString &  , StandardButtons = Ok , StandardButton = NoButton )")
  (("QMimeData" . "QObject")
   "new QMimeData ()"
   "void clear ()"
   "QVariant colorData () const"
   "QByteArray data ( const QString &  ) const"
   "virtual QStringList formats () const"
   "bool hasColor () const"
   "virtual bool hasFormat ( const QString &  ) const"
   "bool hasHtml () const"
   "bool hasImage () const"
   "bool hasText () const"
   "bool hasUrls () const"
   "QString html () const"
   "QVariant imageData () const"
   "void removeFormat ( const QString &  )"
   "void setColorData ( const QVariant &  )"
   "void setData ( const QString &  , const QByteArray &  )"
   "void setHtml ( const QString &  )"
   "void setImageData ( const QVariant &  )"
   "void setText ( const QString &  )"
   "void setUrls ( const QList<QUrl> &  )"
   "QString text () const"
   "QList<QUrl> urls () const")
  (("QMouseEventTransition" . "QEventTransition")
   "new QMouseEventTransition ( QState *  = 0 )"
   "new QMouseEventTransition ( QObject *  , QEvent::Type , Qt::MouseButton , QState *  = 0 )"
   "Qt::MouseButton button () const"
   "QPainterPath hitTestPath () const"
   "Qt::KeyboardModifiers modifierMask () const"
   "void setButton ( Qt::MouseButton )"
   "void setHitTestPath ( const QPainterPath &  )"
   "void setModifierMask ( Qt::KeyboardModifiers )")
  (("QMovie" . "QObject")
   "new QMovie ( QObject *  = 0 )"
   "new QMovie ( const QString &  , const QByteArray &  = QByteArray() , QObject *  = 0 )"
   "QColor backgroundColor () const"
   "CacheMode cacheMode () const"
   "int currentFrameNumber () const"
   "QImage currentImage () const"
   "QPixmap currentPixmap () const"
   "QString fileName () const"
   "QByteArray format () const"
   "int frameCount () const"
   "QRect frameRect () const"
   "bool isValid () const"
   "bool jumpToFrame ( int )"
   "int loopCount () const"
   "int nextFrameDelay () const"
   "QSize scaledSize ()"
   "void setBackgroundColor ( const QColor &  )"
   "void setCacheMode ( CacheMode )"
   "void setFileName ( const QString &  )"
   "void setFormat ( const QByteArray &  )"
   "void setScaledSize ( const QSize &  )"
   "int speed () const"
   "MovieState state () const"
   "static QList<QByteArray> supportedFormats ()")
  (("QNetworkAccessManager" . "QObject")
   "new QNetworkAccessManager ( QObject *  = 0 )"
   "QNetworkConfiguration activeConfiguration () const"
   "QAbstractNetworkCache * cache () const"
   "void clearAccessCache ()"
   "QNetworkConfiguration configuration () const"
   "void connectToHost ( const QString &  , quint16 = 80 )"
   "void connectToHostEncrypted ( const QString &  , quint16 = 443 , const QSslConfiguration &  = QSslConfiguration::defaultConfiguration() )"
   "QNetworkCookieJar * cookieJar () const"
   "QNetworkReply * deleteResource ( const QNetworkRequest &  )"
   "QNetworkReply * get ( const QNetworkRequest &  )"
   "QNetworkReply * head ( const QNetworkRequest &  )"
   "NetworkAccessibility networkAccessible () const"
   "QNetworkReply * post ( const QNetworkRequest &  , const QByteArray &  )"
   "QNetworkReply * post ( const QNetworkRequest &  , QHttpMultiPart *  )"
   "QNetworkProxy proxy () const"
   "QNetworkProxyFactory * proxyFactory () const"
   "QNetworkReply * put ( const QNetworkRequest &  , QHttpMultiPart *  )"
   "QNetworkReply * put ( const QNetworkRequest &  , const QByteArray &  )"
   "void setCache ( QAbstractNetworkCache *  )"
   "void setConfiguration ( const QNetworkConfiguration &  )"
   "void setCookieJar ( QNetworkCookieJar *  )"
   "void setNetworkAccessible ( NetworkAccessibility )"
   "void setProxy ( const QNetworkProxy &  )"
   "void setProxyFactory ( QNetworkProxyFactory *  )"
   "QStringList supportedSchemes () const")
  (("QNetworkCookieJar" . "QObject")
   "new QNetworkCookieJar ( QObject *  = 0 )"
   "virtual QList<QNetworkCookie> cookiesForUrl ( const QUrl &  ) const"
   "virtual bool deleteCookie ( const QNetworkCookie &  )"
   "virtual bool insertCookie ( const QNetworkCookie &  )"
   "virtual bool setCookiesFromUrl ( const QList<QNetworkCookie> &  , const QUrl &  )"
   "virtual bool updateCookie ( const QNetworkCookie &  )"
   "protected QList<QNetworkCookie> allCookies () const"
   "protected void setAllCookies ( const QList<QNetworkCookie> &  )")
  (("QNetworkDiskCache" . "QAbstractNetworkCache")
   "new QNetworkDiskCache ( QObject *  = 0 )"
   "QString cacheDirectory () const"
   "QNetworkCacheMetaData fileMetaData ( const QString &  ) const"
   "qint64 maximumCacheSize () const"
   "void setCacheDirectory ( const QString &  )"
   "void setMaximumCacheSize ( qint64 )"
   "virtual qint64 cacheSize () const"
   "virtual QNetworkCacheMetaData metaData ( const QUrl &  )"
   "virtual bool remove ( const QUrl &  )"
   "virtual void updateMetaData ( const QNetworkCacheMetaData &  )")
  (("QNetworkReply" . "QIODevice")
   "NetworkError error () const"
   "bool hasRawHeader ( const QByteArray &  ) const"
   "QVariant header ( QNetworkRequest::KnownHeaders ) const"
   "void ignoreSslErrors ( const QList<QSslError> &  )"
   "bool isFinished () const"
   "bool isRunning () const"
   "QNetworkAccessManager * manager () const"
   "QNetworkAccessManager::Operation operation () const"
   "QByteArray rawHeader ( const QByteArray &  ) const"
   "QList<QByteArray> rawHeaderList () const"
   "qint64 readBufferSize () const"
   "QNetworkRequest request () const"
   "virtual void setReadBufferSize ( qint64 )"
   "void setSslConfiguration ( const QSslConfiguration &  )"
   "QSslConfiguration sslConfiguration () const"
   "QUrl url () const"
   "protected void setError ( NetworkError , const QString &  )"
   "protected void setFinished ( bool )"
   "protected void setHeader ( QNetworkRequest::KnownHeaders , const QVariant &  )"
   "protected void setOperation ( QNetworkAccessManager::Operation )"
   "protected void setRawHeader ( const QByteArray &  , const QByteArray &  )"
   "protected void setRequest ( const QNetworkRequest &  )"
   "protected void setUrl ( const QUrl &  )"
   "virtual void close ()")
  (("QObject" . NIL)
   "new QObject ( QObject *  = 0 )"
   "bool blockSignals ( bool )"
   "const QObjectList & children () const"
   "void dumpObjectInfo ()"
   "void dumpObjectTree ()"
   "QList<QByteArray> dynamicPropertyNames () const"
   "virtual bool event ( QEvent *  )"
   "virtual bool eventFilter ( QObject *  , QEvent *  )"
   "bool inherits ( const char *  ) const"
   "void installEventFilter ( QObject *  )"
   "bool isWidgetType () const"
   "bool isWindowType () const"
   "void killTimer ( int )"
   "virtual const QMetaObject * metaObject () const"
   "void moveToThread ( QThread *  )"
   "QString objectName () const"
   "QObject * parent () const"
   "QVariant property ( const char *  ) const"
   "void removeEventFilter ( QObject *  )"
   "void setObjectName ( const QString &  )"
   "void setParent ( QObject *  )"
   "bool setProperty ( const char *  , const QVariant &  )"
   "bool signalsBlocked () const"
   "int startTimer ( int , Qt::TimerType = Qt::CoarseTimer )"
   "QThread * thread () const"
   "protected int receivers ( const char *  ) const"
   "protected QObject * sender () const"
   "protected int senderSignalIndex () const"
   "static QString tr ( const char *  , const char *  = 0 , int = -1 )")
  (("QObjectCleanupHandler" . "QObject")
   "QObject * add ( QObject *  )"
   "void clear ()"
   "bool isEmpty () const"
   "void remove ( QObject *  )")
  (("QOpenGLContext" . "QObject")
   "new QOpenGLContext ( QObject *  = 0 )"
   "bool create ()"
   "GLuint defaultFramebufferObject () const"
   "void doneCurrent ()"
   "QSurfaceFormat format () const"
   "QOpenGLFunctions * functions () const"
   "QFunctionPointer getProcAddress ( const QByteArray &  ) const"
   "bool hasExtension ( const QByteArray &  ) const"
   "bool isOpenGLES () const"
   "bool isValid () const"
   "bool makeCurrent ( QSurface *  )"
   "QScreen * screen () const"
   "void setFormat ( const QSurfaceFormat &  )"
   "void setScreen ( QScreen *  )"
   "void setShareContext ( QOpenGLContext *  )"
   "QOpenGLContext * shareContext () const"
   "QOpenGLContextGroup * shareGroup () const"
   "QSurface * surface () const"
   "void swapBuffers ( QSurface *  )"
   "static bool areSharing ( QOpenGLContext *  , QOpenGLContext *  )"
   "static QOpenGLContext * currentContext ()"
   "static QOpenGLContext * globalShareContext ()"
   "static OpenGLModuleType openGLModuleType ()"
   "static bool supportsThreadedOpenGL ()")
  (("QOpenGLShader" . "QObject")
   "new QOpenGLShader ( QOpenGLShader::ShaderType , QObject *  = 0 )"
   "bool compileSourceCode ( const char *  )"
   "bool compileSourceCode ( const QByteArray &  )"
   "bool compileSourceCode ( const QString &  )"
   "bool compileSourceFile ( const QString &  )"
   "bool isCompiled () const"
   "QString log () const"
   "GLuint shaderId () const"
   "QOpenGLShader::ShaderType shaderType () const"
   "QByteArray sourceCode () const"
   "static bool hasOpenGLShaders ( ShaderType , QOpenGLContext *  = 0 )")
  (("QOpenGLShaderProgram" . "QObject")
   "new QOpenGLShaderProgram ( QObject *  = 0 )"
   "bool addShader ( QOpenGLShader *  )"
   "bool addShaderFromSourceCode ( QOpenGLShader::ShaderType , const char *  )"
   "bool addShaderFromSourceCode ( QOpenGLShader::ShaderType , const QByteArray &  )"
   "bool addShaderFromSourceCode ( QOpenGLShader::ShaderType , const QString &  )"
   "bool addShaderFromSourceFile ( QOpenGLShader::ShaderType , const QString &  )"
   "int attributeLocation ( const char *  ) const"
   "int attributeLocation ( const QByteArray &  ) const"
   "int attributeLocation ( const QString &  ) const"
   "bool bind ()"
   "void bindAttributeLocation ( const char *  , int )"
   "void bindAttributeLocation ( const QByteArray &  , int )"
   "void bindAttributeLocation ( const QString &  , int )"
   "bool create ()"
   "QVector<float> defaultInnerTessellationLevels () const"
   "QVector<float> defaultOuterTessellationLevels () const"
   "void disableAttributeArray ( int )"
   "void disableAttributeArray ( const char *  )"
   "void enableAttributeArray ( int )"
   "void enableAttributeArray ( const char *  )"
   "bool isLinked () const"
   "virtual bool link ()"
   "QString log () const"
   "int maxGeometryOutputVertices () const"
   "int patchVertexCount () const"
   "GLuint programId () const"
   "void release ()"
   "void removeAllShaders ()"
   "void removeShader ( QOpenGLShader *  )"
   "void setAttributeBuffer ( int , GLenum , int , int , int = 0 )"
   "void setAttributeBuffer ( const char *  , GLenum , int , int , int = 0 )"
   "void setAttributeValue ( int , GLfloat )"
   "void setAttributeValue ( int , GLfloat , GLfloat )"
   "void setAttributeValue ( int , GLfloat , GLfloat , GLfloat )"
   "void setAttributeValue ( int , GLfloat , GLfloat , GLfloat , GLfloat )"
   "void setAttributeValue ( int , const QVector2D &  )"
   "void setAttributeValue ( int , const QVector3D &  )"
   "void setAttributeValue ( int , const QVector4D &  )"
   "void setAttributeValue ( int , const QColor &  )"
   "void setAttributeValue ( const char *  , GLfloat )"
   "void setAttributeValue ( const char *  , GLfloat , GLfloat )"
   "void setAttributeValue ( const char *  , GLfloat , GLfloat , GLfloat )"
   "void setAttributeValue ( const char *  , GLfloat , GLfloat , GLfloat , GLfloat )"
   "void setAttributeValue ( const char *  , const QVector2D &  )"
   "void setAttributeValue ( const char *  , const QVector3D &  )"
   "void setAttributeValue ( const char *  , const QVector4D &  )"
   "void setAttributeValue ( const char *  , const QColor &  )"
   "void setDefaultInnerTessellationLevels ( const QVector<float> &  )"
   "void setDefaultOuterTessellationLevels ( const QVector<float> &  )"
   "void setPatchVertexCount ( int )"
   "void setUniformValue ( int , GLfloat )"
   "void setUniformValue ( const char *  , const QPointF &  )"
   "void setUniformValue ( const char *  , const QSize &  )"
   "void setUniformValue ( const char *  , const QSizeF &  )"
   "void setUniformValue ( const char *  , const QMatrix4x4 &  )"
   "void setUniformValue ( const char *  , const QTransform &  )"
   "void setUniformValue ( int , GLint )"
   "void setUniformValue ( int , GLuint )"
   "void setUniformValue ( int , GLfloat , GLfloat )"
   "void setUniformValue ( int , GLfloat , GLfloat , GLfloat )"
   "void setUniformValue ( int , GLfloat , GLfloat , GLfloat , GLfloat )"
   "void setUniformValue ( int , const QVector2D &  )"
   "void setUniformValue ( int , const QVector3D &  )"
   "void setUniformValue ( int , const QVector4D &  )"
   "void setUniformValue ( int , const QColor &  )"
   "void setUniformValue ( int , const QPoint &  )"
   "void setUniformValue ( int , const QPointF &  )"
   "void setUniformValue ( int , const QSize &  )"
   "void setUniformValue ( int , const QSizeF &  )"
   "void setUniformValue ( int , const QMatrix4x4 &  )"
   "void setUniformValue ( int , const QTransform &  )"
   "void setUniformValue ( const char *  , GLfloat )"
   "void setUniformValue ( const char *  , GLint )"
   "void setUniformValue ( const char *  , GLuint )"
   "void setUniformValue ( const char *  , GLfloat , GLfloat )"
   "void setUniformValue ( const char *  , GLfloat , GLfloat , GLfloat )"
   "void setUniformValue ( const char *  , GLfloat , GLfloat , GLfloat , GLfloat )"
   "void setUniformValue ( const char *  , const QVector2D &  )"
   "void setUniformValue ( const char *  , const QVector3D &  )"
   "void setUniformValue ( const char *  , const QVector4D &  )"
   "void setUniformValue ( const char *  , const QColor &  )"
   "void setUniformValue ( const char *  , const QPoint &  )"
   "QList<QOpenGLShader *> shaders () const"
   "int uniformLocation ( const char *  ) const"
   "int uniformLocation ( const QByteArray &  ) const"
   "int uniformLocation ( const QString &  ) const"
   "static bool hasOpenGLShaderPrograms ( QOpenGLContext *  = 0 )")
  (("QOpenGLWidget" . "QWidget")
   "new QOpenGLWidget ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "QOpenGLContext * context () const"
   "GLuint defaultFramebufferObject () const"
   "void doneCurrent ()"
   "QSurfaceFormat format () const"
   "QImage grabFramebuffer ()"
   "bool isValid () const"
   "void makeCurrent ()"
   "void setFormat ( const QSurfaceFormat &  )"
   "void setUpdateBehavior ( UpdateBehavior )"
   "UpdateBehavior updateBehavior () const")
  (("QOpenGLWindow" . "QPaintDeviceWindow")
   "new QOpenGLWindow ( UpdateBehavior = NoPartialUpdate , QWindow *  = 0 )"
   "new QOpenGLWindow ( QOpenGLContext *  , UpdateBehavior = NoPartialUpdate , QWindow *  = 0 )"
   "QOpenGLContext * context () const"
   "GLuint defaultFramebufferObject () const"
   "void doneCurrent ()"
   "QImage grabFramebuffer ()"
   "bool isValid () const"
   "void makeCurrent ()"
   "QOpenGLContext * shareContext () const"
   "UpdateBehavior updateBehavior () const")
  (("QPageSetupDialog" . "QDialog")
   "new QPageSetupDialog ( QPrinter *  , QWidget *  = 0 )"
   "new QPageSetupDialog ( QWidget *  = 0 )"
   "void open ( QObject *  , const char *  )"
   "QPrinter * printer ()"
   "virtual void done ( int )"
   "virtual int exec ()"
   "virtual void setVisible ( bool )")
  (("QPaintDeviceWindow" . "QWindow")
   "void update ( const QRect &  )"
   "void update ( const QRegion &  )")
  (("QPanGesture" . "QGesture")
   "qreal acceleration () const"
   "QPointF delta () const"
   "QPointF lastOffset () const"
   "QPointF offset () const"
   "void setAcceleration ( qreal )"
   "void setLastOffset ( const QPointF &  )"
   "void setOffset ( const QPointF &  )")
  (("QParallelAnimationGroup" . "QAnimationGroup")
   "new QParallelAnimationGroup ( QObject *  = 0 )"
   "virtual int duration () const")
  (("QPauseAnimation" . "QAbstractAnimation")
   "new QPauseAnimation ( QObject *  = 0 )"
   "new QPauseAnimation ( int , QObject *  = 0 )"
   "void setDuration ( int )"
   "virtual int duration () const")
  (("QPdfWriter" . "QObject")
   "new QPdfWriter ( const QString &  )"
   "QString creator () const"
   "QPageLayout pageLayout () const"
   "int resolution () const"
   "void setCreator ( const QString &  )"
   "bool setPageLayout ( const QPageLayout &  )"
   "bool setPageMargins ( const QMarginsF &  )"
   "bool setPageMargins ( const QMarginsF &  , QPageLayout::Unit )"
   "bool setPageOrientation ( QPageLayout::Orientation )"
   "bool setPageSize ( const QPageSize &  )"
   "void setResolution ( int )"
   "void setTitle ( const QString &  )"
   "QString title () const"
   "virtual bool newPage ()")
  (("QPinchGesture" . "QGesture")
   "QPointF centerPoint () const"
   "ChangeFlags changeFlags () const"
   "QPointF lastCenterPoint () const"
   "qreal lastRotationAngle () const"
   "qreal lastScaleFactor () const"
   "qreal rotationAngle () const"
   "qreal scaleFactor () const"
   "void setCenterPoint ( const QPointF &  )"
   "void setChangeFlags ( ChangeFlags )"
   "void setLastCenterPoint ( const QPointF &  )"
   "void setLastRotationAngle ( qreal )"
   "void setLastScaleFactor ( qreal )"
   "void setRotationAngle ( qreal )"
   "void setScaleFactor ( qreal )"
   "void setStartCenterPoint ( const QPointF &  )"
   "void setTotalChangeFlags ( ChangeFlags )"
   "void setTotalRotationAngle ( qreal )"
   "void setTotalScaleFactor ( qreal )"
   "QPointF startCenterPoint () const"
   "ChangeFlags totalChangeFlags () const"
   "qreal totalRotationAngle () const"
   "qreal totalScaleFactor () const")
  (("QPlainTextDocumentLayout" . "QAbstractTextDocumentLayout")
   "new QPlainTextDocumentLayout ( QTextDocument *  )"
   "int cursorWidth () const"
   "void ensureBlockLayout ( const QTextBlock &  ) const"
   "void requestUpdate ()"
   "void setCursorWidth ( int )"
   "virtual QRectF blockBoundingRect ( const QTextBlock &  ) const"
   "virtual QSizeF documentSize () const"
   "virtual void draw ( QPainter * , const PaintContext & )"
   "virtual QRectF frameBoundingRect ( QTextFrame * ) const"
   "virtual int hitTest ( const QPointF & , Qt::HitTestAccuracy ) const"
   "virtual int pageCount () const")
  (("QPlainTextEdit" . "QAbstractScrollArea")
   "new QPlainTextEdit ( QWidget *  = 0 )"
   "new QPlainTextEdit ( const QString &  , QWidget *  = 0 )"
   "QString anchorAt ( const QPoint &  ) const"
   "bool backgroundVisible () const"
   "int blockCount () const"
   "bool canPaste () const"
   "bool centerOnScroll () const"
   "QMenu * createStandardContextMenu ()"
   "QMenu * createStandardContextMenu ( const QPoint &  )"
   "QTextCharFormat currentCharFormat () const"
   "QTextCursor cursorForPosition ( const QPoint &  ) const"
   "QRect cursorRect ( const QTextCursor &  ) const"
   "QRect cursorRect () const"
   "int cursorWidth () const"
   "QTextDocument * document () const"
   "QString documentTitle () const"
   "void ensureCursorVisible ()"
   "QList<QTextEdit::ExtraSelection> extraSelections () const"
   "bool find ( const QString &  , QTextDocument::FindFlags = 0 )"
   "bool find ( const QRegExp &  , QTextDocument::FindFlags = 0 )"
   "bool isReadOnly () const"
   "bool isUndoRedoEnabled () const"
   "LineWrapMode lineWrapMode () const"
   "virtual QVariant loadResource ( int , const QUrl &  )"
   "int maximumBlockCount () const"
   "void mergeCurrentCharFormat ( const QTextCharFormat &  )"
   "void moveCursor ( QTextCursor::MoveOperation , QTextCursor::MoveMode = QTextCursor::MoveAnchor )"
   "bool overwriteMode () const"
   "void print ( QPagedPaintDevice *  ) const"
   "void setBackgroundVisible ( bool )"
   "void setCenterOnScroll ( bool )"
   "void setCurrentCharFormat ( const QTextCharFormat &  )"
   "void setCursorWidth ( int )"
   "void setDocument ( QTextDocument *  )"
   "void setDocumentTitle ( const QString &  )"
   "void setExtraSelections ( const QList<QTextEdit::ExtraSelection> &  )"
   "void setLineWrapMode ( LineWrapMode )"
   "void setMaximumBlockCount ( int )"
   "void setOverwriteMode ( bool )"
   "void setReadOnly ( bool )"
   "void setTabChangesFocus ( bool )"
   "void setTabStopWidth ( int )"
   "void setTextCursor ( const QTextCursor &  )"
   "void setTextInteractionFlags ( Qt::TextInteractionFlags )"
   "void setUndoRedoEnabled ( bool )"
   "void setWordWrapMode ( QTextOption::WrapMode )"
   "bool tabChangesFocus () const"
   "int tabStopWidth () const"
   "QTextCursor textCursor () const"
   "Qt::TextInteractionFlags textInteractionFlags () const"
   "QString toPlainText () const"
   "QTextOption::WrapMode wordWrapMode () const"
   "protected QRectF blockBoundingGeometry ( const QTextBlock &  ) const"
   "protected QRectF blockBoundingRect ( const QTextBlock &  ) const"
   "protected QPointF contentOffset () const"
   "protected QTextBlock firstVisibleBlock () const"
   "protected QAbstractTextDocumentLayout::PaintContext getPaintContext () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const")
  (("QPluginLoader" . "QObject")
   "new QPluginLoader ( QObject *  = 0 )"
   "new QPluginLoader ( const QString &  , QObject *  = 0 )"
   "QString errorString () const"
   "QString fileName () const"
   "QObject * instance ()"
   "bool isLoaded () const"
   "bool load ()"
   "QLibrary::LoadHints loadHints () const"
   "QJsonObject metaData () const"
   "void setFileName ( const QString &  )"
   "void setLoadHints ( QLibrary::LoadHints )"
   "bool unload ()"
   "static QObjectList staticInstances ()"
   "static QVector<QStaticPlugin> staticPlugins ()")
  (("QPrintDialog" . "QAbstractPrintDialog")
   "new QPrintDialog ( QPrinter *  , QWidget *  = 0 )"
   "new QPrintDialog ( QWidget *  = 0 )"
   "void open ( QObject *  , const char *  )"
   "PrintDialogOptions options () const"
   "QPrinter * printer ()"
   "void setOption ( PrintDialogOption , bool = true )"
   "void setOptions ( PrintDialogOptions )"
   "bool testOption ( PrintDialogOption ) const"
   "virtual void done ( int )"
   "virtual int exec ()"
   "virtual void setVisible ( bool )")
  (("QPrintPreviewDialog" . "QDialog")
   "new QPrintPreviewDialog ( QPrinter *  , QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "new QPrintPreviewDialog ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "void open ( QObject *  , const char *  )"
   "QPrinter * printer ()"
   "virtual void done ( int )"
   "virtual void setVisible ( bool )")
  (("QPrintPreviewWidget" . "QWidget")
   "new QPrintPreviewWidget ( QPrinter *  , QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "new QPrintPreviewWidget ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "int currentPage () const"
   "QPrinter::Orientation orientation () const"
   "int pageCount () const"
   "ViewMode viewMode () const"
   "qreal zoomFactor () const"
   "ZoomMode zoomMode () const"
   "virtual void setVisible ( bool )")
  (("QProcess" . "QIODevice")
   "new QProcess ( QObject *  = 0 )"
   "QStringList arguments () const"
   "void closeReadChannel ( ProcessChannel )"
   "void closeWriteChannel ()"
   "QProcess::ProcessError error () const"
   "int exitCode () const"
   "QProcess::ExitStatus exitStatus () const"
   "InputChannelMode inputChannelMode () const"
   "ProcessChannelMode processChannelMode () const"
   "QProcessEnvironment processEnvironment () const"
   "qint64 processId () const"
   "QString program () const"
   "QByteArray readAllStandardError ()"
   "QByteArray readAllStandardOutput ()"
   "ProcessChannel readChannel () const"
   "void setArguments ( const QStringList &  )"
   "void setInputChannelMode ( InputChannelMode )"
   "void setProcessChannelMode ( ProcessChannelMode )"
   "void setProcessEnvironment ( const QProcessEnvironment &  )"
   "void setProgram ( const QString &  )"
   "void setReadChannel ( ProcessChannel )"
   "void setStandardErrorFile ( const QString &  , OpenMode = Truncate )"
   "void setStandardInputFile ( const QString &  )"
   "void setStandardOutputFile ( const QString &  , OpenMode = Truncate )"
   "void setStandardOutputProcess ( QProcess *  )"
   "void setWorkingDirectory ( const QString &  )"
   "void start ( const QString &  , const QStringList &  , OpenMode = ReadWrite )"
   "void start ( OpenMode = ReadWrite )"
   "void start ( const QString &  , OpenMode = ReadWrite )"
   "QProcess::ProcessState state () const"
   "bool waitForFinished ( int = 30000 )"
   "bool waitForStarted ( int = 30000 )"
   "QString workingDirectory () const"
   "protected void setProcessState ( ProcessState )"
   "virtual bool atEnd () const"
   "virtual qint64 bytesAvailable () const"
   "virtual qint64 bytesToWrite () const"
   "virtual bool canReadLine () const"
   "virtual void close ()"
   "virtual bool isSequential () const"
   "virtual bool open ( OpenMode = ReadWrite )"
   "virtual bool waitForBytesWritten ( int = 30000 )"
   "virtual bool waitForReadyRead ( int = 30000 )"
   "static int execute ( const QString &  , const QStringList &  )"
   "static int execute ( const QString &  )"
   "static QString nullDevice ()"
   "static bool startDetached ( const QString &  , const QStringList &  , const QString &  = QString() , qint64 *  = 0 )"
   "static bool startDetached ( const QString &  )"
   "static QStringList systemEnvironment ()")
  (("QProgressBar" . "QWidget")
   "new QProgressBar ( QWidget *  = 0 )"
   "Qt::Alignment alignment () const"
   "QString format () const"
   "bool invertedAppearance () const"
   "bool isTextVisible () const"
   "int maximum () const"
   "int minimum () const"
   "Qt::Orientation orientation () const"
   "void resetFormat ()"
   "void setAlignment ( Qt::Alignment )"
   "void setFormat ( const QString &  )"
   "void setInvertedAppearance ( bool )"
   "void setTextDirection ( QProgressBar::Direction )"
   "void setTextVisible ( bool )"
   "virtual QString text () const"
   "QProgressBar::Direction textDirection () const"
   "int value () const"
   "protected void initStyleOption ( QStyleOptionProgressBar *  ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QProgressDialog" . "QDialog")
   "new QProgressDialog ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "new QProgressDialog ( const QString &  , const QString &  , int , int , QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "bool autoClose () const"
   "bool autoReset () const"
   "QString labelText () const"
   "int maximum () const"
   "int minimum () const"
   "int minimumDuration () const"
   "void open ( QObject *  , const char *  )"
   "void setAutoClose ( bool )"
   "void setAutoReset ( bool )"
   "void setBar ( QProgressBar *  )"
   "void setCancelButton ( QPushButton *  )"
   "void setLabel ( QLabel *  )"
   "int value () const"
   "bool wasCanceled () const"
   "virtual QSize sizeHint () const")
  (("QPropertyAnimation" . "QVariantAnimation")
   "new QPropertyAnimation ( QObject *  = 0 )"
   "new QPropertyAnimation ( QObject *  , const QByteArray &  , QObject *  = 0 )"
   "QByteArray propertyName () const"
   "void setPropertyName ( const QByteArray &  )"
   "void setTargetObject ( QObject *  )"
   "QObject * targetObject () const")
  (("QProxyStyle" . "QCommonStyle")
   "new QProxyStyle ( QStyle *  = 0 )"
   "new QProxyStyle ( const QString &  )"
   "QStyle * baseStyle () const"
   "void setBaseStyle ( QStyle *  )"
   "virtual void drawComplexControl ( ComplexControl , const QStyleOptionComplex *  , QPainter *  , const QWidget *  = 0 ) const"
   "virtual void drawControl ( ControlElement , const QStyleOption *  , QPainter *  , const QWidget *  = 0 ) const"
   "virtual void drawItemPixmap ( QPainter *  , const QRect &  , int , const QPixmap &  ) const"
   "virtual void drawItemText ( QPainter *  , const QRect &  , int , const QPalette &  , bool , const QString &  , QPalette::ColorRole = QPalette::NoRole ) const"
   "virtual void drawPrimitive ( PrimitiveElement , const QStyleOption *  , QPainter *  , const QWidget *  = 0 ) const"
   "virtual QPixmap generatedIconPixmap ( QIcon::Mode , const QPixmap &  , const QStyleOption *  ) const"
   "virtual SubControl hitTestComplexControl ( ComplexControl , const QStyleOptionComplex *  , const QPoint &  , const QWidget *  = 0 ) const"
   "virtual QRect itemPixmapRect ( const QRect &  , int , const QPixmap &  ) const"
   "virtual QRect itemTextRect ( const QFontMetrics &  , const QRect &  , int , bool , const QString &  ) const"
   "virtual int layoutSpacing ( QSizePolicy::ControlType , QSizePolicy::ControlType , Qt::Orientation , const QStyleOption *  = 0 , const QWidget *  = 0 ) const"
   "virtual int pixelMetric ( PixelMetric , const QStyleOption *  = 0 , const QWidget *  = 0 ) const"
   "virtual void polish ( QWidget *  )"
   "virtual void polish ( QPalette &  )"
   "virtual void polish ( QApplication *  )"
   "virtual QSize sizeFromContents ( ContentsType , const QStyleOption *  , const QSize &  , const QWidget *  ) const"
   "virtual QIcon standardIcon ( StandardPixmap , const QStyleOption *  = 0 , const QWidget *  = 0 ) const"
   "virtual QPalette standardPalette () const"
   "virtual QPixmap standardPixmap ( StandardPixmap , const QStyleOption *  , const QWidget *  = 0 ) const"
   "virtual int styleHint ( StyleHint , const QStyleOption *  = 0 , const QWidget *  = 0 , QStyleHintReturn *  = 0 ) const"
   "virtual QRect subControlRect ( ComplexControl , const QStyleOptionComplex *  , SubControl , const QWidget *  ) const"
   "virtual QRect subElementRect ( SubElement , const QStyleOption *  , const QWidget *  ) const"
   "virtual void unpolish ( QWidget *  )"
   "virtual void unpolish ( QApplication *  )")
  (("QPushButton" . "QAbstractButton")
   "new QPushButton ( QWidget *  = 0 )"
   "new QPushButton ( const QString &  , QWidget *  = 0 )"
   "new QPushButton ( const QIcon &  , const QString &  , QWidget *  = 0 )"
   "bool autoDefault () const"
   "bool isDefault () const"
   "bool isFlat () const"
   "QMenu * menu () const"
   "void setAutoDefault ( bool )"
   "void setDefault ( bool )"
   "void setFlat ( bool )"
   "void setMenu ( QMenu *  )"
   "protected void initStyleOption ( QStyleOptionButton *  ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QQmlApplicationEngine" . "QQmlEngine")
   "new QQmlApplicationEngine ( QObject *  = 0 )"
   "new QQmlApplicationEngine ( const QUrl &  , QObject *  = 0 )"
   "new QQmlApplicationEngine ( const QString &  , QObject *  = 0 )"
   "QList<QObject *> rootObjects ()")
  (("QQmlComponent" . "QObject")
   "new QQmlComponent ( QQmlEngine *  , QObject *  = 0 )"
   "new QQmlComponent ( QQmlEngine *  , const QString &  , QObject *  = 0 )"
   "new QQmlComponent ( QQmlEngine *  , const QString &  , CompilationMode , QObject *  = 0 )"
   "new QQmlComponent ( QQmlEngine *  , const QUrl &  , QObject *  = 0 )"
   "new QQmlComponent ( QQmlEngine *  , const QUrl &  , CompilationMode , QObject *  = 0 )"
   "virtual QObject * beginCreate ( QQmlContext *  )"
   "virtual void completeCreate ()"
   "virtual QObject * create ( QQmlContext *  = 0 )"
   "void create ( QQmlIncubator &  , QQmlContext *  = 0 , QQmlContext *  = 0 )"
   "QQmlContext * creationContext () const"
   "QList<QQmlError> errors () const"
   "bool isError () const"
   "bool isLoading () const"
   "bool isNull () const"
   "bool isReady () const"
   "qreal progress () const"
   "Status status () const"
   "QUrl url () const")
  (("QQmlContext" . "QObject")
   "new QQmlContext ( QQmlEngine *  , QObject *  = 0 )"
   "new QQmlContext ( QQmlContext *  , QObject *  = 0 )"
   "QUrl baseUrl () const"
   "QObject * contextObject () const"
   "QVariant contextProperty ( const QString &  ) const"
   "QQmlEngine * engine () const"
   "bool isValid () const"
   "QString nameForObject ( QObject *  ) const"
   "QQmlContext * parentContext () const"
   "QUrl resolvedUrl ( const QUrl &  )"
   "void setBaseUrl ( const QUrl &  )"
   "void setContextObject ( QObject *  )"
   "void setContextProperty ( const QString &  , QObject *  )"
   "void setContextProperty ( const QString &  , const QVariant &  )")
  (("QQmlEngine" . "QJSEngine")
   "new QQmlEngine ( QObject *  = 0 )"
   "void addImageProvider ( const QString &  , QQmlImageProviderBase *  )"
   "void addImportPath ( const QString &  )"
   "void addPluginPath ( const QString &  )"
   "QUrl baseUrl () const"
   "void clearComponentCache ()"
   "QQmlImageProviderBase * imageProvider ( const QString &  ) const"
   "QStringList importPathList () const"
   "bool importPlugin ( const QString &  , const QString &  , QList<QQmlError> *  )"
   "QQmlIncubationController * incubationController () const"
   "QNetworkAccessManager * networkAccessManager () const"
   "QQmlNetworkAccessManagerFactory * networkAccessManagerFactory () const"
   "QString offlineStoragePath () const"
   "bool outputWarningsToStandardError () const"
   "QStringList pluginPathList () const"
   "void removeImageProvider ( const QString &  )"
   "QQmlContext * rootContext () const"
   "void setBaseUrl ( const QUrl &  )"
   "void setImportPathList ( const QStringList &  )"
   "void setIncubationController ( QQmlIncubationController *  )"
   "void setNetworkAccessManagerFactory ( QQmlNetworkAccessManagerFactory *  )"
   "void setOfflineStoragePath ( const QString &  )"
   "void setOutputWarningsToStandardError ( bool )"
   "void setPluginPathList ( const QStringList &  )"
   "void trimComponentCache ()"
   "static QQmlContext * contextForObject ( const QObject *  )"
   "static ObjectOwnership objectOwnership ( QObject *  )"
   "static void setContextForObject ( QObject *  , QQmlContext *  )"
   "static void setObjectOwnership ( QObject *  , ObjectOwnership )")
  (("QQmlExpression" . "QObject")
   "new QQmlExpression ()"
   "new QQmlExpression ( QQmlContext *  , QObject *  , const QString &  , QObject *  = 0 )"
   "new QQmlExpression ( const QQmlScriptString &  , QQmlContext *  = 0 , QObject *  = 0 , QObject *  = 0 )"
   "void clearError ()"
   "int columnNumber () const"
   "QQmlContext * context () const"
   "QQmlEngine * engine () const"
   "QQmlError error () const"
   "QVariant evaluate ( bool *  = 0 )"
   "QString expression () const"
   "bool hasError () const"
   "int lineNumber () const"
   "bool notifyOnValueChanged () const"
   "QObject * scopeObject () const"
   "void setExpression ( const QString &  )"
   "void setNotifyOnValueChanged ( bool )"
   "void setSourceLocation ( const QString &  , int , int = 0 )"
   "QString sourceFile () const")
  (("QQmlExtensionPlugin" . "QObject")
   "new QQmlExtensionPlugin ( QObject *  = 0 )"
   "QUrl baseUrl () const"
   "virtual void initializeEngine ( QQmlEngine *  , const char *  )"
   "virtual void registerTypes ( const char *  ) = 0")
  (("QQmlFileSelector" . "QObject")
   "new QQmlFileSelector ( QQmlEngine *  , QObject *  = 0 )"
   "void setExtraSelectors ( QStringList &  )"
   "void setExtraSelectors ( const QStringList &  )"
   "void setSelector ( QFileSelector *  )"
   "static QQmlFileSelector * get ( QQmlEngine *  )")
  (("QQmlPropertyMap" . "QObject")
   "new QQmlPropertyMap ( QObject *  = 0 )"
   "void clear ( const QString &  )"
   "bool contains ( const QString &  ) const"
   "int count () const"
   "void insert ( const QString &  , const QVariant &  )"
   "bool isEmpty () const"
   "QStringList keys () const"
   "int size () const"
   "QVariant value ( const QString &  ) const")
  (("QQuickFramebufferObject" . "QQuickItem")
   "void setTextureFollowsItemSize ( bool )"
   "bool textureFollowsItemSize () const"
   "virtual bool isTextureProvider () const"
   "virtual void releaseResources ()"
   "virtual QSGTextureProvider * textureProvider () const")
  (("QQuickItem" . "QObject")
   "new QQuickItem ( QQuickItem *  = 0 )"
   "bool acceptHoverEvents () const"
   "Qt::MouseButtons acceptedMouseButtons () const"
   "bool activeFocusOnTab () const"
   "bool antialiasing () const"
   "qreal baselineOffset () const"
   "QQuickItem * childAt ( qreal , qreal ) const"
   "QList<QQuickItem *> childItems () const"
   "QRectF childrenRect ()"
   "bool clip () const"
   "virtual bool contains ( const QPointF &  ) const"
   "QCursor cursor () const"
   "bool filtersChildMouseEvents () const"
   "Flags flags () const"
   "void forceActiveFocus ()"
   "void forceActiveFocus ( Qt::FocusReason )"
   "void grabMouse ()"
   "void grabTouchPoints ( const QVector<int> &  )"
   "bool hasActiveFocus () const"
   "bool hasFocus () const"
   "qreal height () const"
   "qreal implicitHeight () const"
   "qreal implicitWidth () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "bool isEnabled () const"
   "bool isFocusScope () const"
   "virtual bool isTextureProvider () const"
   "bool isVisible () const"
   "bool keepMouseGrab () const"
   "bool keepTouchGrab () const"
   "QPointF mapFromItem ( const QQuickItem *  , const QPointF &  ) const"
   "QPointF mapFromScene ( const QPointF &  ) const"
   "QRectF mapRectFromItem ( const QQuickItem *  , const QRectF &  ) const"
   "QRectF mapRectFromScene ( const QRectF &  ) const"
   "QRectF mapRectToItem ( const QQuickItem *  , const QRectF &  ) const"
   "QRectF mapRectToScene ( const QRectF &  ) const"
   "QPointF mapToItem ( const QQuickItem *  , const QPointF &  ) const"
   "QPointF mapToScene ( const QPointF &  ) const"
   "QQuickItem * nextItemInFocusChain ( bool = true )"
   "qreal opacity () const"
   "QQuickItem * parentItem () const"
   "void polish ()"
   "void resetAntialiasing ()"
   "void resetHeight ()"
   "void resetWidth ()"
   "qreal rotation () const"
   "qreal scale () const"
   "QQuickItem * scopedFocusItem () const"
   "void setAcceptHoverEvents ( bool )"
   "void setAcceptedMouseButtons ( Qt::MouseButtons )"
   "void setActiveFocusOnTab ( bool )"
   "void setAntialiasing ( bool )"
   "void setBaselineOffset ( qreal )"
   "void setClip ( bool )"
   "void setCursor ( const QCursor &  )"
   "void setEnabled ( bool )"
   "void setFiltersChildMouseEvents ( bool )"
   "void setFlag ( Flag , bool = true )"
   "void setFlags ( Flags )"
   "void setFocus ( bool )"
   "void setFocus ( bool , Qt::FocusReason )"
   "void setHeight ( qreal )"
   "void setImplicitHeight ( qreal )"
   "void setImplicitWidth ( qreal )"
   "void setKeepMouseGrab ( bool )"
   "void setKeepTouchGrab ( bool )"
   "void setOpacity ( qreal )"
   "void setParentItem ( QQuickItem *  )"
   "void setRotation ( qreal )"
   "void setScale ( qreal )"
   "void setSmooth ( bool )"
   "void setState ( const QString & )"
   "void setTransformOrigin ( TransformOrigin )"
   "void setVisible ( bool )"
   "void setWidth ( qreal )"
   "void setX ( qreal )"
   "void setY ( qreal )"
   "void setZ ( qreal )"
   "bool smooth () const"
   "void stackAfter ( const QQuickItem *  )"
   "void stackBefore ( const QQuickItem *  )"
   "QString state () const"
   "virtual QSGTextureProvider * textureProvider () const"
   "TransformOrigin transformOrigin () const"
   "void ungrabMouse ()"
   "void ungrabTouchPoints ()"
   "void unsetCursor ()"
   "qreal width () const"
   "QQuickWindow * window () const"
   "qreal x () const"
   "qreal y () const"
   "qreal z () const"
   "protected void classBegin ()"
   "protected void componentComplete ()"
   "protected bool event ( QEvent *  )"
   "protected bool heightValid () const"
   "protected bool isComponentComplete () const"
   "protected void updateInputMethod ( Qt::InputMethodQueries = Qt::ImQueryInput )"
   "protected bool widthValid () const")
  (("QQuickItemGrabResult" . "QObject")
   "QImage image () const"
   "bool saveToFile ( const QString &  )"
   "QUrl url () const")
  (("QQuickPaintedItem" . "QQuickItem")
   "new QQuickPaintedItem ( QQuickItem *  = 0 )"
   "bool antialiasing () const"
   "QRectF contentsBoundingRect () const"
   "qreal contentsScale () const"
   "QSize contentsSize () const"
   "QColor fillColor () const"
   "bool mipmap () const"
   "bool opaquePainting () const"
   "virtual void paint ( QPainter *  ) = 0"
   "PerformanceHints performanceHints () const"
   "RenderTarget renderTarget () const"
   "void resetContentsSize ()"
   "void setAntialiasing ( bool )"
   "void setContentsScale ( qreal )"
   "void setContentsSize ( const QSize & )"
   "void setFillColor ( const QColor & )"
   "void setMipmap ( bool )"
   "void setOpaquePainting ( bool )"
   "void setPerformanceHint ( PerformanceHint , bool = true )"
   "void setPerformanceHints ( PerformanceHints )"
   "void setRenderTarget ( RenderTarget )"
   "void update ( const QRect &  = QRect() )"
   "virtual bool isTextureProvider () const"
   "virtual QSGTextureProvider * textureProvider () const")
  (("QQuickRenderControl" . "QObject")
   "new QQuickRenderControl ( QObject *  = 0 )"
   "QImage grab ()"
   "void initialize ( QOpenGLContext *  )"
   "void invalidate ()"
   "void polishItems ()"
   "void prepareThread ( QThread *  )"
   "void render ()"
   "bool sync ()")
  (("QQuickTextDocument" . "QObject")
   "new QQuickTextDocument ( QQuickItem *  )"
   "QTextDocument * textDocument () const")
  (("QQuickTextureFactory" . "QObject")
   "new QQuickTextureFactory ()"
   "virtual QSGTexture * createTexture ( QQuickWindow *  ) const = 0"
   "virtual QImage image () const"
   "virtual int textureByteCount () const = 0"
   "virtual QSize textureSize () const = 0")
  (("QQuickView" . "QQuickWindow")
   "new QQuickView ( QWindow *  = 0 )"
   "new QQuickView ( QQmlEngine *  , QWindow *  )"
   "new QQuickView ( const QUrl &  , QWindow *  = 0 )"
   "QQmlEngine * engine () const"
   "QList<QQmlError> errors () const"
   "QSize initialSize () const"
   "ResizeMode resizeMode () const"
   "QQmlContext * rootContext () const"
   "QQuickItem * rootObject () const"
   "void setResizeMode ( ResizeMode )"
   "QUrl source () const"
   "Status status () const"
   "protected void keyPressEvent ( QKeyEvent *  )"
   "protected void keyReleaseEvent ( QKeyEvent *  )"
   "protected void mouseMoveEvent ( QMouseEvent *  )"
   "protected void mousePressEvent ( QMouseEvent *  )"
   "protected void mouseReleaseEvent ( QMouseEvent *  )")
  (("QQuickWidget" . "QWidget")
   "new QQuickWidget ( QWidget *  = 0 )"
   "new QQuickWidget ( QQmlEngine *  , QWidget *  )"
   "new QQuickWidget ( const QUrl &  , QWidget *  = 0 )"
   "QQmlEngine * engine () const"
   "QList<QQmlError> errors () const"
   "QSurfaceFormat format () const"
   "QImage grabFramebuffer () const"
   "QSize initialSize () const"
   "QQuickWindow * quickWindow () const"
   "ResizeMode resizeMode () const"
   "QQmlContext * rootContext () const"
   "QQuickItem * rootObject () const"
   "void setClearColor ( const QColor &  )"
   "void setFormat ( const QSurfaceFormat &  )"
   "void setResizeMode ( ResizeMode )"
   "QUrl source () const"
   "Status status () const"
   "protected bool event ( QEvent *  )")
  (("QQuickWindow" . "QWindow")
   "new QQuickWindow ( QWindow *  = 0 )"
   "QAccessibleInterface * accessibleRoot () const"
   "QQuickItem * activeFocusItem () const"
   "bool clearBeforeRendering () const"
   "QColor color () const"
   "QQuickItem * contentItem () const"
   "QSGTexture * createTextureFromId ( uint , const QSize &  , CreateTextureOptions = 0 ) const"
   "QSGTexture * createTextureFromImage ( const QImage &  , CreateTextureOptions ) const"
   "QSGTexture * createTextureFromImage ( const QImage &  ) const"
   "qreal effectiveDevicePixelRatio () const"
   "QImage grabWindow ()"
   "QQmlIncubationController * incubationController () const"
   "bool isPersistentOpenGLContext () const"
   "bool isPersistentSceneGraph () const"
   "bool isSceneGraphInitialized () const"
   "QQuickItem * mouseGrabberItem () const"
   "QOpenGLContext * openglContext () const"
   "QOpenGLFramebufferObject * renderTarget () const"
   "uint renderTargetId () const"
   "QSize renderTargetSize () const"
   "void resetOpenGLState ()"
   "void scheduleRenderJob ( QRunnable *  , RenderStage )"
   "bool sendEvent ( QQuickItem *  , QEvent *  )"
   "void setClearBeforeRendering ( bool )"
   "void setColor ( const QColor &  )"
   "void setPersistentOpenGLContext ( bool )"
   "void setPersistentSceneGraph ( bool )"
   "void setRenderTarget ( QOpenGLFramebufferObject *  )"
   "void setRenderTarget ( uint , const QSize &  )"
   "protected bool event ( QEvent *  )"
   "protected void exposeEvent ( QExposeEvent * )"
   "protected void focusInEvent ( QFocusEvent *  )"
   "protected void focusOutEvent ( QFocusEvent *  )"
   "protected void hideEvent ( QHideEvent * )"
   "protected void keyPressEvent ( QKeyEvent *  )"
   "protected void keyReleaseEvent ( QKeyEvent *  )"
   "protected void mouseDoubleClickEvent ( QMouseEvent *  )"
   "protected void mouseMoveEvent ( QMouseEvent *  )"
   "protected void mousePressEvent ( QMouseEvent *  )"
   "protected void mouseReleaseEvent ( QMouseEvent *  )"
   "protected void resizeEvent ( QResizeEvent *  )"
   "protected void showEvent ( QShowEvent * )"
   "protected void wheelEvent ( QWheelEvent *  )"
   "static bool hasDefaultAlphaBuffer ()"
   "static void setDefaultAlphaBuffer ( bool )")
  (("QRadioButton" . "QAbstractButton")
   "new QRadioButton ( QWidget *  = 0 )"
   "new QRadioButton ( const QString &  , QWidget *  = 0 )"
   "protected void initStyleOption ( QStyleOptionButton *  ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QRadioTuner" . "QMediaObject")
   "new QRadioTuner ( QObject *  = 0 )"
   "Band band () const"
   "Error error () const"
   "QString errorString () const"
   "int frequency () const"
   "int frequencyStep ( Band ) const"
   "bool isAntennaConnected () const"
   "bool isBandSupported ( Band ) const"
   "bool isMuted () const"
   "bool isSearching () const"
   "bool isStereo () const"
   "QRadioData * radioData () const"
   "void setStereoMode ( QRadioTuner::StereoMode )"
   "int signalStrength () const"
   "State state () const"
   "StereoMode stereoMode () const"
   "int volume () const"
   "virtual QMultimedia::AvailabilityStatus availability () const")
  (("QRegExpValidator" . "QValidator")
   "new QRegExpValidator ( QObject *  = 0 )"
   "new QRegExpValidator ( const QRegExp &  , QObject *  = 0 )"
   "const QRegExp & regExp () const"
   "void setRegExp ( const QRegExp &  )"
   "virtual QValidator::State validate ( QString &  , int &  ) const")
  (("QRubberBand" . "QWidget")
   "new QRubberBand ( Shape , QWidget *  = 0 )"
   "void move ( int , int )"
   "void move ( const QPoint &  )"
   "void resize ( int , int )"
   "void resize ( const QSize &  )"
   "void setGeometry ( const QRect &  )"
   "void setGeometry ( int , int , int , int )"
   "Shape shape () const"
   "protected void initStyleOption ( QStyleOptionRubberBand *  ) const")
  (("QSGAbstractRenderer" . "QObject")
   "QColor clearColor () const"
   "ClearMode clearMode () const"
   "QRect deviceRect () const"
   "QMatrix4x4 projectionMatrix () const"
   "virtual void renderScene ( GLuint = 0 ) = 0"
   "QSGRootNode * rootNode () const"
   "void setClearColor ( const QColor &  )"
   "void setClearMode ( ClearMode )"
   "void setDeviceRect ( const QRect &  )"
   "void setDeviceRect ( const QSize &  )"
   "void setProjectionMatrix ( const QMatrix4x4 &  )"
   "void setProjectionMatrixToRect ( const QRectF &  )"
   "void setRootNode ( QSGRootNode *  )"
   "void setViewportRect ( const QRect &  )"
   "void setViewportRect ( const QSize &  )"
   "QRect viewportRect () const")
  (("QSGDynamicTexture" . "QSGTexture")
   "virtual bool updateTexture () = 0")
  (("QSGEngine" . "QObject")
   "new QSGEngine ( QObject *  = 0 )"
   "QSGTexture * createTextureFromId ( uint , const QSize &  , CreateTextureOptions = 0 ) const"
   "QSGTexture * createTextureFromImage ( const QImage &  , CreateTextureOptions = 0 ) const"
   "void initialize ( QOpenGLContext *  )"
   "void invalidate ()")
  (("QSGTexture" . "QObject")
   "new QSGTexture ()"
   "virtual void bind () = 0"
   "QRectF convertToNormalizedSourceRect ( const QRectF &  ) const"
   "QSGTexture::Filtering filtering () const"
   "virtual bool hasAlphaChannel () const = 0"
   "virtual bool hasMipmaps () const = 0"
   "QSGTexture::WrapMode horizontalWrapMode () const"
   "virtual bool isAtlasTexture () const"
   "QSGTexture::Filtering mipmapFiltering () const"
   "virtual QRectF normalizedTextureSubRect () const"
   "virtual QSGTexture * removedFromAtlas () const"
   "void setFiltering ( Filtering )"
   "void setHorizontalWrapMode ( WrapMode )"
   "void setMipmapFiltering ( Filtering )"
   "void setVerticalWrapMode ( WrapMode )"
   "virtual int textureId () const = 0"
   "virtual QSize textureSize () const = 0"
   "void updateBindOptions ( bool = false )"
   "QSGTexture::WrapMode verticalWrapMode () const")
  (("QSGTextureProvider" . "QObject")
   "virtual QSGTexture * texture () const = 0")
  (("QScreen" . "QObject")
   "int angleBetween ( Qt::ScreenOrientation , Qt::ScreenOrientation ) const"
   "QRect availableGeometry () const"
   "QSize availableSize () const"
   "QRect availableVirtualGeometry () const"
   "QSize availableVirtualSize () const"
   "int depth () const"
   "qreal devicePixelRatio () const"
   "QRect geometry () const"
   "QPixmap grabWindow ( WId , int = 0 , int = 0 , int = -1 , int = -1 )"
   "QPlatformScreen * handle () const"
   "bool isLandscape ( Qt::ScreenOrientation ) const"
   "bool isPortrait ( Qt::ScreenOrientation ) const"
   "qreal logicalDotsPerInch () const"
   "qreal logicalDotsPerInchX () const"
   "qreal logicalDotsPerInchY () const"
   "QRect mapBetween ( Qt::ScreenOrientation , Qt::ScreenOrientation , const QRect &  ) const"
   "QString name () const"
   "Qt::ScreenOrientation nativeOrientation () const"
   "Qt::ScreenOrientation orientation () const"
   "Qt::ScreenOrientations orientationUpdateMask () const"
   "qreal physicalDotsPerInch () const"
   "qreal physicalDotsPerInchX () const"
   "qreal physicalDotsPerInchY () const"
   "QSizeF physicalSize () const"
   "Qt::ScreenOrientation primaryOrientation () const"
   "qreal refreshRate () const"
   "void setOrientationUpdateMask ( Qt::ScreenOrientations )"
   "QSize size () const"
   "QTransform transformBetween ( Qt::ScreenOrientation , Qt::ScreenOrientation , const QRect &  ) const"
   "QRect virtualGeometry () const"
   "QList<QScreen *> virtualSiblings () const"
   "QSize virtualSize () const")
  (("QScrollArea" . "QAbstractScrollArea")
   "new QScrollArea ( QWidget *  = 0 )"
   "Qt::Alignment alignment () const"
   "void ensureVisible ( int , int , int = 50 , int = 50 )"
   "void ensureWidgetVisible ( QWidget *  , int = 50 , int = 50 )"
   "void setAlignment ( Qt::Alignment )"
   "void setWidget ( QWidget *  )"
   "void setWidgetResizable ( bool )"
   "QWidget * takeWidget ()"
   "QWidget * widget () const"
   "bool widgetResizable () const"
   "virtual bool focusNextPrevChild ( bool )"
   "virtual QSize sizeHint () const")
  (("QScrollBar" . "QAbstractSlider")
   "new QScrollBar ( QWidget *  = 0 )"
   "new QScrollBar ( Qt::Orientation , QWidget *  = 0 )"
   "protected void initStyleOption ( QStyleOptionSlider *  ) const"
   "virtual bool event ( QEvent *  )"
   "virtual QSize sizeHint () const")
  (("QSequentialAnimationGroup" . "QAnimationGroup")
   "new QSequentialAnimationGroup ( QObject *  = 0 )"
   "QPauseAnimation * addPause ( int )"
   "QAbstractAnimation * currentAnimation () const"
   "QPauseAnimation * insertPause ( int , int )"
   "virtual int duration () const")
  (("QSessionManager" . "QObject")
   "bool allowsErrorInteraction ()"
   "bool allowsInteraction ()"
   "void cancel ()"
   "QStringList discardCommand () const"
   "bool isPhase2 () const"
   "void release ()"
   "void requestPhase2 ()"
   "QStringList restartCommand () const"
   "RestartHint restartHint () const"
   "QString sessionId () const"
   "QString sessionKey () const"
   "void setDiscardCommand ( const QStringList &  )"
   "void setManagerProperty ( const QString &  , const QStringList &  )"
   "void setManagerProperty ( const QString &  , const QString &  )"
   "void setRestartCommand ( const QStringList &  )"
   "void setRestartHint ( RestartHint )")
  (("QSettings" . "QObject")
   "new QSettings ( const QString &  , const QString &  = QString() , QObject *  = 0 )"
   "new QSettings ( Scope , const QString &  , const QString &  = QString() , QObject *  = 0 )"
   "new QSettings ( Format , Scope , const QString &  , const QString &  = QString() , QObject *  = 0 )"
   "new QSettings ( const QString &  , Format , QObject *  = 0 )"
   "new QSettings ( QObject *  = 0 )"
   "QStringList allKeys () const"
   "QString applicationName () const"
   "void beginGroup ( const QString &  )"
   "int beginReadArray ( const QString &  )"
   "void beginWriteArray ( const QString &  , int = -1 )"
   "QStringList childGroups () const"
   "QStringList childKeys () const"
   "void clear ()"
   "bool contains ( const QString &  ) const"
   "void endArray ()"
   "void endGroup ()"
   "bool fallbacksEnabled () const"
   "QString fileName () const"
   "Format format () const"
   "QString group () const"
   "QTextCodec * iniCodec () const"
   "bool isWritable () const"
   "QString organizationName () const"
   "void remove ( const QString &  )"
   "Scope scope () const"
   "void setArrayIndex ( int )"
   "void setFallbacksEnabled ( bool )"
   "void setIniCodec ( QTextCodec *  )"
   "void setIniCodec ( const char *  )"
   "void setValue ( const QString &  , const QVariant &  )"
   "Status status () const"
   "void sync ()"
   "QVariant value ( const QString &  , const QVariant &  = QVariant() ) const"
   "static Format defaultFormat ()"
   "static Format registerFormat ( const QString &  , ReadFunc , WriteFunc , Qt::CaseSensitivity = Qt::CaseSensitive )"
   "static void setDefaultFormat ( Format )"
   "static void setPath ( Format , Scope , const QString &  )")
  (("QShortcut" . "QObject")
   "new QShortcut ( QWidget *  )"
   "new QShortcut ( const QKeySequence &  , QWidget *  , const char *  = 0 , const char *  = 0 , Qt::ShortcutContext = Qt::WindowShortcut )"
   "bool autoRepeat () const"
   "Qt::ShortcutContext context () const"
   "int id () const"
   "bool isEnabled () const"
   "QKeySequence key () const"
   "QWidget * parentWidget () const"
   "void setAutoRepeat ( bool )"
   "void setContext ( Qt::ShortcutContext )"
   "void setEnabled ( bool )"
   "void setKey ( const QKeySequence &  )"
   "void setWhatsThis ( const QString &  )"
   "QString whatsThis () const")
  (("QSignalMapper" . "QObject")
   "new QSignalMapper ( QObject *  = 0 )"
   "QObject * mapping ( int ) const"
   "QObject * mapping ( const QString &  ) const"
   "QObject * mapping ( QWidget *  ) const"
   "QObject * mapping ( QObject *  ) const"
   "void removeMappings ( QObject *  )"
   "void setMapping ( QObject *  , int )"
   "void setMapping ( QObject *  , const QString &  )"
   "void setMapping ( QObject *  , QWidget *  )"
   "void setMapping ( QObject *  , QObject *  )")
  (("QSignalTransition" . "QAbstractTransition")
   "new QSignalTransition ( QState *  = 0 )"
   "new QSignalTransition ( const QObject *  , const char *  , QState *  = 0 )"
   "QObject * senderObject () const"
   "void setSenderObject ( const QObject *  )"
   "void setSignal ( const QByteArray &  )"
   "QByteArray signal () const")
  (("QSizeGrip" . "QWidget")
   "new QSizeGrip ( QWidget *  )"
   "virtual void setVisible ( bool )"
   "virtual QSize sizeHint () const")
  (("QSlider" . "QAbstractSlider")
   "new QSlider ( QWidget *  = 0 )"
   "new QSlider ( Qt::Orientation , QWidget *  = 0 )"
   "void setTickInterval ( int )"
   "void setTickPosition ( TickPosition )"
   "int tickInterval () const"
   "TickPosition tickPosition () const"
   "protected void initStyleOption ( QStyleOptionSlider *  ) const"
   "virtual bool event ( QEvent *  )"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QSortFilterProxyModel" . "QAbstractProxyModel")
   "new QSortFilterProxyModel ( QObject *  = 0 )"
   "bool dynamicSortFilter () const"
   "Qt::CaseSensitivity filterCaseSensitivity () const"
   "int filterKeyColumn () const"
   "QRegExp filterRegExp () const"
   "int filterRole () const"
   "bool isSortLocaleAware () const"
   "void setDynamicSortFilter ( bool )"
   "void setFilterCaseSensitivity ( Qt::CaseSensitivity )"
   "void setFilterKeyColumn ( int )"
   "void setFilterRegExp ( const QRegExp &  )"
   "void setFilterRole ( int )"
   "void setSortCaseSensitivity ( Qt::CaseSensitivity )"
   "void setSortLocaleAware ( bool )"
   "void setSortRole ( int )"
   "Qt::CaseSensitivity sortCaseSensitivity () const"
   "int sortColumn () const"
   "Qt::SortOrder sortOrder () const"
   "int sortRole () const"
   "protected void invalidateFilter ()"
   "virtual QModelIndex buddy ( const QModelIndex &  ) const"
   "virtual bool canFetchMore ( const QModelIndex &  ) const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual void fetchMore ( const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool hasChildren ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual bool insertColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool insertRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual QModelIndex mapFromSource ( const QModelIndex &  ) const"
   "virtual QItemSelection mapSelectionFromSource ( const QItemSelection &  ) const"
   "virtual QItemSelection mapSelectionToSource ( const QItemSelection &  ) const"
   "virtual QModelIndex mapToSource ( const QModelIndex &  ) const"
   "virtual QModelIndexList match ( const QModelIndex &  , int , const QVariant &  , int = 1 , Qt::MatchFlags = Qt::MatchFlags( Qt::MatchStartsWith | Qt::MatchWrap ) ) const"
   "virtual QMimeData * mimeData ( const QModelIndexList &  ) const"
   "virtual QStringList mimeTypes () const"
   "virtual QModelIndex parent ( const QModelIndex &  ) const"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual bool setHeaderData ( int , Qt::Orientation , const QVariant &  , int = Qt::EditRole )"
   "virtual void setSourceModel ( QAbstractItemModel *  )"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual QSize span ( const QModelIndex &  ) const"
   "virtual Qt::DropActions supportedDropActions () const")
  (("QSpinBox" . "QAbstractSpinBox")
   "new QSpinBox ( QWidget *  = 0 )"
   "QString cleanText () const"
   "int displayIntegerBase () const"
   "int maximum () const"
   "int minimum () const"
   "QString prefix () const"
   "void setDisplayIntegerBase ( int )"
   "void setMaximum ( int )"
   "void setMinimum ( int )"
   "void setPrefix ( const QString &  )"
   "void setRange ( int , int )"
   "void setSingleStep ( int )"
   "void setSuffix ( const QString &  )"
   "int singleStep () const"
   "QString suffix () const"
   "int value () const")
  (("QSplashScreen" . "QWidget")
   "new QSplashScreen ( const QPixmap &  = QPixmap() , Qt::WindowFlags = 0 )"
   "new QSplashScreen ( QWidget *  , const QPixmap &  = QPixmap() , Qt::WindowFlags = 0 )"
   "void finish ( QWidget *  )"
   "QString message () const"
   "const QPixmap pixmap () const"
   "void repaint ()"
   "void setPixmap ( const QPixmap &  )")
  (("QSplitter" . "QFrame")
   "new QSplitter ( QWidget *  = 0 )"
   "new QSplitter ( Qt::Orientation , QWidget *  = 0 )"
   "void addWidget ( QWidget *  )"
   "bool childrenCollapsible () const"
   "int count () const"
   "int handleWidth () const"
   "int indexOf ( QWidget *  ) const"
   "void insertWidget ( int , QWidget *  )"
   "bool isCollapsible ( int ) const"
   "bool opaqueResize () const"
   "Qt::Orientation orientation () const"
   "void refresh ()"
   "bool restoreState ( const QByteArray &  )"
   "QByteArray saveState () const"
   "void setChildrenCollapsible ( bool )"
   "void setCollapsible ( int , bool )"
   "void setOpaqueResize ( bool = true )"
   "void setOrientation ( Qt::Orientation )"
   "void setSizes ( const QList<int> &  )"
   "void setStretchFactor ( int , int )"
   "QList<int> sizes () const"
   "QWidget * widget ( int ) const"
   "protected int closestLegalPosition ( int , int )"
   "protected void moveSplitter ( int , int )"
   "protected void setRubberBand ( int )"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QSplitterHandle" . "QWidget")
   "bool opaqueResize () const"
   "Qt::Orientation orientation () const"
   "void setOrientation ( Qt::Orientation )"
   "QSplitter * splitter () const"
   "protected int closestLegalPosition ( int )"
   "protected void moveSplitter ( int )"
   "virtual QSize sizeHint () const")
  (("QSqlDriver" . "QObject")
   "new QSqlDriver ( QObject *  = 0 )"
   "virtual bool beginTransaction ()"
   "virtual void close () = 0"
   "virtual bool commitTransaction ()"
   "virtual QSqlResult * createResult () const = 0"
   "DbmsType dbmsType () const"
   "virtual QString escapeIdentifier ( const QString &  , IdentifierType ) const"
   "virtual QString formatValue ( const QSqlField &  , bool = false ) const"
   "virtual QVariant handle () const"
   "virtual bool hasFeature ( DriverFeature ) const = 0"
   "virtual bool isIdentifierEscaped ( const QString &  , IdentifierType ) const"
   "virtual bool isOpen () const"
   "bool isOpenError () const"
   "QSqlError lastError () const"
   "QSql::NumericalPrecisionPolicy numericalPrecisionPolicy () const"
   "virtual bool open ( const QString &  , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() , int = -1 , const QString &  = QString() ) = 0"
   "virtual QSqlIndex primaryIndex ( const QString &  ) const"
   "virtual QSqlRecord record ( const QString &  ) const"
   "virtual bool rollbackTransaction ()"
   "void setNumericalPrecisionPolicy ( QSql::NumericalPrecisionPolicy )"
   "virtual QString sqlStatement ( StatementType , const QString &  , const QSqlRecord &  , bool ) const"
   "virtual QString stripDelimiters ( const QString &  , IdentifierType ) const"
   "virtual bool subscribeToNotification ( const QString &  )"
   "virtual QStringList subscribedToNotifications () const"
   "virtual QStringList tables ( QSql::TableType ) const"
   "virtual bool unsubscribeFromNotification ( const QString &  )")
  (("QSqlQueryModel" . "QAbstractTableModel")
   "new QSqlQueryModel ( QObject *  = 0 )"
   "virtual void clear ()"
   "QSqlError lastError () const"
   "QSqlQuery query () const"
   "QSqlRecord record ( int ) const"
   "QSqlRecord record () const"
   "void setQuery ( const QSqlQuery &  )"
   "void setQuery ( const QString &  , const QSqlDatabase &  = QSqlDatabase() )"
   "protected void setLastError ( const QSqlError &  )"
   "virtual bool canFetchMore ( const QModelIndex &  = QModelIndex() ) const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual void fetchMore ( const QModelIndex &  = QModelIndex() )"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual bool insertColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setHeaderData ( int , Qt::Orientation , const QVariant &  , int = Qt::EditRole )")
  (("QSqlRelationalDelegate" . "QItemDelegate")
   "new QSqlRelationalDelegate ( QObject *  = 0 )"
   "virtual QWidget * createEditor ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void setModelData ( QWidget *  , QAbstractItemModel *  , const QModelIndex &  ) const")
  (("QSqlRelationalTableModel" . "QSqlTableModel")
   "new QSqlRelationalTableModel ( QObject *  = 0 , QSqlDatabase = QSqlDatabase() )"
   "QSqlRelation relation ( int ) const"
   "virtual QSqlTableModel * relationModel ( int ) const"
   "void setJoinMode ( QSqlRelationalTableModel::JoinMode )"
   "virtual void setRelation ( int , const QSqlRelation &  )"
   "virtual void clear ()"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool select ()"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual void setTable ( const QString &  )")
  (("QSqlTableModel" . "QSqlQueryModel")
   "new QSqlTableModel ( QObject *  = 0 , QSqlDatabase = QSqlDatabase() )"
   "QSqlDatabase database () const"
   "EditStrategy editStrategy () const"
   "int fieldIndex ( const QString &  ) const"
   "QString filter () const"
   "bool insertRecord ( int , const QSqlRecord &  )"
   "bool isDirty ( const QModelIndex &  ) const"
   "bool isDirty () const"
   "QSqlIndex primaryKey () const"
   "QSqlRecord record () const"
   "QSqlRecord record ( int ) const"
   "virtual void revertRow ( int )"
   "virtual void setEditStrategy ( EditStrategy )"
   "virtual void setFilter ( const QString &  )"
   "bool setRecord ( int , const QSqlRecord &  )"
   "virtual void setSort ( int , Qt::SortOrder )"
   "virtual void setTable ( const QString &  )"
   "QString tableName () const"
   "protected QSqlRecord primaryValues ( int ) const"
   "protected void setPrimaryKey ( const QSqlIndex &  )"
   "protected void setQuery ( const QSqlQuery &  )"
   "virtual void clear ()"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual bool insertRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual void sort ( int , Qt::SortOrder )")
  (("QStackedLayout" . "QLayout")
   "new QStackedLayout ()"
   "new QStackedLayout ( QWidget *  )"
   "new QStackedLayout ( QLayout *  )"
   "int addWidget ( QWidget *  )"
   "int currentIndex () const"
   "QWidget * currentWidget () const"
   "int insertWidget ( int , QWidget *  )"
   "void setStackingMode ( StackingMode )"
   "StackingMode stackingMode () const"
   "QWidget * widget ( int ) const"
   "virtual void addItem ( QLayoutItem *  )"
   "virtual int count () const"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual QLayoutItem * itemAt ( int ) const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect &  )"
   "virtual QSize sizeHint () const"
   "virtual QLayoutItem * takeAt ( int )")
  (("QStackedWidget" . "QFrame")
   "new QStackedWidget ( QWidget *  = 0 )"
   "int addWidget ( QWidget *  )"
   "int count () const"
   "int currentIndex () const"
   "QWidget * currentWidget () const"
   "int indexOf ( QWidget *  ) const"
   "int insertWidget ( int , QWidget *  )"
   "void removeWidget ( QWidget *  )"
   "QWidget * widget ( int ) const")
  (("QStandardItemModel" . "QAbstractItemModel")
   "new QStandardItemModel ( QObject *  = 0 )"
   "new QStandardItemModel ( int , int , QObject *  = 0 )"
   "void appendColumn ( const QList<QStandardItem *> &  )"
   "void appendRow ( const QList<QStandardItem *> &  )"
   "void appendRow ( QStandardItem *  )"
   "void clear ()"
   "QList<QStandardItem *> findItems ( const QString &  , Qt::MatchFlags = Qt::MatchExactly , int = 0 ) const"
   "QStandardItem * horizontalHeaderItem ( int ) const"
   "QModelIndex indexFromItem ( const QStandardItem *  ) const"
   "void insertColumn ( int , const QList<QStandardItem *> &  )"
   "bool insertColumn ( int , const QModelIndex &  = QModelIndex() )"
   "void insertRow ( int , const QList<QStandardItem *> &  )"
   "bool insertRow ( int , const QModelIndex &  = QModelIndex() )"
   "void insertRow ( int , QStandardItem *  )"
   "QStandardItem * invisibleRootItem () const"
   "QStandardItem * item ( int , int = 0 ) const"
   "QStandardItem * itemFromIndex ( const QModelIndex &  ) const"
   "const QStandardItem * itemPrototype () const"
   "void setColumnCount ( int )"
   "void setHorizontalHeaderItem ( int , QStandardItem *  )"
   "void setHorizontalHeaderLabels ( const QStringList &  )"
   "void setItem ( int , int , QStandardItem *  )"
   "void setItem ( int , QStandardItem *  )"
   "void setItemPrototype ( const QStandardItem *  )"
   "void setRowCount ( int )"
   "void setSortRole ( int )"
   "void setVerticalHeaderItem ( int , QStandardItem *  )"
   "void setVerticalHeaderLabels ( const QStringList &  )"
   "int sortRole () const"
   "QList<QStandardItem *> takeColumn ( int )"
   "QStandardItem * takeHorizontalHeaderItem ( int )"
   "QStandardItem * takeItem ( int , int = 0 )"
   "QList<QStandardItem *> takeRow ( int )"
   "QStandardItem * takeVerticalHeaderItem ( int )"
   "QStandardItem * verticalHeaderItem ( int ) const"
   "virtual int columnCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant data ( const QModelIndex &  , int = Qt::DisplayRole ) const"
   "virtual bool dropMimeData ( const QMimeData *  , Qt::DropAction , int , int , const QModelIndex &  )"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool hasChildren ( const QModelIndex &  = QModelIndex() ) const"
   "virtual QVariant headerData ( int , Qt::Orientation , int = Qt::DisplayRole ) const"
   "virtual QModelIndex index ( int , int , const QModelIndex &  = QModelIndex() ) const"
   "virtual bool insertColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool insertRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual QMimeData * mimeData ( const QModelIndexList &  ) const"
   "virtual QStringList mimeTypes () const"
   "virtual QModelIndex parent ( const QModelIndex &  ) const"
   "virtual bool removeColumns ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual bool setHeaderData ( int , Qt::Orientation , const QVariant &  , int = Qt::EditRole )"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual Qt::DropActions supportedDropActions () const")
  (("QState" . "QAbstractState")
   "new QState ( QState *  = 0 )"
   "new QState ( ChildMode , QState *  = 0 )"
   "void addTransition ( QAbstractTransition *  )"
   "QSignalTransition * addTransition ( const QObject *  , const char *  , QAbstractState *  )"
   "QAbstractTransition * addTransition ( QAbstractState *  )"
   "void assignProperty ( QObject *  , const char *  , const QVariant &  )"
   "ChildMode childMode () const"
   "QAbstractState * errorState () const"
   "QAbstractState * initialState () const"
   "void removeTransition ( QAbstractTransition *  )"
   "void setChildMode ( ChildMode )"
   "void setErrorState ( QAbstractState *  )"
   "void setInitialState ( QAbstractState *  )"
   "QList<QAbstractTransition *> transitions () const")
  (("QStateMachine" . "QState")
   "new QStateMachine ( QObject *  = 0 )"
   "new QStateMachine ( QState::ChildMode , QObject *  = 0 )"
   "void addDefaultAnimation ( QAbstractAnimation *  )"
   "void addState ( QAbstractState *  )"
   "bool cancelDelayedEvent ( int )"
   "void clearError ()"
   "QList<QAbstractAnimation *> defaultAnimations () const"
   "Error error () const"
   "QString errorString () const"
   "QState::RestorePolicy globalRestorePolicy () const"
   "bool isAnimated () const"
   "bool isRunning () const"
   "int postDelayedEvent ( QEvent *  , int )"
   "void postEvent ( QEvent *  , EventPriority = NormalPriority )"
   "void removeDefaultAnimation ( QAbstractAnimation *  )"
   "void removeState ( QAbstractState *  )"
   "void setAnimated ( bool )"
   "void setGlobalRestorePolicy ( QState::RestorePolicy )"
   "virtual bool eventFilter ( QObject *  , QEvent *  )")
  (("QStatusBar" . "QWidget")
   "new QStatusBar ( QWidget *  = 0 )"
   "void addPermanentWidget ( QWidget *  , int = 0 )"
   "void addWidget ( QWidget *  , int = 0 )"
   "QString currentMessage () const"
   "int insertPermanentWidget ( int , QWidget *  , int = 0 )"
   "int insertWidget ( int , QWidget *  , int = 0 )"
   "bool isSizeGripEnabled () const"
   "void removeWidget ( QWidget *  )"
   "void setSizeGripEnabled ( bool )"
   "protected void hideOrShow ()"
   "protected void reformat ()")
  (("QStringListModel" . "QAbstractListModel")
   "new QStringListModel ( QObject *  = 0 )"
   "new QStringListModel ( const QStringList &  , QObject *  = 0 )"
   "void setStringList ( const QStringList &  )"
   "QStringList stringList () const"
   "virtual QVariant data ( const QModelIndex &  , int ) const"
   "virtual Qt::ItemFlags flags ( const QModelIndex &  ) const"
   "virtual bool insertRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual bool removeRows ( int , int , const QModelIndex &  = QModelIndex() )"
   "virtual int rowCount ( const QModelIndex &  = QModelIndex() ) const"
   "virtual bool setData ( const QModelIndex &  , const QVariant &  , int = Qt::EditRole )"
   "virtual QModelIndex sibling ( int , int , const QModelIndex &  ) const"
   "virtual void sort ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "virtual Qt::DropActions supportedDropActions () const")
  (("QStyle" . "QObject")
   "int combinedLayoutSpacing ( QSizePolicy::ControlTypes , QSizePolicy::ControlTypes , Qt::Orientation , QStyleOption *  = 0 , QWidget *  = 0 ) const"
   "virtual void drawComplexControl ( ComplexControl , const QStyleOptionComplex *  , QPainter *  , const QWidget *  = 0 ) const = 0"
   "virtual void drawControl ( ControlElement , const QStyleOption *  , QPainter *  , const QWidget *  = 0 ) const = 0"
   "virtual void drawItemPixmap ( QPainter *  , const QRect &  , int , const QPixmap &  ) const"
   "virtual void drawItemText ( QPainter *  , const QRect &  , int , const QPalette &  , bool , const QString &  , QPalette::ColorRole = QPalette::NoRole ) const"
   "virtual void drawPrimitive ( PrimitiveElement , const QStyleOption *  , QPainter *  , const QWidget *  = 0 ) const = 0"
   "virtual QPixmap generatedIconPixmap ( QIcon::Mode , const QPixmap &  , const QStyleOption *  ) const = 0"
   "virtual SubControl hitTestComplexControl ( ComplexControl , const QStyleOptionComplex *  , const QPoint &  , const QWidget *  = 0 ) const = 0"
   "virtual QRect itemPixmapRect ( const QRect &  , int , const QPixmap &  ) const"
   "virtual QRect itemTextRect ( const QFontMetrics &  , const QRect &  , int , bool , const QString &  ) const"
   "virtual int layoutSpacing ( QSizePolicy::ControlType , QSizePolicy::ControlType , Qt::Orientation , const QStyleOption *  = 0 , const QWidget *  = 0 ) const = 0"
   "virtual int pixelMetric ( PixelMetric , const QStyleOption *  = 0 , const QWidget *  = 0 ) const = 0"
   "virtual void polish ( QWidget *  )"
   "virtual void polish ( QApplication *  )"
   "virtual void polish ( QPalette &  )"
   "const QStyle * proxy () const"
   "virtual QSize sizeFromContents ( ContentsType , const QStyleOption *  , const QSize &  , const QWidget *  = 0 ) const = 0"
   "virtual QIcon standardIcon ( StandardPixmap , const QStyleOption *  = 0 , const QWidget *  = 0 ) const = 0"
   "virtual QPalette standardPalette () const"
   "virtual int styleHint ( StyleHint , const QStyleOption *  = 0 , const QWidget *  = 0 , QStyleHintReturn *  = 0 ) const = 0"
   "virtual QRect subControlRect ( ComplexControl , const QStyleOptionComplex *  , SubControl , const QWidget *  = 0 ) const = 0"
   "virtual QRect subElementRect ( SubElement , const QStyleOption *  , const QWidget *  = 0 ) const = 0"
   "virtual void unpolish ( QWidget *  )"
   "virtual void unpolish ( QApplication *  )"
   "static QRect alignedRect ( Qt::LayoutDirection , Qt::Alignment , const QSize &  , const QRect &  )"
   "static int sliderPositionFromValue ( int , int , int , int , bool = false )"
   "static int sliderValueFromPosition ( int , int , int , int , bool = false )"
   "static Qt::Alignment visualAlignment ( Qt::LayoutDirection , Qt::Alignment )"
   "static QPoint visualPos ( Qt::LayoutDirection , const QRect &  , const QPoint &  )"
   "static QRect visualRect ( Qt::LayoutDirection , const QRect &  , const QRect &  )")
  (("QStyleHints" . "QObject")
   "int cursorFlashTime () const"
   "qreal fontSmoothingGamma () const"
   "int keyboardAutoRepeatRate () const"
   "int keyboardInputInterval () const"
   "int mouseDoubleClickInterval () const"
   "int mousePressAndHoldInterval () const"
   "QChar passwordMaskCharacter () const"
   "int passwordMaskDelay () const"
   "bool setFocusOnTouchRelease () const"
   "bool showIsFullScreen () const"
   "bool singleClickActivation () const"
   "int startDragDistance () const"
   "int startDragTime () const"
   "int startDragVelocity () const"
   "Qt::TabFocusBehavior tabFocusBehavior () const"
   "bool useRtlExtensions () const")
  (("QStyledItemDelegate" . "QAbstractItemDelegate")
   "new QStyledItemDelegate ( QObject *  = 0 )"
   "virtual QString displayText ( const QVariant &  , const QLocale &  ) const"
   "QItemEditorFactory * itemEditorFactory () const"
   "void setItemEditorFactory ( QItemEditorFactory *  )"
   "virtual QWidget * createEditor ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void paint ( QPainter *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void setEditorData ( QWidget *  , const QModelIndex &  ) const"
   "virtual void setModelData ( QWidget *  , QAbstractItemModel *  , const QModelIndex &  ) const"
   "virtual QSize sizeHint ( const QStyleOptionViewItem &  , const QModelIndex &  ) const"
   "virtual void updateEditorGeometry ( QWidget *  , const QStyleOptionViewItem &  , const QModelIndex &  ) const")
  (("QSvgRenderer" . "QObject")
   "new QSvgRenderer ( QObject *  = 0 )"
   "new QSvgRenderer ( const QString &  , QObject *  = 0 )"
   "new QSvgRenderer ( const QByteArray &  , QObject *  = 0 )"
   "bool animated () const"
   "QRectF boundsOnElement ( const QString &  ) const"
   "QSize defaultSize () const"
   "bool elementExists ( const QString &  ) const"
   "int framesPerSecond () const"
   "bool isValid () const"
   "QMatrix matrixForElement ( const QString &  ) const"
   "void setFramesPerSecond ( int )"
   "void setViewBox ( const QRect &  )"
   "void setViewBox ( const QRectF &  )"
   "QRect viewBox () const"
   "QRectF viewBoxF () const")
  (("QSvgWidget" . "QWidget")
   "new QSvgWidget ( QWidget *  = 0 )"
   "new QSvgWidget ( const QString &  , QWidget *  = 0 )"
   "virtual QSize sizeHint () const")
  (("QSwipeGesture" . "QGesture")
   "SwipeDirection horizontalDirection () const"
   "void setSwipeAngle ( qreal )"
   "qreal swipeAngle () const"
   "SwipeDirection verticalDirection () const")
  (("QSyntaxHighlighter" . "QObject")
   "new QSyntaxHighlighter ( QObject *  )"
   "new QSyntaxHighlighter ( QTextDocument *  )"
   "QTextDocument * document () const"
   "void setDocument ( QTextDocument *  )"
   "protected QTextBlock currentBlock () const"
   "protected int currentBlockState () const"
   "protected QTextBlockUserData * currentBlockUserData () const"
   "protected QTextCharFormat format ( int ) const"
   "protected int previousBlockState () const"
   "protected void setCurrentBlockState ( int )"
   "protected void setCurrentBlockUserData ( QTextBlockUserData *  )"
   "protected void setFormat ( int , int , const QTextCharFormat &  )"
   "protected void setFormat ( int , int , const QColor &  )"
   "protected void setFormat ( int , int , const QFont &  )")
  (("QSystemTrayIcon" . "QObject")
   "new QSystemTrayIcon ( QObject *  = 0 )"
   "new QSystemTrayIcon ( const QIcon &  , QObject *  = 0 )"
   "QMenu * contextMenu () const"
   "QRect geometry () const"
   "QIcon icon () const"
   "bool isVisible () const"
   "void setContextMenu ( QMenu *  )"
   "void setIcon ( const QIcon &  )"
   "void setToolTip ( const QString &  )"
   "QString toolTip () const"
   "static bool isSystemTrayAvailable ()"
   "static bool supportsMessages ()")
  (("QTabBar" . "QWidget")
   "new QTabBar ( QWidget *  = 0 )"
   "int addTab ( const QString &  )"
   "int addTab ( const QIcon &  , const QString &  )"
   "bool autoHide () const"
   "bool changeCurrentOnDrag () const"
   "int count () const"
   "int currentIndex () const"
   "bool documentMode () const"
   "bool drawBase () const"
   "Qt::TextElideMode elideMode () const"
   "bool expanding () const"
   "QSize iconSize () const"
   "int insertTab ( int , const QString &  )"
   "int insertTab ( int , const QIcon &  , const QString &  )"
   "bool isMovable () const"
   "bool isTabEnabled ( int ) const"
   "void moveTab ( int , int )"
   "void removeTab ( int )"
   "SelectionBehavior selectionBehaviorOnRemove () const"
   "void setAutoHide ( bool )"
   "void setChangeCurrentOnDrag ( bool )"
   "void setDocumentMode ( bool )"
   "void setDrawBase ( bool )"
   "void setElideMode ( Qt::TextElideMode )"
   "void setExpanding ( bool )"
   "void setIconSize ( const QSize &  )"
   "void setMovable ( bool )"
   "void setSelectionBehaviorOnRemove ( SelectionBehavior )"
   "void setShape ( Shape )"
   "void setTabButton ( int , ButtonPosition , QWidget *  )"
   "void setTabData ( int , const QVariant &  )"
   "void setTabEnabled ( int , bool )"
   "void setTabIcon ( int , const QIcon &  )"
   "void setTabText ( int , const QString &  )"
   "void setTabTextColor ( int , const QColor &  )"
   "void setTabToolTip ( int , const QString &  )"
   "void setTabWhatsThis ( int , const QString &  )"
   "void setTabsClosable ( bool )"
   "void setUsesScrollButtons ( bool )"
   "Shape shape () const"
   "int tabAt ( const QPoint &  ) const"
   "QWidget * tabButton ( int , ButtonPosition ) const"
   "QVariant tabData ( int ) const"
   "QIcon tabIcon ( int ) const"
   "QRect tabRect ( int ) const"
   "QString tabText ( int ) const"
   "QColor tabTextColor ( int ) const"
   "QString tabToolTip ( int ) const"
   "QString tabWhatsThis ( int ) const"
   "bool tabsClosable () const"
   "bool usesScrollButtons () const"
   "protected void initStyleOption ( QStyleOptionTab *  , int ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QTabWidget" . "QWidget")
   "new QTabWidget ( QWidget *  = 0 )"
   "int addTab ( QWidget *  , const QString &  )"
   "int addTab ( QWidget *  , const QIcon &  , const QString &  )"
   "void clear ()"
   "QWidget * cornerWidget ( Qt::Corner = Qt::TopRightCorner ) const"
   "int count () const"
   "int currentIndex () const"
   "QWidget * currentWidget () const"
   "bool documentMode () const"
   "Qt::TextElideMode elideMode () const"
   "QSize iconSize () const"
   "int indexOf ( QWidget *  ) const"
   "int insertTab ( int , QWidget *  , const QString &  )"
   "int insertTab ( int , QWidget *  , const QIcon &  , const QString &  )"
   "bool isMovable () const"
   "bool isTabEnabled ( int ) const"
   "void removeTab ( int )"
   "void setCornerWidget ( QWidget *  , Qt::Corner = Qt::TopRightCorner )"
   "void setDocumentMode ( bool )"
   "void setElideMode ( Qt::TextElideMode )"
   "void setIconSize ( const QSize &  )"
   "void setMovable ( bool )"
   "void setTabBarAutoHide ( bool )"
   "void setTabEnabled ( int , bool )"
   "void setTabIcon ( int , const QIcon &  )"
   "void setTabPosition ( TabPosition )"
   "void setTabShape ( TabShape )"
   "void setTabText ( int , const QString &  )"
   "void setTabToolTip ( int , const QString &  )"
   "void setTabWhatsThis ( int , const QString &  )"
   "void setTabsClosable ( bool )"
   "void setUsesScrollButtons ( bool )"
   "QTabBar * tabBar () const"
   "bool tabBarAutoHide () const"
   "QIcon tabIcon ( int ) const"
   "TabPosition tabPosition () const"
   "TabShape tabShape () const"
   "QString tabText ( int ) const"
   "QString tabToolTip ( int ) const"
   "QString tabWhatsThis ( int ) const"
   "bool tabsClosable () const"
   "bool usesScrollButtons () const"
   "QWidget * widget ( int ) const"
   "protected void initStyleOption ( QStyleOptionTabWidgetFrame *  ) const"
   "protected void setTabBar ( QTabBar *  )"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QTableView" . "QAbstractItemView")
   "new QTableView ( QWidget *  = 0 )"
   "void clearSpans ()"
   "int columnAt ( int ) const"
   "int columnSpan ( int , int ) const"
   "int columnViewportPosition ( int ) const"
   "int columnWidth ( int ) const"
   "Qt::PenStyle gridStyle () const"
   "QHeaderView * horizontalHeader () const"
   "bool isColumnHidden ( int ) const"
   "bool isCornerButtonEnabled () const"
   "bool isRowHidden ( int ) const"
   "bool isSortingEnabled () const"
   "int rowAt ( int ) const"
   "int rowHeight ( int ) const"
   "int rowSpan ( int , int ) const"
   "int rowViewportPosition ( int ) const"
   "void setColumnHidden ( int , bool )"
   "void setColumnWidth ( int , int )"
   "void setCornerButtonEnabled ( bool )"
   "void setGridStyle ( Qt::PenStyle )"
   "void setHorizontalHeader ( QHeaderView *  )"
   "void setRowHeight ( int , int )"
   "void setRowHidden ( int , bool )"
   "void setSortingEnabled ( bool )"
   "void setSpan ( int , int , int , int )"
   "void setVerticalHeader ( QHeaderView *  )"
   "void setWordWrap ( bool )"
   "bool showGrid () const"
   "void sortByColumn ( int , Qt::SortOrder )"
   "QHeaderView * verticalHeader () const"
   "bool wordWrap () const"
   "virtual QModelIndex indexAt ( const QPoint &  ) const"
   "virtual void setModel ( QAbstractItemModel *  )"
   "virtual void setRootIndex ( const QModelIndex &  )"
   "virtual void setSelectionModel ( QItemSelectionModel *  )")
  (("QTableWidget" . "QTableView")
   "new QTableWidget ( QWidget *  = 0 )"
   "new QTableWidget ( int , int , QWidget *  = 0 )"
   "QWidget * cellWidget ( int , int ) const"
   "void closePersistentEditor ( QTableWidgetItem *  )"
   "int column ( const QTableWidgetItem *  ) const"
   "int columnCount () const"
   "int currentColumn () const"
   "QTableWidgetItem * currentItem () const"
   "int currentRow () const"
   "void editItem ( QTableWidgetItem *  )"
   "QList<QTableWidgetItem *> findItems ( const QString &  , Qt::MatchFlags ) const"
   "QTableWidgetItem * horizontalHeaderItem ( int ) const"
   "QTableWidgetItem * item ( int , int ) const"
   "QTableWidgetItem * itemAt ( const QPoint &  ) const"
   "QTableWidgetItem * itemAt ( int , int ) const"
   "const QTableWidgetItem * itemPrototype () const"
   "void openPersistentEditor ( QTableWidgetItem *  )"
   "void removeCellWidget ( int , int )"
   "int row ( const QTableWidgetItem *  ) const"
   "int rowCount () const"
   "QList<QTableWidgetItem *> selectedItems () const"
   "QList<QTableWidgetSelectionRange> selectedRanges () const"
   "void setCellWidget ( int , int , QWidget *  )"
   "void setColumnCount ( int )"
   "void setCurrentCell ( int , int )"
   "void setCurrentCell ( int , int , QItemSelectionModel::SelectionFlags )"
   "void setCurrentItem ( QTableWidgetItem *  )"
   "void setCurrentItem ( QTableWidgetItem *  , QItemSelectionModel::SelectionFlags )"
   "void setHorizontalHeaderItem ( int , QTableWidgetItem *  )"
   "void setHorizontalHeaderLabels ( const QStringList &  )"
   "void setItem ( int , int , QTableWidgetItem *  )"
   "void setItemPrototype ( const QTableWidgetItem *  )"
   "void setRangeSelected ( const QTableWidgetSelectionRange &  , bool )"
   "void setRowCount ( int )"
   "void setVerticalHeaderItem ( int , QTableWidgetItem *  )"
   "void setVerticalHeaderLabels ( const QStringList &  )"
   "void sortItems ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "QTableWidgetItem * takeHorizontalHeaderItem ( int )"
   "QTableWidgetItem * takeItem ( int , int )"
   "QTableWidgetItem * takeVerticalHeaderItem ( int )"
   "QTableWidgetItem * verticalHeaderItem ( int ) const"
   "int visualColumn ( int ) const"
   "QRect visualItemRect ( const QTableWidgetItem *  ) const"
   "int visualRow ( int ) const"
   "protected QModelIndex indexFromItem ( QTableWidgetItem *  ) const"
   "protected QTableWidgetItem * itemFromIndex ( const QModelIndex &  ) const"
   "protected QList<QTableWidgetItem *> items ( const QMimeData *  ) const")
  (("QTapAndHoldGesture" . "QGesture")
   "QPointF position () const"
   "void setPosition ( const QPointF &  )"
   "static void setTimeout ( int )"
   "static int timeout ()")
  (("QTapGesture" . "QGesture")
   "QPointF position () const"
   "void setPosition ( const QPointF &  )")
  (("QTcpServer" . "QObject")
   "new QTcpServer ( QObject *  = 0 )"
   "void close ()"
   "QString errorString () const"
   "virtual bool hasPendingConnections () const"
   "bool isListening () const"
   "bool listen ( const QHostAddress &  = QHostAddress::Any , quint16 = 0 )"
   "int maxPendingConnections () const"
   "virtual QTcpSocket * nextPendingConnection ()"
   "void pauseAccepting ()"
   "QNetworkProxy proxy () const"
   "void resumeAccepting ()"
   "QHostAddress serverAddress () const"
   "QAbstractSocket::SocketError serverError () const"
   "quint16 serverPort () const"
   "void setMaxPendingConnections ( int )"
   "void setProxy ( const QNetworkProxy &  )"
   "bool waitForNewConnection ( int = 0 , bool *  = 0 )"
   "protected void addPendingConnection ( QTcpSocket *  )")
  (("QTcpSocket" . "QAbstractSocket")
   "new QTcpSocket ( QObject *  = 0 )")
  (("QTextBlockGroup" . "QTextObject")
   "protected QList<QTextBlock> blockList () const")
  (("QTextBrowser" . "QTextEdit")
   "new QTextBrowser ( QWidget *  = 0 )"
   "int backwardHistoryCount () const"
   "void clearHistory ()"
   "int forwardHistoryCount () const"
   "QString historyTitle ( int ) const"
   "QUrl historyUrl ( int ) const"
   "bool isBackwardAvailable () const"
   "bool isForwardAvailable () const"
   "bool openExternalLinks () const"
   "bool openLinks () const"
   "QStringList searchPaths () const"
   "void setOpenExternalLinks ( bool )"
   "void setOpenLinks ( bool )"
   "void setSearchPaths ( const QStringList &  )"
   "QUrl source () const"
   "virtual QVariant loadResource ( int , const QUrl &  )")
  (("QTextDocument" . "QObject")
   "new QTextDocument ( QObject *  = 0 )"
   "new QTextDocument ( const QString &  , QObject *  = 0 )"
   "void addResource ( int , const QUrl &  , const QVariant &  )"
   "void adjustSize ()"
   "QVector<QTextFormat> allFormats () const"
   "int availableRedoSteps () const"
   "int availableUndoSteps () const"
   "QUrl baseUrl () const"
   "QTextBlock begin () const"
   "int blockCount () const"
   "QChar characterAt ( int ) const"
   "int characterCount () const"
   "virtual void clear ()"
   "void clearUndoRedoStacks ( Stacks = UndoAndRedoStacks )"
   "QTextDocument * clone ( QObject *  = 0 ) const"
   "Qt::CursorMoveStyle defaultCursorMoveStyle () const"
   "QFont defaultFont () const"
   "QString defaultStyleSheet () const"
   "QTextOption defaultTextOption () const"
   "QAbstractTextDocumentLayout * documentLayout () const"
   "qreal documentMargin () const"
   "void drawContents ( QPainter *  , const QRectF &  = QRectF() )"
   "QTextBlock end () const"
   "QTextCursor find ( const QString &  , const QTextCursor &  , FindFlags = 0 ) const"
   "QTextCursor find ( const QRegularExpression &  , int = 0 , FindFlags = 0 ) const"
   "QTextCursor find ( const QRegularExpression &  , const QTextCursor &  , FindFlags = 0 ) const"
   "QTextCursor find ( const QString &  , int = 0 , FindFlags = 0 ) const"
   "QTextCursor find ( const QRegExp &  , int = 0 , FindFlags = 0 ) const"
   "QTextCursor find ( const QRegExp &  , const QTextCursor &  , FindFlags = 0 ) const"
   "QTextBlock findBlock ( int ) const"
   "QTextBlock findBlockByLineNumber ( int ) const"
   "QTextBlock findBlockByNumber ( int ) const"
   "QTextBlock firstBlock () const"
   "qreal idealWidth () const"
   "qreal indentWidth () const"
   "bool isEmpty () const"
   "bool isModified () const"
   "bool isRedoAvailable () const"
   "bool isUndoAvailable () const"
   "bool isUndoRedoEnabled () const"
   "QTextBlock lastBlock () const"
   "int lineCount () const"
   "void markContentsDirty ( int , int )"
   "int maximumBlockCount () const"
   "QString metaInformation ( MetaInformation ) const"
   "QTextObject * object ( int ) const"
   "QTextObject * objectForFormat ( const QTextFormat &  ) const"
   "int pageCount () const"
   "QSizeF pageSize () const"
   "void print ( QPagedPaintDevice *  ) const"
   "void redo ( QTextCursor *  )"
   "QVariant resource ( int , const QUrl &  ) const"
   "int revision () const"
   "QTextFrame * rootFrame () const"
   "void setBaseUrl ( const QUrl &  )"
   "void setDefaultCursorMoveStyle ( Qt::CursorMoveStyle )"
   "void setDefaultFont ( const QFont &  )"
   "void setDefaultStyleSheet ( const QString &  )"
   "void setDefaultTextOption ( const QTextOption &  )"
   "void setDocumentLayout ( QAbstractTextDocumentLayout *  )"
   "void setDocumentMargin ( qreal )"
   "void setHtml ( const QString &  )"
   "void setIndentWidth ( qreal )"
   "void setMaximumBlockCount ( int )"
   "void setMetaInformation ( MetaInformation , const QString &  )"
   "void setPageSize ( const QSizeF &  )"
   "void setPlainText ( const QString &  )"
   "void setTextWidth ( qreal )"
   "void setUndoRedoEnabled ( bool )"
   "void setUseDesignMetrics ( bool )"
   "QSizeF size () const"
   "qreal textWidth () const"
   "QString toHtml ( const QByteArray &  = QByteArray() ) const"
   "QString toPlainText () const"
   "void undo ( QTextCursor *  )"
   "bool useDesignMetrics () const")
  (("QTextEdit" . "QAbstractScrollArea")
   "new QTextEdit ( QWidget *  = 0 )"
   "new QTextEdit ( const QString &  , QWidget *  = 0 )"
   "bool acceptRichText () const"
   "Qt::Alignment alignment () const"
   "QString anchorAt ( const QPoint &  ) const"
   "AutoFormatting autoFormatting () const"
   "bool canPaste () const"
   "QMenu * createStandardContextMenu ()"
   "QMenu * createStandardContextMenu ( const QPoint &  )"
   "QTextCharFormat currentCharFormat () const"
   "QFont currentFont () const"
   "QTextCursor cursorForPosition ( const QPoint &  ) const"
   "QRect cursorRect ( const QTextCursor &  ) const"
   "QRect cursorRect () const"
   "int cursorWidth () const"
   "QTextDocument * document () const"
   "QString documentTitle () const"
   "void ensureCursorVisible ()"
   "QList<ExtraSelection> extraSelections () const"
   "bool find ( const QString &  , QTextDocument::FindFlags = 0 )"
   "bool find ( const QRegExp &  , QTextDocument::FindFlags = 0 )"
   "QString fontFamily () const"
   "bool fontItalic () const"
   "qreal fontPointSize () const"
   "bool fontUnderline () const"
   "int fontWeight () const"
   "bool isReadOnly () const"
   "bool isUndoRedoEnabled () const"
   "int lineWrapColumnOrWidth () const"
   "LineWrapMode lineWrapMode () const"
   "virtual QVariant loadResource ( int , const QUrl &  )"
   "void mergeCurrentCharFormat ( const QTextCharFormat &  )"
   "void moveCursor ( QTextCursor::MoveOperation , QTextCursor::MoveMode = QTextCursor::MoveAnchor )"
   "bool overwriteMode () const"
   "void print ( QPagedPaintDevice *  ) const"
   "void setAcceptRichText ( bool )"
   "void setAutoFormatting ( AutoFormatting )"
   "void setCurrentCharFormat ( const QTextCharFormat &  )"
   "void setCursorWidth ( int )"
   "void setDocument ( QTextDocument *  )"
   "void setDocumentTitle ( const QString &  )"
   "void setExtraSelections ( const QList<ExtraSelection> &  )"
   "void setLineWrapColumnOrWidth ( int )"
   "void setLineWrapMode ( LineWrapMode )"
   "void setOverwriteMode ( bool )"
   "void setReadOnly ( bool )"
   "void setTabChangesFocus ( bool )"
   "void setTabStopWidth ( int )"
   "void setTextCursor ( const QTextCursor &  )"
   "void setTextInteractionFlags ( Qt::TextInteractionFlags )"
   "void setUndoRedoEnabled ( bool )"
   "void setWordWrapMode ( QTextOption::WrapMode )"
   "bool tabChangesFocus () const"
   "int tabStopWidth () const"
   "QColor textBackgroundColor () const"
   "QColor textColor () const"
   "QTextCursor textCursor () const"
   "Qt::TextInteractionFlags textInteractionFlags () const"
   "QString toHtml () const"
   "QString toPlainText () const"
   "QTextOption::WrapMode wordWrapMode () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const")
  (("QTextFrame" . "QTextObject")
   "new QTextFrame ( QTextDocument *  )"
   "QList<QTextFrame *> childFrames () const"
   "QTextCursor firstCursorPosition () const"
   "int firstPosition () const"
   "QTextFrameFormat frameFormat () const"
   "QTextCursor lastCursorPosition () const"
   "int lastPosition () const"
   "QTextFrame * parentFrame () const"
   "void setFrameFormat ( const QTextFrameFormat &  )")
  (("QTextList" . "QTextBlockGroup")
   "void add ( const QTextBlock &  )"
   "int count () const"
   "QTextListFormat format () const"
   "QTextBlock item ( int ) const"
   "int itemNumber ( const QTextBlock &  ) const"
   "QString itemText ( const QTextBlock &  ) const"
   "void remove ( const QTextBlock &  )"
   "void removeItem ( int )"
   "void setFormat ( const QTextListFormat &  )")
  (("QTextObject" . "QObject")
   "QTextDocument * document () const"
   "QTextFormat format () const"
   "int formatIndex () const"
   "int objectIndex () const"
   "protected void setFormat ( const QTextFormat &  )")
  (("QTextTable" . "QTextFrame")
   "void appendColumns ( int )"
   "void appendRows ( int )"
   "QTextTableCell cellAt ( int , int ) const"
   "QTextTableCell cellAt ( int ) const"
   "QTextTableCell cellAt ( const QTextCursor &  ) const"
   "int columns () const"
   "QTextTableFormat format () const"
   "void insertColumns ( int , int )"
   "void insertRows ( int , int )"
   "void mergeCells ( int , int , int , int )"
   "void mergeCells ( const QTextCursor &  )"
   "void removeColumns ( int , int )"
   "void removeRows ( int , int )"
   "void resize ( int , int )"
   "QTextCursor rowEnd ( const QTextCursor &  ) const"
   "QTextCursor rowStart ( const QTextCursor &  ) const"
   "int rows () const"
   "void setFormat ( const QTextTableFormat &  )"
   "void splitCell ( int , int , int , int )")
  (("QTimeEdit" . "QDateTimeEdit")
   "new QTimeEdit ( QWidget *  = 0 )"
   "new QTimeEdit ( const QTime &  , QWidget *  = 0 )")
  (("QTimeLine" . "QObject")
   "new QTimeLine ( int = 1000 , QObject *  = 0 )"
   "int currentFrame () const"
   "int currentTime () const"
   "qreal currentValue () const"
   "CurveShape curveShape () const"
   "Direction direction () const"
   "int duration () const"
   "QEasingCurve easingCurve () const"
   "int endFrame () const"
   "int frameForTime ( int ) const"
   "int loopCount () const"
   "void setCurveShape ( CurveShape )"
   "void setDirection ( Direction )"
   "void setDuration ( int )"
   "void setEasingCurve ( const QEasingCurve &  )"
   "void setEndFrame ( int )"
   "void setFrameRange ( int , int )"
   "void setLoopCount ( int )"
   "void setStartFrame ( int )"
   "void setUpdateInterval ( int )"
   "int startFrame () const"
   "State state () const"
   "int updateInterval () const"
   "virtual qreal valueForTime ( int ) const")
  (("QTimer" . "QObject")
   "new QTimer ( QObject *  = 0 )"
   "int interval () const"
   "bool isActive () const"
   "bool isSingleShot () const"
   "int remainingTime () const"
   "void setInterval ( int )"
   "void setTimerType ( Qt::TimerType )"
   "int timerId () const"
   "Qt::TimerType timerType () const")
  (("QToolBar" . "QWidget")
   "new QToolBar ( const QString &  , QWidget *  = 0 )"
   "new QToolBar ( QWidget *  = 0 )"
   "QAction * actionAt ( const QPoint &  ) const"
   "QAction * actionAt ( int , int ) const"
   "QAction * addAction ( const QString &  )"
   "QAction * addAction ( const QIcon &  , const QString &  )"
   "QAction * addAction ( const QString &  , const QObject *  , const char *  )"
   "QAction * addAction ( const QIcon &  , const QString &  , const QObject *  , const char *  )"
   "QAction * addSeparator ()"
   "QAction * addWidget ( QWidget *  )"
   "Qt::ToolBarAreas allowedAreas () const"
   "void clear ()"
   "QSize iconSize () const"
   "QAction * insertSeparator ( QAction *  )"
   "QAction * insertWidget ( QAction *  , QWidget *  )"
   "bool isAreaAllowed ( Qt::ToolBarArea ) const"
   "bool isFloatable () const"
   "bool isFloating () const"
   "bool isMovable () const"
   "Qt::Orientation orientation () const"
   "void setAllowedAreas ( Qt::ToolBarAreas )"
   "void setFloatable ( bool )"
   "void setMovable ( bool )"
   "void setOrientation ( Qt::Orientation )"
   "QAction * toggleViewAction () const"
   "Qt::ToolButtonStyle toolButtonStyle () const"
   "QWidget * widgetForAction ( QAction *  ) const")
  (("QToolBox" . "QFrame")
   "new QToolBox ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "int addItem ( QWidget *  , const QIcon &  , const QString &  )"
   "int addItem ( QWidget *  , const QString &  )"
   "int count () const"
   "int currentIndex () const"
   "QWidget * currentWidget () const"
   "int indexOf ( QWidget *  ) const"
   "int insertItem ( int , QWidget *  , const QIcon &  , const QString &  )"
   "int insertItem ( int , QWidget *  , const QString &  )"
   "bool isItemEnabled ( int ) const"
   "QIcon itemIcon ( int ) const"
   "QString itemText ( int ) const"
   "QString itemToolTip ( int ) const"
   "void removeItem ( int )"
   "void setItemEnabled ( int , bool )"
   "void setItemIcon ( int , const QIcon &  )"
   "void setItemText ( int , const QString &  )"
   "void setItemToolTip ( int , const QString &  )"
   "QWidget * widget ( int ) const")
  (("QToolButton" . "QAbstractButton")
   "new QToolButton ( QWidget *  = 0 )"
   "Qt::ArrowType arrowType () const"
   "bool autoRaise () const"
   "QMenu * menu () const"
   "ToolButtonPopupMode popupMode () const"
   "void setArrowType ( Qt::ArrowType )"
   "void setAutoRaise ( bool )"
   "void setMenu ( QMenu *  )"
   "void setPopupMode ( ToolButtonPopupMode )"
   "Qt::ToolButtonStyle toolButtonStyle () const"
   "protected void initStyleOption ( QStyleOptionToolButton *  ) const"
   "virtual QSize minimumSizeHint () const"
   "virtual QSize sizeHint () const")
  (("QTranslator" . "QObject")
   "new QTranslator ( QObject *  = 0 )"
   "virtual bool isEmpty () const"
   "bool load ( const QString &  , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() )"
   "bool load ( const QLocale &  , const QString &  , const QString &  = QString() , const QString &  = QString() , const QString &  = QString() )"
   "virtual QString translate ( const char *  , const char *  , const char *  = 0 , int = -1 ) const")
  (("QTreeView" . "QAbstractItemView")
   "new QTreeView ( QWidget *  = 0 )"
   "bool allColumnsShowFocus () const"
   "int autoExpandDelay () const"
   "int columnAt ( int ) const"
   "int columnViewportPosition ( int ) const"
   "int columnWidth ( int ) const"
   "bool expandsOnDoubleClick () const"
   "QHeaderView * header () const"
   "int indentation () const"
   "QModelIndex indexAbove ( const QModelIndex &  ) const"
   "QModelIndex indexBelow ( const QModelIndex &  ) const"
   "bool isAnimated () const"
   "bool isColumnHidden ( int ) const"
   "bool isExpanded ( const QModelIndex &  ) const"
   "bool isFirstColumnSpanned ( int , const QModelIndex &  ) const"
   "bool isHeaderHidden () const"
   "bool isRowHidden ( int , const QModelIndex &  ) const"
   "bool isSortingEnabled () const"
   "bool itemsExpandable () const"
   "void resetIndentation ()"
   "bool rootIsDecorated () const"
   "void setAllColumnsShowFocus ( bool )"
   "void setAnimated ( bool )"
   "void setAutoExpandDelay ( int )"
   "void setColumnHidden ( int , bool )"
   "void setColumnWidth ( int , int )"
   "void setExpanded ( const QModelIndex &  , bool )"
   "void setExpandsOnDoubleClick ( bool )"
   "void setFirstColumnSpanned ( int , const QModelIndex &  , bool )"
   "void setHeader ( QHeaderView *  )"
   "void setHeaderHidden ( bool )"
   "void setIndentation ( int )"
   "void setItemsExpandable ( bool )"
   "void setRootIsDecorated ( bool )"
   "void setRowHidden ( int , const QModelIndex &  , bool )"
   "void setSortingEnabled ( bool )"
   "void setTreePosition ( int )"
   "void setUniformRowHeights ( bool )"
   "void setWordWrap ( bool )"
   "void sortByColumn ( int , Qt::SortOrder )"
   "int treePosition () const"
   "bool uniformRowHeights () const"
   "bool wordWrap () const"
   "protected void drawTree ( QPainter *  , const QRegion &  ) const"
   "protected int indexRowSizeHint ( const QModelIndex &  ) const"
   "protected int rowHeight ( const QModelIndex &  ) const"
   "virtual void dataChanged ( const QModelIndex &  , const QModelIndex &  , const QVector<int> &  = QVector<int> () )"
   "virtual QModelIndex indexAt ( const QPoint &  ) const"
   "virtual void keyboardSearch ( const QString &  )"
   "virtual void reset ()"
   "virtual void scrollTo ( const QModelIndex &  , ScrollHint = EnsureVisible )"
   "virtual void selectAll ()"
   "virtual void setModel ( QAbstractItemModel *  )"
   "virtual void setRootIndex ( const QModelIndex &  )"
   "virtual void setSelectionModel ( QItemSelectionModel *  )"
   "virtual QRect visualRect ( const QModelIndex &  ) const")
  (("QTreeWidget" . "QTreeView")
   "new QTreeWidget ( QWidget *  = 0 )"
   "void addTopLevelItem ( QTreeWidgetItem *  )"
   "void addTopLevelItems ( const QList<QTreeWidgetItem *> &  )"
   "void closePersistentEditor ( QTreeWidgetItem *  , int = 0 )"
   "int columnCount () const"
   "int currentColumn () const"
   "QTreeWidgetItem * currentItem () const"
   "void editItem ( QTreeWidgetItem *  , int = 0 )"
   "QList<QTreeWidgetItem *> findItems ( const QString &  , Qt::MatchFlags , int = 0 ) const"
   "QTreeWidgetItem * headerItem () const"
   "int indexOfTopLevelItem ( QTreeWidgetItem *  ) const"
   "void insertTopLevelItem ( int , QTreeWidgetItem *  )"
   "void insertTopLevelItems ( int , const QList<QTreeWidgetItem *> &  )"
   "QTreeWidgetItem * invisibleRootItem () const"
   "bool isFirstItemColumnSpanned ( const QTreeWidgetItem *  ) const"
   "QTreeWidgetItem * itemAbove ( const QTreeWidgetItem *  ) const"
   "QTreeWidgetItem * itemAt ( const QPoint &  ) const"
   "QTreeWidgetItem * itemAt ( int , int ) const"
   "QTreeWidgetItem * itemBelow ( const QTreeWidgetItem *  ) const"
   "QWidget * itemWidget ( QTreeWidgetItem *  , int ) const"
   "void openPersistentEditor ( QTreeWidgetItem *  , int = 0 )"
   "void removeItemWidget ( QTreeWidgetItem *  , int )"
   "QList<QTreeWidgetItem *> selectedItems () const"
   "void setColumnCount ( int )"
   "void setCurrentItem ( QTreeWidgetItem *  )"
   "void setCurrentItem ( QTreeWidgetItem *  , int )"
   "void setCurrentItem ( QTreeWidgetItem *  , int , QItemSelectionModel::SelectionFlags )"
   "void setFirstItemColumnSpanned ( const QTreeWidgetItem *  , bool )"
   "void setHeaderItem ( QTreeWidgetItem *  )"
   "void setHeaderLabel ( const QString &  )"
   "void setHeaderLabels ( const QStringList &  )"
   "void setItemWidget ( QTreeWidgetItem *  , int , QWidget *  )"
   "int sortColumn () const"
   "void sortItems ( int , Qt::SortOrder )"
   "QTreeWidgetItem * takeTopLevelItem ( int )"
   "QTreeWidgetItem * topLevelItem ( int ) const"
   "int topLevelItemCount () const"
   "QRect visualItemRect ( const QTreeWidgetItem *  ) const"
   "protected QModelIndex indexFromItem ( QTreeWidgetItem *  , int = 0 ) const"
   "protected QTreeWidgetItem * itemFromIndex ( const QModelIndex &  ) const"
   "virtual void setSelectionModel ( QItemSelectionModel *  )")
  (("QUdpSocket" . "QAbstractSocket")
   "new QUdpSocket ( QObject *  = 0 )"
   "bool hasPendingDatagrams () const"
   "bool joinMulticastGroup ( const QHostAddress &  )"
   "bool joinMulticastGroup ( const QHostAddress &  , const QNetworkInterface &  )"
   "bool leaveMulticastGroup ( const QHostAddress &  )"
   "bool leaveMulticastGroup ( const QHostAddress &  , const QNetworkInterface &  )"
   "QNetworkInterface multicastInterface () const"
   "qint64 pendingDatagramSize () const"
   "qint64 readDatagram ( char *  , qint64 , QHostAddress *  = 0 , quint16 *  = 0 )"
   "void setMulticastInterface ( const QNetworkInterface &  )"
   "qint64 writeDatagram ( const char *  , qint64 , const QHostAddress &  , quint16 )"
   "qint64 writeDatagram ( const QByteArray &  , const QHostAddress &  , quint16 )")
  (("QUndoGroup" . "QObject")
   "new QUndoGroup ( QObject *  = 0 )"
   "QUndoStack * activeStack () const"
   "void addStack ( QUndoStack *  )"
   "bool canRedo () const"
   "bool canUndo () const"
   "QAction * createRedoAction ( QObject *  , const QString &  = QString() ) const"
   "QAction * createUndoAction ( QObject *  , const QString &  = QString() ) const"
   "bool isClean () const"
   "QString redoText () const"
   "void removeStack ( QUndoStack *  )"
   "QList<QUndoStack *> stacks () const"
   "QString undoText () const")
  (("QUndoStack" . "QObject")
   "new QUndoStack ( QObject *  = 0 )"
   "void beginMacro ( const QString &  )"
   "bool canRedo () const"
   "bool canUndo () const"
   "int cleanIndex () const"
   "void clear ()"
   "const QUndoCommand * command ( int ) const"
   "int count () const"
   "QAction * createRedoAction ( QObject *  , const QString &  = QString() ) const"
   "QAction * createUndoAction ( QObject *  , const QString &  = QString() ) const"
   "void endMacro ()"
   "int index () const"
   "bool isActive () const"
   "bool isClean () const"
   "void push ( QUndoCommand *  )"
   "QString redoText () const"
   "void setUndoLimit ( int )"
   "QString text ( int ) const"
   "int undoLimit () const"
   "QString undoText () const")
  (("QUndoView" . "QListView")
   "new QUndoView ( QWidget *  = 0 )"
   "new QUndoView ( QUndoStack *  , QWidget *  = 0 )"
   "new QUndoView ( QUndoGroup *  , QWidget *  = 0 )"
   "QIcon cleanIcon () const"
   "QString emptyLabel () const"
   "QUndoGroup * group () const"
   "void setCleanIcon ( const QIcon &  )"
   "void setEmptyLabel ( const QString &  )"
   "QUndoStack * stack () const")
  (("QVBoxLayout" . "QBoxLayout")
   "new QVBoxLayout ()"
   "new QVBoxLayout ( QWidget *  )")
  (("QValidator" . "QObject")
   "new QValidator ( QObject *  = 0 )"
   "virtual void fixup ( QString &  ) const"
   "QLocale locale () const"
   "void setLocale ( const QLocale &  )"
   "virtual State validate ( QString &  , int &  ) const = 0")
  (("QVariantAnimation" . "QAbstractAnimation")
   "new QVariantAnimation ( QObject *  = 0 )"
   "QVariant currentValue () const"
   "QEasingCurve easingCurve () const"
   "QVariant endValue () const"
   "QVariant keyValueAt ( qreal ) const"
   "void setDuration ( int )"
   "void setEasingCurve ( const QEasingCurve &  )"
   "void setEndValue ( const QVariant &  )"
   "void setStartValue ( const QVariant &  )"
   "QVariant startValue () const"
   "virtual int duration () const")
  (("QVideoWidget" . "QWidget")
   "new QVideoWidget ( QWidget *  = 0 )"
   "Qt::AspectRatioMode aspectRatioMode () const"
   "int brightness () const"
   "int contrast () const"
   "int hue () const"
   "bool isFullScreen () const"
   "QMediaObject * mediaObject () const"
   "int saturation () const"
   "virtual QSize sizeHint () const")
  (("QVideoWidgetControl" . "QMediaControl")
   "virtual Qt::AspectRatioMode aspectRatioMode () const = 0"
   "virtual int brightness () const = 0"
   "virtual int contrast () const = 0"
   "virtual int hue () const = 0"
   "virtual bool isFullScreen () const = 0"
   "virtual int saturation () const = 0"
   "virtual void setAspectRatioMode ( Qt::AspectRatioMode ) = 0"
   "virtual void setBrightness ( int ) = 0"
   "virtual void setContrast ( int ) = 0"
   "virtual void setFullScreen ( bool ) = 0"
   "virtual void setHue ( int ) = 0"
   "virtual void setSaturation ( int ) = 0"
   "virtual QWidget * videoWidget () = 0")
  (("QWebEngineCookieStore" . "QObject")
   "void deleteAllCookies ()"
   "void deleteCookie ( const QNetworkCookie & , const QUrl & = QUrl() )"
   "void deleteSessionCookies ()"
   "void loadAllCookies ()"
   "void setCookie ( const QNetworkCookie & , const QUrl & = QUrl() )")
  (("QWebEngineDownloadItem" . "QObject")
   "quint32 id () const"
   "bool isFinished () const"
   "QString mimeType () const"
   "QString path () const"
   "qint64 receivedBytes () const"
   "SavePageFormat savePageFormat () const"
   "void setPath ( QString )"
   "void setSavePageFormat ( SavePageFormat )"
   "DownloadState state () const"
   "qint64 totalBytes () const"
   "DownloadType type () const"
   "QUrl url () const")
  (("QWebEnginePage" . "QObject")
   "new QWebEnginePage ( QObject * = Q_NULLPTR )"
   "new QWebEnginePage ( QWebEngineProfile * , QObject * = Q_NULLPTR )"
   "QAction * action ( WebAction ) const"
   "QColor backgroundColor () const"
   "QSizeF contentsSize () const"
   "const QWebEngineContextMenuData & contextMenuData () const"
   "QMenu * createStandardContextMenu ()"
   "void findText ( const QString & , FindFlags = FindFlags() )"
   "bool hasSelection () const"
   "QIcon icon () const"
   "QUrl iconUrl () const"
   "bool isAudioMuted () const"
   "void load ( const QUrl & )"
   "void printToPdf ( const QString & , const QPageLayout & = QPageLayout_DEFAULT )"
   "QWebEngineProfile * profile () const"
   "bool recentlyAudible () const"
   "void replaceMisspelledWord ( const QString & )"
   "QUrl requestedUrl () const"
   "void runJavaScript ( const QString & , quint32 )"
   "void runJavaScript ( const QString & )"
   "void save ( const QString & , QWebEngineDownloadItem::SavePageFormat = QWebEngineDownloadItem::MimeHtmlSaveFormat ) const"
   "QPointF scrollPosition () const"
   "QString selectedText () const"
   "void setAudioMuted ( bool )"
   "void setBackgroundColor ( const QColor & )"
   "void setContent ( const QByteArray & , const QString & = QString() , const QUrl & = QUrl() )"
   "void setFeaturePermission ( const QUrl & , Feature , PermissionPolicy )"
   "void setHtml ( const QString & , const QUrl & = QUrl() )"
   "void setUrl ( const QUrl & )"
   "void setView ( QWidget * )"
   "void setWebChannel ( QWebChannel * , uint )"
   "void setWebChannel ( QWebChannel * )"
   "void setZoomFactor ( qreal )"
   "QWebEngineSettings * settings () const"
   "QString title () const"
   "virtual void triggerAction ( WebAction , bool = false )"
   "QUrl url () const"
   "QWidget * view () const"
   "QWebChannel * webChannel () const"
   "qreal zoomFactor () const"
   "virtual bool event ( QEvent * )")
  (("QWebEngineProfile" . "QObject")
   "new QWebEngineProfile ( QObject * = Q_NULLPTR )"
   "new QWebEngineProfile ( const QString & , QObject * = Q_NULLPTR )"
   "QString cachePath () const"
   "void clearAllVisitedLinks ()"
   "void clearHttpCache ()"
   "void clearVisitedLinks ( const QList<QUrl> & )"
   "QWebEngineCookieStore * cookieStore ()"
   "QString httpAcceptLanguage () const"
   "int httpCacheMaximumSize () const"
   "HttpCacheType httpCacheType () const"
   "QString httpUserAgent () const"
   "bool isOffTheRecord () const"
   "bool isSpellCheckEnabled () const"
   "PersistentCookiesPolicy persistentCookiesPolicy () const"
   "QString persistentStoragePath () const"
   "void removeUrlScheme ( const QByteArray & )"
   "QWebEngineScriptCollection * scripts () const"
   "void setCachePath ( const QString & )"
   "void setHttpAcceptLanguage ( const QString & )"
   "void setHttpCacheMaximumSize ( int )"
   "void setHttpCacheType ( QWebEngineProfile::HttpCacheType )"
   "void setHttpUserAgent ( const QString & )"
   "void setPersistentCookiesPolicy ( QWebEngineProfile::PersistentCookiesPolicy )"
   "void setPersistentStoragePath ( const QString & )"
   "void setRequestInterceptor ( QWebEngineUrlRequestInterceptor * )"
   "void setSpellCheckEnabled ( bool )"
   "void setSpellCheckLanguages ( const QStringList & )"
   "QWebEngineSettings * settings () const"
   "QStringList spellCheckLanguages () const"
   "QString storageName () const"
   "bool visitedLinksContainsUrl ( const QUrl & ) const"
   "static QWebEngineProfile * defaultProfile ()")
  (("QWebEngineUrlRequestInterceptor" . "QObject")
   "new QWebEngineUrlRequestInterceptor ( QObject * = Q_NULLPTR )"
   "virtual void interceptRequest ( QWebEngineUrlRequestInfo & ) = 0")
  (("QWebEngineUrlRequestJob" . "QObject")
   "void fail ( Error )"
   "void redirect ( const QUrl & )"
   "QByteArray requestMethod () const"
   "QUrl requestUrl () const")
  (("QWebEngineUrlSchemeHandler" . "QObject")
   "virtual void requestStarted ( QWebEngineUrlRequestJob * ) = 0")
  (("QWebEngineView" . "QWidget")
   "new QWebEngineView ( QWidget * = Q_NULLPTR )"
   "void findText ( const QString & , QWebEnginePage::FindFlags = QWebEnginePage::FindFlags() )"
   "bool hasSelection () const"
   "QIcon icon () const"
   "QUrl iconUrl () const"
   "void load ( const QUrl & )"
   "QWebEnginePage * page () const"
   "QAction * pageAction ( QWebEnginePage::WebAction ) const"
   "QString selectedText () const"
   "void setContent ( const QByteArray & , const QString & = QString() , const QUrl & = QUrl() )"
   "void setHtml ( const QString & , const QUrl & = QUrl() )"
   "void setPage ( QWebEnginePage * )"
   "void setUrl ( const QUrl & )"
   "void setZoomFactor ( qreal )"
   "QWebEngineSettings * settings () const"
   "QString title () const"
   "void triggerPageAction ( QWebEnginePage::WebAction , bool = false )"
   "QUrl url () const"
   "qreal zoomFactor () const"
   "virtual QSize sizeHint () const")
  (("QWebFrame" . "QObject")
   "void addToJavaScriptWindowObject ( const QString &  , QObject *  , ValueOwnership = QtOwnership )"
   "QUrl baseUrl () const"
   "QList<QWebFrame *> childFrames () const"
   "QSize contentsSize () const"
   "QWebElement documentElement () const"
   "QWebElementCollection findAllElements ( const QString &  ) const"
   "QWebElement findFirstElement ( const QString &  ) const"
   "QString frameName () const"
   "QRect geometry () const"
   "bool hasFocus () const"
   "QWebHitTestResult hitTestContent ( const QPoint &  ) const"
   "QIcon icon () const"
   "void load ( const QUrl &  )"
   "void load ( const QNetworkRequest &  , QNetworkAccessManager::Operation = QNetworkAccessManager::GetOperation , const QByteArray &  = QByteArray() )"
   "QMultiMap<QString, QString> metaData () const"
   "QWebPage * page () const"
   "QWebFrame * parentFrame () const"
   "QPoint pos () const"
   "void render ( QPainter *  , const QRegion &  = QRegion() )"
   "void render ( QPainter *  , RenderLayers , const QRegion &  = QRegion() )"
   "QUrl requestedUrl () const"
   "void scroll ( int , int )"
   "QRect scrollBarGeometry ( Qt::Orientation ) const"
   "int scrollBarMaximum ( Qt::Orientation ) const"
   "int scrollBarMinimum ( Qt::Orientation ) const"
   "Qt::ScrollBarPolicy scrollBarPolicy ( Qt::Orientation ) const"
   "int scrollBarValue ( Qt::Orientation ) const"
   "QPoint scrollPosition () const"
   "void scrollToAnchor ( const QString &  )"
   "QWebSecurityOrigin securityOrigin () const"
   "void setContent ( const QByteArray &  , const QString &  = QString() , const QUrl &  = QUrl() )"
   "void setFocus ()"
   "void setHtml ( const QString &  , const QUrl &  = QUrl() )"
   "void setScrollBarPolicy ( Qt::Orientation , Qt::ScrollBarPolicy )"
   "void setScrollBarValue ( Qt::Orientation , int )"
   "void setScrollPosition ( const QPoint &  )"
   "void setTextSizeMultiplier ( qreal )"
   "void setUrl ( const QUrl &  )"
   "void setZoomFactor ( qreal )"
   "qreal textSizeMultiplier () const"
   "QString title () const"
   "QString toHtml () const"
   "QString toPlainText () const"
   "QUrl url () const"
   "qreal zoomFactor () const"
   "virtual bool event ( QEvent *  )")
  (("QWebHistoryInterface" . "QObject")
   "virtual void addHistoryEntry ( const QString &  ) = 0"
   "virtual bool historyContains ( const QString &  ) const = 0")
  (("QWebInspector" . "QWidget")
   "new QWebInspector ( QWidget *  = 0 )"
   "QWebPage * page () const"
   "void setPage ( QWebPage *  )"
   "virtual bool event ( QEvent *  )"
   "virtual QSize sizeHint () const")
  (("QWebPage" . "QObject")
   "new QWebPage ( QObject *  = 0 )"
   "QAction * action ( WebAction ) const"
   "quint64 bytesReceived () const"
   "QMenu * createStandardContextMenu ()"
   "QWebFrame * currentFrame () const"
   "virtual bool extension ( Extension , const ExtensionOption *  = 0 , ExtensionReturn *  = 0 )"
   "bool findText ( const QString &  , FindFlags = 0 )"
   "bool focusNextPrevChild ( bool )"
   "bool forwardUnsupportedContent () const"
   "QWebFrame * frameAt ( const QPoint &  ) const"
   "bool hasSelection () const"
   "QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "bool isContentEditable () const"
   "bool isModified () const"
   "LinkDelegationPolicy linkDelegationPolicy () const"
   "QWebFrame * mainFrame () const"
   "QNetworkAccessManager * networkAccessManager () const"
   "QPalette palette () const"
   "QWebPluginFactory * pluginFactory () const"
   "QSize preferredContentsSize () const"
   "QString selectedHtml () const"
   "QString selectedText () const"
   "void setActualVisibleContentRect ( const QRect &  ) const"
   "void setContentEditable ( bool )"
   "void setFeaturePermission ( QWebFrame *  , Feature , PermissionPolicy )"
   "void setForwardUnsupportedContent ( bool )"
   "void setLinkDelegationPolicy ( LinkDelegationPolicy )"
   "void setNetworkAccessManager ( QNetworkAccessManager *  )"
   "void setPalette ( const QPalette &  )"
   "void setPluginFactory ( QWebPluginFactory *  )"
   "void setPreferredContentsSize ( const QSize &  ) const"
   "void setView ( QWidget *  )"
   "void setViewportSize ( const QSize &  ) const"
   "void setVisibilityState ( VisibilityState )"
   "QWebSettings * settings () const"
   "virtual bool shouldInterruptJavaScript ()"
   "QStringList supportedContentTypes () const"
   "bool supportsContentType ( const QString &  ) const"
   "virtual bool supportsExtension ( Extension ) const"
   "bool swallowContextMenuEvent ( QContextMenuEvent *  )"
   "quint64 totalBytes () const"
   "virtual void triggerAction ( WebAction , bool = false )"
   "QUndoStack * undoStack () const"
   "void updatePositionDependentActions ( const QPoint &  )"
   "QWidget * view () const"
   "QSize viewportSize () const"
   "VisibilityState visibilityState () const"
   "virtual bool event ( QEvent *  )")
  (("QWebPluginFactory" . "QObject")
   "new QWebPluginFactory ( QObject *  = 0 )"
   "virtual QObject * create ( const QString &  , const QUrl &  , const QStringList &  , const QStringList &  ) const = 0"
   "virtual QList<Plugin> plugins () const = 0"
   "virtual void refreshPlugins ()")
  (("QWebView" . "QWidget")
   "new QWebView ( QWidget *  = 0 )"
   "bool findText ( const QString &  , QWebPage::FindFlags = 0 )"
   "bool hasSelection () const"
   "QIcon icon () const"
   "bool isModified () const"
   "void load ( const QUrl &  )"
   "void load ( const QNetworkRequest &  , QNetworkAccessManager::Operation = QNetworkAccessManager::GetOperation , const QByteArray &  = QByteArray() )"
   "QWebPage * page () const"
   "QAction * pageAction ( QWebPage::WebAction ) const"
   "QPainter::RenderHints renderHints () const"
   "QString selectedHtml () const"
   "QString selectedText () const"
   "void setContent ( const QByteArray &  , const QString &  = QString() , const QUrl &  = QUrl() )"
   "void setHtml ( const QString &  , const QUrl &  = QUrl() )"
   "void setPage ( QWebPage *  )"
   "void setRenderHint ( QPainter::RenderHint , bool = true )"
   "void setRenderHints ( QPainter::RenderHints )"
   "void setTextSizeMultiplier ( qreal )"
   "void setUrl ( const QUrl &  )"
   "void setZoomFactor ( qreal )"
   "QWebSettings * settings () const"
   "qreal textSizeMultiplier () const"
   "QString title () const"
   "void triggerPageAction ( QWebPage::WebAction , bool = false )"
   "QUrl url () const"
   "qreal zoomFactor () const"
   "virtual bool event ( QEvent *  )"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "virtual QSize sizeHint () const")
  (("QWidget" . "QObject")
   "new QWidget ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "bool acceptDrops () const"
   "QString accessibleDescription () const"
   "QString accessibleName () const"
   "QList<QAction *> actions () const"
   "void activateWindow ()"
   "void addAction ( QAction *  )"
   "void addActions ( const QList<QAction *> &  )"
   "void adjustSize ()"
   "bool autoFillBackground () const"
   "QPalette::ColorRole backgroundRole () const"
   "QBackingStore * backingStore () const"
   "QSize baseSize () const"
   "QWidget * childAt ( int , int ) const"
   "QWidget * childAt ( const QPoint &  ) const"
   "QRect childrenRect () const"
   "QRegion childrenRegion () const"
   "void clearFocus ()"
   "void clearMask ()"
   "QMargins contentsMargins () const"
   "QRect contentsRect () const"
   "Qt::ContextMenuPolicy contextMenuPolicy () const"
   "QCursor cursor () const"
   "WId effectiveWinId () const"
   "void ensurePolished () const"
   "Qt::FocusPolicy focusPolicy () const"
   "QWidget * focusProxy () const"
   "QWidget * focusWidget () const"
   "const QFont & font () const"
   "QFontInfo fontInfo () const"
   "QFontMetrics fontMetrics () const"
   "QPalette::ColorRole foregroundRole () const"
   "QRect frameGeometry () const"
   "QSize frameSize () const"
   "const QRect & geometry () const"
   "QPixmap grab ( const QRect &  = QRect_DEFAULT )"
   "void grabGesture ( Qt::GestureType , Qt::GestureFlags = Qt::GestureFlags() )"
   "void grabKeyboard ()"
   "void grabMouse ()"
   "void grabMouse ( const QCursor &  )"
   "int grabShortcut ( const QKeySequence &  , Qt::ShortcutContext = Qt::WindowShortcut )"
   "QGraphicsEffect * graphicsEffect () const"
   "QGraphicsProxyWidget * graphicsProxyWidget () const"
   "bool hasFocus () const"
   "virtual bool hasHeightForWidth () const"
   "bool hasMouseTracking () const"
   "int height () const"
   "virtual int heightForWidth ( int ) const"
   "Qt::InputMethodHints inputMethodHints () const"
   "virtual QVariant inputMethodQuery ( Qt::InputMethodQuery ) const"
   "void insertAction ( QAction *  , QAction *  )"
   "void insertActions ( QAction *  , QList<QAction *>  )"
   "bool isActiveWindow () const"
   "bool isAncestorOf ( const QWidget *  ) const"
   "bool isEnabled () const"
   "bool isEnabledTo ( const QWidget *  ) const"
   "bool isFullScreen () const"
   "bool isHidden () const"
   "bool isMaximized () const"
   "bool isMinimized () const"
   "bool isModal () const"
   "bool isVisible () const"
   "bool isVisibleTo ( const QWidget *  ) const"
   "bool isWindow () const"
   "bool isWindowModified () const"
   "QLayout * layout () const"
   "Qt::LayoutDirection layoutDirection () const"
   "QLocale locale () const"
   "QPoint mapFrom ( const QWidget *  , const QPoint &  ) const"
   "QPoint mapFromGlobal ( const QPoint &  ) const"
   "QPoint mapFromParent ( const QPoint &  ) const"
   "QPoint mapTo ( const QWidget *  , const QPoint &  ) const"
   "QPoint mapToGlobal ( const QPoint &  ) const"
   "QPoint mapToParent ( const QPoint &  ) const"
   "QRegion mask () const"
   "int maximumHeight () const"
   "QSize maximumSize () const"
   "int maximumWidth () const"
   "int minimumHeight () const"
   "QSize minimumSize () const"
   "virtual QSize minimumSizeHint () const"
   "int minimumWidth () const"
   "void move ( const QPoint & )"
   "void move ( int , int )"
   "QWidget * nativeParentWidget () const"
   "QWidget * nextInFocusChain () const"
   "QRect normalGeometry () const"
   "void overrideWindowFlags ( Qt::WindowFlags )"
   "const QPalette & palette () const"
   "QWidget * parentWidget () const"
   "QPoint pos () const"
   "QWidget * previousInFocusChain () const"
   "QRect rect () const"
   "void releaseKeyboard ()"
   "void releaseMouse ()"
   "void releaseShortcut ( int )"
   "void removeAction ( QAction *  )"
   "void repaint ( int , int , int , int )"
   "void repaint ( const QRect &  )"
   "void repaint ( const QRegion &  )"
   "void resize ( const QSize & )"
   "void resize ( int , int )"
   "bool restoreGeometry ( const QByteArray &  )"
   "QByteArray saveGeometry () const"
   "void scroll ( int , int )"
   "void scroll ( int , int , const QRect &  )"
   "void setAcceptDrops ( bool )"
   "void setAccessibleDescription ( const QString &  )"
   "void setAccessibleName ( const QString &  )"
   "void setAttribute ( Qt::WidgetAttribute , bool = true )"
   "void setAutoFillBackground ( bool )"
   "void setBackgroundRole ( QPalette::ColorRole )"
   "void setBaseSize ( const QSize & )"
   "void setBaseSize ( int , int )"
   "void setContentsMargins ( int , int , int , int )"
   "void setContentsMargins ( const QMargins &  )"
   "void setContextMenuPolicy ( Qt::ContextMenuPolicy )"
   "void setCursor ( const QCursor & )"
   "void setFixedHeight ( int )"
   "void setFixedSize ( const QSize &  )"
   "void setFixedSize ( int , int )"
   "void setFixedWidth ( int )"
   "void setFocus ( Qt::FocusReason )"
   "void setFocusPolicy ( Qt::FocusPolicy )"
   "void setFocusProxy ( QWidget *  )"
   "void setFont ( const QFont & )"
   "void setForegroundRole ( QPalette::ColorRole )"
   "void setGeometry ( const QRect & )"
   "void setGeometry ( int , int , int , int )"
   "void setGraphicsEffect ( QGraphicsEffect *  )"
   "void setInputMethodHints ( Qt::InputMethodHints )"
   "void setLayout ( QLayout *  )"
   "void setLayoutDirection ( Qt::LayoutDirection )"
   "void setLocale ( const QLocale &  )"
   "void setMask ( const QBitmap &  )"
   "void setMask ( const QRegion &  )"
   "void setMaximumHeight ( int )"
   "void setMaximumSize ( const QSize & )"
   "void setMaximumSize ( int , int )"
   "void setMaximumWidth ( int )"
   "void setMinimumHeight ( int )"
   "void setMinimumSize ( const QSize & )"
   "void setMinimumSize ( int , int )"
   "void setMinimumWidth ( int )"
   "void setMouseTracking ( bool )"
   "void setPalette ( const QPalette & )"
   "void setParent ( QWidget *  )"
   "void setParent ( QWidget *  , Qt::WindowFlags )"
   "void setShortcutAutoRepeat ( int , bool = true )"
   "void setShortcutEnabled ( int , bool = true )"
   "void setSizeIncrement ( const QSize & )"
   "void setSizeIncrement ( int , int )"
   "void setSizePolicy ( QSizePolicy )"
   "void setSizePolicy ( QSizePolicy::Policy , QSizePolicy::Policy )"
   "void setStatusTip ( const QString & )"
   "void setStyle ( QStyle *  )"
   "void setToolTip ( const QString & )"
   "void setToolTipDuration ( int )"
   "void setUpdatesEnabled ( bool )"
   "void setWhatsThis ( const QString & )"
   "void setWindowFilePath ( const QString &  )"
   "void setWindowFlags ( Qt::WindowFlags )"
   "void setWindowIcon ( const QIcon &  )"
   "void setWindowIconText ( const QString & )"
   "void setWindowModality ( Qt::WindowModality )"
   "void setWindowOpacity ( qreal )"
   "void setWindowRole ( const QString &  )"
   "void setWindowState ( Qt::WindowStates )"
   "QSize size () const"
   "virtual QSize sizeHint () const"
   "QSize sizeIncrement () const"
   "QSizePolicy sizePolicy () const"
   "void stackUnder ( QWidget *  )"
   "QString statusTip () const"
   "QStyle * style () const"
   "QString styleSheet () const"
   "bool testAttribute ( Qt::WidgetAttribute ) const"
   "QString toolTip () const"
   "int toolTipDuration () const"
   "bool underMouse () const"
   "void ungrabGesture ( Qt::GestureType )"
   "void unsetCursor ()"
   "void unsetLayoutDirection ()"
   "void unsetLocale ()"
   "void update ( int , int , int , int )"
   "void update ( const QRect &  )"
   "void update ( const QRegion &  )"
   "void updateGeometry ()"
   "bool updatesEnabled () const"
   "QRegion visibleRegion () const"
   "QString whatsThis () const"
   "int width () const"
   "WId winId () const"
   "QWidget * window () const"
   "QString windowFilePath () const"
   "Qt::WindowFlags windowFlags () const"
   "QIcon windowIcon () const"
   "QString windowIconText () const"
   "Qt::WindowModality windowModality () const"
   "qreal windowOpacity () const"
   "QString windowRole () const"
   "Qt::WindowStates windowState () const"
   "QString windowTitle () const"
   "Qt::WindowType windowType () const"
   "int x () const"
   "int y () const"
   "protected void create ( WId = 0 , bool = true , bool = true )"
   "protected void destroy ( bool = true , bool = true )"
   "protected bool focusNextChild ()"
   "protected bool focusPreviousChild ()"
   "static QWidget * createWindowContainer ( QWindow *  , QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "static QWidget * find ( WId )"
   "static QWidget * keyboardGrabber ()"
   "static QWidget * mouseGrabber ()"
   "static void setTabOrder ( QWidget *  , QWidget *  )")
  (("QWidgetAction" . "QAction")
   "new QWidgetAction ( QObject *  )"
   "QWidget * defaultWidget () const"
   "void releaseWidget ( QWidget *  )"
   "QWidget * requestWidget ( QWidget *  )"
   "void setDefaultWidget ( QWidget *  )"
   "protected QList<QWidget *> createdWidgets () const")
  (("QWindow" . "QObject")
   "new QWindow ( QScreen *  = 0 )"
   "new QWindow ( QWindow *  )"
   "QSize baseSize () const"
   "Qt::ScreenOrientation contentOrientation () const"
   "void create ()"
   "QCursor cursor () const"
   "void destroy ()"
   "qreal devicePixelRatio () const"
   "QString filePath () const"
   "Qt::WindowFlags flags () const"
   "virtual QObject * focusObject () const"
   "QRect frameGeometry () const"
   "QMargins frameMargins () const"
   "QPoint framePosition () const"
   "QRect geometry () const"
   "int height () const"
   "QIcon icon () const"
   "bool isActive () const"
   "bool isAncestorOf ( const QWindow *  , AncestorMode = IncludeTransients ) const"
   "bool isExposed () const"
   "bool isModal () const"
   "bool isTopLevel () const"
   "bool isVisible () const"
   "QPoint mapFromGlobal ( const QPoint &  ) const"
   "QPoint mapToGlobal ( const QPoint &  ) const"
   "QRegion mask () const"
   "int maximumHeight () const"
   "QSize maximumSize () const"
   "int maximumWidth () const"
   "int minimumHeight () const"
   "QSize minimumSize () const"
   "int minimumWidth () const"
   "Qt::WindowModality modality () const"
   "qreal opacity () const"
   "QWindow * parent () const"
   "QPoint position () const"
   "void reportContentOrientationChange ( Qt::ScreenOrientation )"
   "QSurfaceFormat requestedFormat () const"
   "void resize ( const QSize &  )"
   "void resize ( int , int )"
   "QScreen * screen () const"
   "void setBaseSize ( const QSize &  )"
   "void setCursor ( const QCursor &  )"
   "void setFilePath ( const QString &  )"
   "void setFlags ( Qt::WindowFlags )"
   "void setFormat ( const QSurfaceFormat &  )"
   "void setFramePosition ( const QPoint &  )"
   "void setGeometry ( int , int , int , int )"
   "void setGeometry ( const QRect &  )"
   "void setIcon ( const QIcon &  )"
   "bool setKeyboardGrabEnabled ( bool )"
   "void setMask ( const QRegion &  )"
   "void setMaximumSize ( const QSize &  )"
   "void setMinimumSize ( const QSize &  )"
   "void setModality ( Qt::WindowModality )"
   "bool setMouseGrabEnabled ( bool )"
   "void setOpacity ( qreal )"
   "void setParent ( QWindow *  )"
   "void setPosition ( const QPoint &  )"
   "void setPosition ( int , int )"
   "void setScreen ( QScreen *  )"
   "void setSizeIncrement ( const QSize &  )"
   "void setSurfaceType ( SurfaceType )"
   "void setTransientParent ( QWindow *  )"
   "void setVisibility ( Visibility )"
   "void setWindowState ( Qt::WindowState )"
   "QSize sizeIncrement () const"
   "QString title () const"
   "QWindow * transientParent () const"
   "Qt::WindowType type () const"
   "void unsetCursor ()"
   "Visibility visibility () const"
   "int width () const"
   "WId winId () const"
   "Qt::WindowState windowState () const"
   "int x () const"
   "int y () const"
   "virtual QSurfaceFormat format () const"
   "virtual QSize size () const"
   "virtual SurfaceType surfaceType () const"
   "static QWindow * fromWinId ( WId )")
  (("QWizard" . "QDialog")
   "new QWizard ( QWidget *  = 0 , Qt::WindowFlags = 0 )"
   "int addPage ( QWizardPage *  )"
   "QAbstractButton * button ( WizardButton ) const"
   "QString buttonText ( WizardButton ) const"
   "int currentId () const"
   "QWizardPage * currentPage () const"
   "QVariant field ( const QString &  ) const"
   "bool hasVisitedPage ( int ) const"
   "virtual int nextId () const"
   "WizardOptions options () const"
   "QWizardPage * page ( int ) const"
   "QList<int> pageIds () const"
   "QPixmap pixmap ( WizardPixmap ) const"
   "void removePage ( int )"
   "void setButton ( WizardButton , QAbstractButton *  )"
   "void setButtonText ( WizardButton , const QString &  )"
   "void setDefaultProperty ( const char *  , const char *  , const char *  )"
   "void setField ( const QString &  , const QVariant &  )"
   "void setOption ( WizardOption , bool = true )"
   "void setOptions ( WizardOptions )"
   "void setPage ( int , QWizardPage *  )"
   "void setPixmap ( WizardPixmap , const QPixmap &  )"
   "void setSideWidget ( QWidget *  )"
   "void setStartId ( int )"
   "void setSubTitleFormat ( Qt::TextFormat )"
   "void setTitleFormat ( Qt::TextFormat )"
   "void setWizardStyle ( WizardStyle )"
   "QWidget * sideWidget () const"
   "int startId () const"
   "Qt::TextFormat subTitleFormat () const"
   "bool testOption ( WizardOption ) const"
   "Qt::TextFormat titleFormat () const"
   "virtual bool validateCurrentPage ()"
   "QList<int> visitedPages () const"
   "WizardStyle wizardStyle () const"
   "virtual void setVisible ( bool )"
   "virtual QSize sizeHint () const")
  (("QWizardPage" . "QWidget")
   "new QWizardPage ( QWidget *  = 0 )"
   "QString buttonText ( QWizard::WizardButton ) const"
   "virtual void cleanupPage ()"
   "virtual void initializePage ()"
   "bool isCommitPage () const"
   "virtual bool isComplete () const"
   "bool isFinalPage () const"
   "virtual int nextId () const"
   "QPixmap pixmap ( QWizard::WizardPixmap ) const"
   "void setButtonText ( QWizard::WizardButton , const QString &  )"
   "void setCommitPage ( bool )"
   "void setFinalPage ( bool )"
   "void setPixmap ( QWizard::WizardPixmap , const QPixmap &  )"
   "void setSubTitle ( const QString &  )"
   "void setTitle ( const QString &  )"
   "QString subTitle () const"
   "QString title () const"
   "virtual bool validatePage ()"
   "protected QVariant field ( const QString &  ) const"
   "protected void registerField ( const QString &  , QWidget *  , const char *  = 0 , const char *  = 0 )"
   "protected void setField ( const QString &  , const QVariant &  )"
   "protected QWizard * wizard () const")
))
