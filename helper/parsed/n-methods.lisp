(defparameter *n-methods* '(
  (("QAbstractGraphicsShapeItem" . "QGraphicsItem")
   "new QAbstractGraphicsShapeItem ( QGraphicsItem * = 0 )"
   "QBrush brush () const"
   "QPen pen () const"
   "void setBrush ( const QBrush & )"
   "void setPen ( const QPen & )"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const")
  (("QAccessible" . NIL)
   "static QAccessibleInterface * accessibleInterface ( Id )"
   "static void deleteAccessibleInterface ( Id )"
   "static void installFactory ( InterfaceFactory )"
   "static bool isActive ()"
   "static QAccessibleInterface * queryAccessibleInterface ( QObject * )"
   "static Id registerAccessibleInterface ( QAccessibleInterface * )"
   "static void removeFactory ( InterfaceFactory )"
   "static void setRootObject ( QObject * )"
   "static Id uniqueId ( QAccessibleInterface * )"
   "static void updateAccessibility ( QAccessibleEvent * )")
  (("QAccessibleEvent" . NIL)
   "new QAccessibleEvent ( QObject * , QAccessible::Event )"
   "new QAccessibleEvent ( QAccessibleInterface * , QAccessible::Event )"
   "virtual QAccessibleInterface * accessibleInterface () const"
   "int child () const"
   "QObject * object () const"
   "void setChild ( int )"
   "QAccessible::Event type () const")
  (("QAccessibleInterface" . NIL)
   "QAccessibleActionInterface * actionInterface ()"
   "virtual QColor backgroundColor () const"
   "virtual QAccessibleInterface * child ( int ) const = 0"
   "virtual QAccessibleInterface * childAt ( int , int ) const = 0"
   "virtual int childCount () const = 0"
   "virtual QAccessibleInterface * focusChild () const"
   "virtual QColor foregroundColor () const"
   "virtual int indexOfChild ( const QAccessibleInterface * ) const = 0"
   "virtual bool isValid () const = 0"
   "virtual QObject * object () const = 0"
   "virtual QAccessibleInterface * parent () const = 0"
   "virtual QRect rect () const = 0"
   "virtual QAccessible::Role role () const = 0"
   "virtual void setText ( QAccessible::Text , const QString & ) = 0"
   "QAccessibleTableCellInterface * tableCellInterface ()"
   "QAccessibleTableInterface * tableInterface ()"
   "virtual QString text ( QAccessible::Text ) const = 0"
   "QAccessibleTextInterface * textInterface ()"
   "QAccessibleValueInterface * valueInterface ()"
   "virtual QWindow * window () const")
  (("QAccessibleObject" . "QAccessibleInterface")
   "virtual QAccessibleInterface * childAt ( int , int ) const"
   "virtual bool isValid () const"
   "virtual QObject * object () const"
   "virtual QRect rect () const"
   "virtual void setText ( QAccessible::Text , const QString & )")
  (("QAccessibleWidget" . "QAccessibleObject")
   "new QAccessibleWidget ( QWidget * , QAccessible::Role = QAccessible::Client , const QString & = QString() )"
   "protected void addControllingSignal ( const QString & )"
   "protected QObject * parentObject () const"
   "protected QWidget * widget () const"
   "virtual QStringList actionNames () const"
   "virtual QColor backgroundColor () const"
   "virtual QAccessibleInterface * child ( int ) const"
   "virtual int childCount () const"
   "virtual void doAction ( const QString & )"
   "virtual QAccessibleInterface * focusChild () const"
   "virtual QColor foregroundColor () const"
   "virtual int indexOfChild ( const QAccessibleInterface * ) const"
   "virtual bool isValid () const"
   "virtual QStringList keyBindingsForAction ( const QString & ) const"
   "virtual QAccessibleInterface * parent () const"
   "virtual QRect rect () const"
   "virtual QAccessible::Role role () const"
   "virtual QString text ( QAccessible::Text ) const"
   "virtual QWindow * window () const")
  (("QActionEvent" . "QEvent")
   "new QActionEvent ( int , QAction * , QAction * = 0 )"
   "QAction * action () const"
   "QAction * before () const")
  (("QAudioDeviceInfo" . NIL)
   "new QAudioDeviceInfo ()"
   "new QAudioDeviceInfo ( const QAudioDeviceInfo & )"
   "QString deviceName () const"
   "bool isFormatSupported ( const QAudioFormat & ) const"
   "bool isNull () const"
   "QAudioFormat nearestFormat ( const QAudioFormat & ) const"
   "QAudioFormat preferredFormat () const"
   "QList<QAudioFormat::Endian> supportedByteOrders () const"
   "QList<int> supportedChannelCounts () const"
   "QStringList supportedCodecs () const"
   "QList<int> supportedSampleRates () const"
   "QList<int> supportedSampleSizes () const"
   "QList<QAudioFormat::SampleType> supportedSampleTypes () const"
   "static QList<QAudioDeviceInfo> availableDevices ( QAudio::Mode )"
   "static QAudioDeviceInfo defaultInputDevice ()"
   "static QAudioDeviceInfo defaultOutputDevice ()")
  (("QAudioEncoderSettings" . NIL)
   "new QAudioEncoderSettings ()"
   "new QAudioEncoderSettings ( const QAudioEncoderSettings & )"
   "int bitRate () const"
   "int channelCount () const"
   "QString codec () const"
   "QMultimedia::EncodingMode encodingMode () const"
   "QVariant encodingOption ( const QString & ) const"
   "bool isNull () const"
   "QMultimedia::EncodingQuality quality () const"
   "int sampleRate () const"
   "void setBitRate ( int )"
   "void setChannelCount ( int )"
   "void setCodec ( const QString & )"
   "void setEncodingMode ( QMultimedia::EncodingMode )"
   "void setEncodingOption ( const QString & , const QVariant & )"
   "void setQuality ( QMultimedia::EncodingQuality )"
   "void setSampleRate ( int )")
  (("QAudioFormat" . NIL)
   "new QAudioFormat ()"
   "new QAudioFormat ( const QAudioFormat & )"
   "QAudioFormat::Endian byteOrder () const"
   "qint32 bytesForDuration ( qint64 ) const"
   "qint32 bytesForFrames ( qint32 ) const"
   "int bytesPerFrame () const"
   "int channelCount () const"
   "QString codec () const"
   "qint64 durationForBytes ( qint32 ) const"
   "qint64 durationForFrames ( qint32 ) const"
   "qint32 framesForBytes ( qint32 ) const"
   "qint32 framesForDuration ( qint64 ) const"
   "bool isValid () const"
   "int sampleRate () const"
   "int sampleSize () const"
   "QAudioFormat::SampleType sampleType () const"
   "void setByteOrder ( QAudioFormat::Endian )"
   "void setChannelCount ( int )"
   "void setCodec ( const QString & )"
   "void setSampleRate ( int )"
   "void setSampleSize ( int )"
   "void setSampleType ( QAudioFormat::SampleType )")
  (("QAuthenticator" . NIL)
   "new QAuthenticator ()"
   "new QAuthenticator ( const QAuthenticator & )"
   "bool isNull () const"
   "QVariant option ( const QString & ) const"
   "QVariantHash options () const"
   "QString password () const"
   "QString realm () const"
   "void setOption ( const QString & , const QVariant & )"
   "void setPassword ( const QString & )"
   "void setUser ( const QString & )"
   "QString user () const")
  (("QBasicTimer" . NIL)
   "new QBasicTimer ()"
   "bool isActive () const"
   "void start ( int , QObject * )"
   "void start ( int , Qt::TimerType , QObject * )"
   "void stop ()"
   "int timerId () const")
  (("QBitArray" . NIL)
   "new QBitArray ()"
   "new QBitArray ( int , bool = false )"
   "new QBitArray ( const QBitArray & )"
   "bool at ( int ) const"
   "void clear ()"
   "void clearBit ( int )"
   "int count () const"
   "int count ( bool ) const"
   "bool fill ( bool , int = -1 )"
   "void fill ( bool , int , int )"
   "bool isEmpty () const"
   "bool isNull () const"
   "void resize ( int )"
   "void setBit ( int )"
   "void setBit ( int , bool )"
   "int size () const"
   "void swap ( QBitArray & )"
   "bool testBit ( int ) const"
   "bool toggleBit ( int )"
   "void truncate ( int )")
  (("QBitmap" . "QPixmap")
   "new QBitmap ()"
   "new QBitmap ( const QPixmap & )"
   "new QBitmap ( int , int )"
   "new QBitmap ( const QSize & )"
   "new QBitmap ( const QString & , const char * = 0 )"
   "void clear ()"
   "void swap ( QBitmap & )"
   "QBitmap transformed ( const QTransform & ) const"
   "static QBitmap fromImage ( const QImage & , Qt::ImageConversionFlags = Qt::AutoColor )")
  (("QBrush" . NIL)
   "new QBrush ()"
   "new QBrush ( Qt::BrushStyle )"
   "new QBrush ( const QColor & , Qt::BrushStyle = Qt::SolidPattern )"
   "new QBrush ( Qt::GlobalColor , Qt::BrushStyle = Qt::SolidPattern )"
   "new QBrush ( const QColor & , const QPixmap & )"
   "new QBrush ( Qt::GlobalColor , const QPixmap & )"
   "new QBrush ( const QPixmap & )"
   "new QBrush ( const QImage & )"
   "new QBrush ( const QBrush & )"
   "new QBrush ( const QGradient & )"
   "const QColor & color () const"
   "const QGradient * gradient () const"
   "bool isOpaque () const"
   "const QMatrix & matrix () const"
   "void setColor ( const QColor & )"
   "void setColor ( Qt::GlobalColor )"
   "void setMatrix ( const QMatrix & )"
   "void setStyle ( Qt::BrushStyle )"
   "void setTexture ( const QPixmap & )"
   "void setTextureImage ( const QImage & )"
   "void setTransform ( const QTransform & )"
   "Qt::BrushStyle style () const"
   "void swap ( QBrush & )"
   "QPixmap texture () const"
   "QImage textureImage () const"
   "QTransform transform () const")
  (("QCameraInfo" . NIL)
   "new QCameraInfo ( const QByteArray & = QByteArray() )"
   "new QCameraInfo ( const QCamera & )"
   "new QCameraInfo ( const QCameraInfo & )"
   "QString description () const"
   "QString deviceName () const"
   "bool isNull () const"
   "int orientation () const"
   "QCamera::Position position () const"
   "static QList<QCameraInfo> availableCameras ( QCamera::Position = QCamera::UnspecifiedPosition )"
   "static QCameraInfo defaultCamera ()")
  (("QCameraViewfinderSettings" . NIL)
   "new QCameraViewfinderSettings ()"
   "new QCameraViewfinderSettings ( const QCameraViewfinderSettings & )"
   "bool isNull () const"
   "qreal maximumFrameRate () const"
   "qreal minimumFrameRate () const"
   "QSize pixelAspectRatio () const"
   "QVideoFrame::PixelFormat pixelFormat () const"
   "QSize resolution () const"
   "void setMaximumFrameRate ( qreal )"
   "void setMinimumFrameRate ( qreal )"
   "void setPixelAspectRatio ( const QSize & )"
   "void setPixelAspectRatio ( int , int )"
   "void setPixelFormat ( QVideoFrame::PixelFormat )"
   "void setResolution ( const QSize & )"
   "void setResolution ( int , int )"
   "void swap ( QCameraViewfinderSettings & )")
  (("QChildEvent" . "QEvent")
   "new QChildEvent ( Type , QObject * )"
   "bool added () const"
   "QObject * child () const"
   "bool polished () const"
   "bool removed () const")
  (("QCloseEvent" . "QEvent")
   "new QCloseEvent ()")
  (("QColor" . NIL)
   "new QColor ()"
   "new QColor ( int , int , int , int = 255 )"
   "new QColor ( QRgb )"
   "new QColor ( const QString & )"
   "new QColor ( const char * )"
   "new QColor ( const QColor & )"
   "new QColor ( Qt::GlobalColor )"
   "int alpha () const"
   "qreal alphaF () const"
   "int black () const"
   "qreal blackF () const"
   "int blue () const"
   "qreal blueF () const"
   "QColor convertTo ( Spec ) const"
   "int cyan () const"
   "qreal cyanF () const"
   "QColor darker ( int = 200 ) const"
   "int green () const"
   "qreal greenF () const"
   "int hslHue () const"
   "qreal hslHueF () const"
   "int hslSaturation () const"
   "qreal hslSaturationF () const"
   "int hsvHue () const"
   "qreal hsvHueF () const"
   "int hsvSaturation () const"
   "qreal hsvSaturationF () const"
   "int hue () const"
   "qreal hueF () const"
   "bool isValid () const"
   "QColor lighter ( int = 150 ) const"
   "int lightness () const"
   "qreal lightnessF () const"
   "int magenta () const"
   "qreal magentaF () const"
   "QString name () const"
   "QString name ( NameFormat ) const"
   "int red () const"
   "qreal redF () const"
   "QRgb rgb () const"
   "QRgb rgba () const"
   "int saturation () const"
   "qreal saturationF () const"
   "void setAlpha ( int )"
   "void setAlphaF ( qreal )"
   "void setBlue ( int )"
   "void setBlueF ( qreal )"
   "void setCmyk ( int , int , int , int , int = 255 )"
   "void setCmykF ( qreal , qreal , qreal , qreal , qreal = 1.0 )"
   "void setGreen ( int )"
   "void setGreenF ( qreal )"
   "void setHsl ( int , int , int , int = 255 )"
   "void setHslF ( qreal , qreal , qreal , qreal = 1.0 )"
   "void setHsv ( int , int , int , int = 255 )"
   "void setHsvF ( qreal , qreal , qreal , qreal = 1.0 )"
   "void setNamedColor ( const QString & )"
   "void setRed ( int )"
   "void setRedF ( qreal )"
   "void setRgb ( int , int , int , int = 255 )"
   "void setRgb ( QRgb )"
   "void setRgbF ( qreal , qreal , qreal , qreal = 1.0 )"
   "void setRgba ( QRgb )"
   "Spec spec () const"
   "QColor toCmyk () const"
   "QColor toHsl () const"
   "QColor toHsv () const"
   "QColor toRgb () const"
   "int value () const"
   "qreal valueF () const"
   "int yellow () const"
   "qreal yellowF () const"
   "static QStringList colorNames ()"
   "static QColor fromCmyk ( int , int , int , int , int = 255 )"
   "static QColor fromCmykF ( qreal , qreal , qreal , qreal , qreal = 1.0 )"
   "static QColor fromHsl ( int , int , int , int = 255 )"
   "static QColor fromHslF ( qreal , qreal , qreal , qreal = 1.0 )"
   "static QColor fromHsv ( int , int , int , int = 255 )"
   "static QColor fromHsvF ( qreal , qreal , qreal , qreal = 1.0 )"
   "static QColor fromRgb ( QRgb )"
   "static QColor fromRgb ( int , int , int , int = 255 )"
   "static QColor fromRgbF ( qreal , qreal , qreal , qreal = 1.0 )"
   "static QColor fromRgba ( QRgb )"
   "static bool isValidColor ( const QString & )")
  (("QConicalGradient" . "QGradient")
   "new QConicalGradient ()"
   "new QConicalGradient ( const QPointF & , qreal )"
   "new QConicalGradient ( qreal , qreal , qreal )"
   "qreal angle () const"
   "QPointF center () const"
   "void setAngle ( qreal )"
   "void setCenter ( const QPointF & )"
   "void setCenter ( qreal , qreal )")
  (("QContextMenuEvent" . "QInputEvent")
   "new QContextMenuEvent ( Reason , const QPoint & , const QPoint & , Qt::KeyboardModifiers )"
   "new QContextMenuEvent ( Reason , const QPoint & , const QPoint & )"
   "new QContextMenuEvent ( Reason , const QPoint & )"
   "const QPoint & globalPos () const"
   "int globalX () const"
   "int globalY () const"
   "const QPoint & pos () const"
   "Reason reason () const"
   "int x () const"
   "int y () const")
  (("QCryptographicHash" . NIL)
   "new QCryptographicHash ( Algorithm )"
   "void addData ( const char * , int )"
   "void addData ( const QByteArray & )"
   "void reset ()"
   "QByteArray result () const"
   "static QByteArray hash ( const QByteArray & , Algorithm )")
  (("QCursor" . NIL)
   "new QCursor ()"
   "new QCursor ( Qt::CursorShape )"
   "new QCursor ( const QBitmap & , const QBitmap & , int = -1 , int = -1 )"
   "new QCursor ( const QPixmap & , int = -1 , int = -1 )"
   "new QCursor ( const QCursor & )"
   "const QBitmap * bitmap () const"
   "QPoint hotSpot () const"
   "const QBitmap * mask () const"
   "QPixmap pixmap () const"
   "void setShape ( Qt::CursorShape )"
   "Qt::CursorShape shape () const"
   "static QPoint pos ()"
   "static QPoint pos ( const QScreen * )"
   "static void setPos ( int , int )"
   "static void setPos ( QScreen * , int , int )"
   "static void setPos ( const QPoint & )"
   "static void setPos ( QScreen * , const QPoint & )")
  (("QDate" . NIL)
   "new QDate ()"
   "new QDate ( int , int , int )"
   "QDate addDays ( qint64 ) const"
   "QDate addMonths ( int ) const"
   "QDate addYears ( int ) const"
   "int day () const"
   "int dayOfWeek () const"
   "int dayOfYear () const"
   "int daysInMonth () const"
   "int daysInYear () const"
   "qint64 daysTo ( const QDate & ) const"
   "bool isNull () const"
   "bool isValid () const"
   "int month () const"
   "bool setDate ( int , int , int )"
   "qint64 toJulianDay () const"
   "QString toString ( const QString & ) const"
   "QString toString ( Qt::DateFormat = Qt::TextDate ) const"
   "int year () const"
   "static QDate currentDate ()"
   "static QDate fromJulianDay ( qint64 )"
   "static QDate fromString ( const QString & , Qt::DateFormat = Qt::TextDate )"
   "static QDate fromString ( const QString & , const QString & )"
   "static bool isLeapYear ( int )"
   "static bool isValid ( int , int , int )"
   "static QString longDayName ( int , MonthNameType = DateFormat )"
   "static QString longMonthName ( int , MonthNameType = DateFormat )"
   "static QString shortDayName ( int , MonthNameType = DateFormat )"
   "static QString shortMonthName ( int , MonthNameType = DateFormat )")
  (("QDateTime" . NIL)
   "new QDateTime ()"
   "new QDateTime ( const QDate & )"
   "new QDateTime ( const QDate & , const QTime & , Qt::TimeSpec = Qt::LocalTime )"
   "new QDateTime ( const QDate & , const QTime & , Qt::TimeSpec , int )"
   "new QDateTime ( const QDate & , const QTime & , const QTimeZone & )"
   "new QDateTime ( const QDateTime & )"
   "QDateTime addDays ( qint64 ) const"
   "QDateTime addMSecs ( qint64 ) const"
   "QDateTime addMonths ( int ) const"
   "QDateTime addSecs ( qint64 ) const"
   "QDateTime addYears ( int ) const"
   "QDate date () const"
   "qint64 daysTo ( const QDateTime & ) const"
   "bool isDaylightTime () const"
   "bool isNull () const"
   "bool isValid () const"
   "qint64 msecsTo ( const QDateTime & ) const"
   "int offsetFromUtc () const"
   "qint64 secsTo ( const QDateTime & ) const"
   "void setDate ( const QDate & )"
   "void setMSecsSinceEpoch ( qint64 )"
   "void setOffsetFromUtc ( int )"
   "void setTime ( const QTime & )"
   "void setTimeSpec ( Qt::TimeSpec )"
   "void setTimeZone ( const QTimeZone & )"
   "void setTime_t ( uint )"
   "void swap ( QDateTime & )"
   "QTime time () const"
   "Qt::TimeSpec timeSpec () const"
   "QTimeZone timeZone () const"
   "QString timeZoneAbbreviation () const"
   "QDateTime toLocalTime () const"
   "qint64 toMSecsSinceEpoch () const"
   "QDateTime toOffsetFromUtc ( int ) const"
   "QString toString ( const QString & ) const"
   "QString toString ( Qt::DateFormat = Qt::TextDate ) const"
   "QDateTime toTimeSpec ( Qt::TimeSpec ) const"
   "QDateTime toTimeZone ( const QTimeZone & ) const"
   "uint toTime_t () const"
   "QDateTime toUTC () const"
   "static QDateTime currentDateTime ()"
   "static QDateTime currentDateTimeUtc ()"
   "static qint64 currentMSecsSinceEpoch ()"
   "static QDateTime fromMSecsSinceEpoch ( qint64 )"
   "static QDateTime fromMSecsSinceEpoch ( qint64 , Qt::TimeSpec , int = 0 )"
   "static QDateTime fromMSecsSinceEpoch ( qint64 , const QTimeZone & )"
   "static QDateTime fromString ( const QString & , Qt::DateFormat = Qt::TextDate )"
   "static QDateTime fromString ( const QString & , const QString & )"
   "static QDateTime fromTime_t ( uint )"
   "static QDateTime fromTime_t ( uint , Qt::TimeSpec , int = 0 )"
   "static QDateTime fromTime_t ( uint , const QTimeZone & )")
  (("QDesktopServices" . NIL)
   "static bool openUrl ( const QUrl & )")
  (("QDir" . NIL)
   "new QDir ( const QDir & )"
   "new QDir ( const QString & = QString() )"
   "new QDir ( const QString & , const QString & , SortFlags = SortFlags( Name | IgnoreCase ) , Filters = AllEntries )"
   "QString absoluteFilePath ( const QString & ) const"
   "QString absolutePath () const"
   "QString canonicalPath () const"
   "bool cd ( const QString & )"
   "bool cdUp ()"
   "uint count () const"
   "QString dirName () const"
   "QFileInfoList entryInfoList ( const QStringList & , Filters = NoFilter , SortFlags = NoSort ) const"
   "QFileInfoList entryInfoList ( Filters = NoFilter , SortFlags = NoSort ) const"
   "QStringList entryList ( const QStringList & , Filters = NoFilter , SortFlags = NoSort ) const"
   "QStringList entryList ( Filters = NoFilter , SortFlags = NoSort ) const"
   "bool exists ( const QString & ) const"
   "bool exists () const"
   "QString filePath ( const QString & ) const"
   "Filters filter () const"
   "bool isAbsolute () const"
   "bool isReadable () const"
   "bool isRelative () const"
   "bool isRoot () const"
   "bool makeAbsolute ()"
   "bool mkdir ( const QString & ) const"
   "bool mkpath ( const QString & ) const"
   "QStringList nameFilters () const"
   "QString path () const"
   "void refresh () const"
   "QString relativeFilePath ( const QString & ) const"
   "bool remove ( const QString & )"
   "bool removeRecursively ()"
   "bool rename ( const QString & , const QString & )"
   "bool rmdir ( const QString & ) const"
   "bool rmpath ( const QString & ) const"
   "void setFilter ( Filters )"
   "void setNameFilters ( const QStringList & )"
   "void setPath ( const QString & )"
   "void setSorting ( SortFlags )"
   "SortFlags sorting () const"
   "void swap ( QDir & )"
   "static void addSearchPath ( const QString & , const QString & )"
   "static QString cleanPath ( const QString & )"
   "static QDir current ()"
   "static QString currentPath ()"
   "static QFileInfoList drives ()"
   "static QString fromNativeSeparators ( const QString & )"
   "static QDir home ()"
   "static QString homePath ()"
   "static bool isAbsolutePath ( const QString & )"
   "static bool isRelativePath ( const QString & )"
   "static bool match ( const QString & , const QString & )"
   "static bool match ( const QStringList & , const QString & )"
   "static QDir root ()"
   "static QString rootPath ()"
   "static QStringList searchPaths ( const QString & )"
   "static QChar separator ()"
   "static bool setCurrent ( const QString & )"
   "static void setSearchPaths ( const QString & , const QStringList & )"
   "static QDir temp ()"
   "static QString tempPath ()"
   "static QString toNativeSeparators ( const QString & )")
  (("QDirIterator" . NIL)
   "new QDirIterator ( const QDir & , IteratorFlags = NoIteratorFlags )"
   "new QDirIterator ( const QString & , IteratorFlags = NoIteratorFlags )"
   "new QDirIterator ( const QString & , QDir::Filters , IteratorFlags = NoIteratorFlags )"
   "new QDirIterator ( const QString & , const QStringList & , QDir::Filters = QDir::NoFilter , IteratorFlags = NoIteratorFlags )"
   "QFileInfo fileInfo () const"
   "QString fileName () const"
   "QString filePath () const"
   "bool hasNext () const"
   "QString next ()"
   "QString path () const")
  (("QDragEnterEvent" . "QDragMoveEvent")
   "new QDragEnterEvent ( const QPoint & , Qt::DropActions , const QMimeData * , Qt::MouseButtons , Qt::KeyboardModifiers )")
  (("QDragLeaveEvent" . "QEvent")
   "new QDragLeaveEvent ()")
  (("QDragMoveEvent" . "QDropEvent")
   "new QDragMoveEvent ( const QPoint & , Qt::DropActions , const QMimeData * , Qt::MouseButtons , Qt::KeyboardModifiers , Type = DragMove )"
   "void accept ( const QRect & )"
   "void accept ()"
   "QRect answerRect () const"
   "void ignore ( const QRect & )"
   "void ignore ()")
  (("QDropEvent" . "QEvent")
   "new QDropEvent ( const QPointF & , Qt::DropActions , const QMimeData * , Qt::MouseButtons , Qt::KeyboardModifiers , Type = Drop )"
   "void acceptProposedAction ()"
   "Qt::DropAction dropAction () const"
   "Qt::KeyboardModifiers keyboardModifiers () const"
   "const QMimeData * mimeData () const"
   "Qt::MouseButtons mouseButtons () const"
   "QPoint pos () const"
   "const QPointF & posF () const"
   "Qt::DropActions possibleActions () const"
   "Qt::DropAction proposedAction () const"
   "void setDropAction ( Qt::DropAction )"
   "QObject * source () const")
  (("QDynamicPropertyChangeEvent" . "QEvent")
   "new QDynamicPropertyChangeEvent ( const QByteArray & )"
   "QByteArray propertyName () const")
  (("QEasingCurve" . NIL)
   "new QEasingCurve ( Type = Linear )"
   "new QEasingCurve ( const QEasingCurve & )"
   "void addCubicBezierSegment ( const QPointF & , const QPointF & , const QPointF & )"
   "void addTCBSegment ( const QPointF & , qreal , qreal , qreal )"
   "qreal amplitude () const"
   "EasingFunction customType () const"
   "qreal overshoot () const"
   "qreal period () const"
   "void setAmplitude ( qreal )"
   "void setCustomType ( EasingFunction )"
   "void setOvershoot ( qreal )"
   "void setPeriod ( qreal )"
   "void setType ( Type )"
   "void swap ( QEasingCurve & )"
   "QVector<QPointF> toCubicSpline () const"
   "Type type () const"
   "qreal valueForProgress ( qreal ) const")
  (("QEvent" . NIL)
   "new QEvent ( Type )"
   "void accept ()"
   "void ignore ()"
   "bool isAccepted () const"
   "void setAccepted ( bool )"
   "bool spontaneous () const"
   "Type type () const"
   "static int registerEventType ( int = -1 )")
  (("QFileIconProvider" . NIL)
   "new QFileIconProvider ()"
   "virtual QIcon icon ( IconType ) const"
   "virtual QIcon icon ( const QFileInfo & ) const"
   "Options options () const"
   "void setOptions ( Options )"
   "virtual QString type ( const QFileInfo & ) const")
  (("QFileInfo" . NIL)
   "new QFileInfo ()"
   "new QFileInfo ( const QString & )"
   "new QFileInfo ( const QFile & )"
   "new QFileInfo ( const QDir & , const QString & )"
   "new QFileInfo ( const QFileInfo & )"
   "QDir absoluteDir () const"
   "QString absoluteFilePath () const"
   "QString absolutePath () const"
   "QString baseName () const"
   "QString bundleName () const"
   "bool caching () const"
   "QString canonicalFilePath () const"
   "QString canonicalPath () const"
   "QString completeBaseName () const"
   "QString completeSuffix () const"
   "QDateTime created () const"
   "QDir dir () const"
   "bool exists () const"
   "QString fileName () const"
   "QString filePath () const"
   "QString group () const"
   "uint groupId () const"
   "bool isAbsolute () const"
   "bool isBundle () const"
   "bool isDir () const"
   "bool isExecutable () const"
   "bool isFile () const"
   "bool isHidden () const"
   "bool isNativePath () const"
   "bool isReadable () const"
   "bool isRelative () const"
   "bool isRoot () const"
   "bool isSymLink () const"
   "bool isWritable () const"
   "QDateTime lastModified () const"
   "QDateTime lastRead () const"
   "bool makeAbsolute ()"
   "QString owner () const"
   "uint ownerId () const"
   "QString path () const"
   "bool permission ( QFile::Permissions ) const"
   "QFile::Permissions permissions () const"
   "void refresh ()"
   "void setCaching ( bool )"
   "void setFile ( const QString & )"
   "void setFile ( const QFile & )"
   "void setFile ( const QDir & , const QString & )"
   "qint64 size () const"
   "QString suffix () const"
   "void swap ( QFileInfo & )"
   "QString symLinkTarget () const"
   "static bool exists ( const QString & )")
  (("QFileOpenEvent" . "QEvent")
   "QString file () const"
   "QUrl url () const")
  (("QFocusEvent" . "QEvent")
   "new QFocusEvent ( Type , Qt::FocusReason = Qt::OtherFocusReason )"
   "bool gotFocus () const"
   "bool lostFocus () const"
   "Qt::FocusReason reason () const")
  (("QFont" . NIL)
   "new QFont ()"
   "new QFont ( const QString & , int = -1 , int = -1 , bool = false )"
   "new QFont ( const QFont & , QPaintDevice * )"
   "new QFont ( const QFont & )"
   "bool bold () const"
   "Capitalization capitalization () const"
   "QString defaultFamily () const"
   "bool exactMatch () const"
   "QString family () const"
   "bool fixedPitch () const"
   "bool fromString ( const QString & )"
   "HintingPreference hintingPreference () const"
   "bool isCopyOf ( const QFont & ) const"
   "bool italic () const"
   "bool kerning () const"
   "QString key () const"
   "QString lastResortFamily () const"
   "QString lastResortFont () const"
   "qreal letterSpacing () const"
   "SpacingType letterSpacingType () const"
   "bool overline () const"
   "int pixelSize () const"
   "int pointSize () const"
   "qreal pointSizeF () const"
   "QFont resolve ( const QFont & ) const"
   "void setBold ( bool )"
   "void setCapitalization ( Capitalization )"
   "void setFamily ( const QString & )"
   "void setFixedPitch ( bool )"
   "void setHintingPreference ( HintingPreference )"
   "void setItalic ( bool )"
   "void setKerning ( bool )"
   "void setLetterSpacing ( SpacingType , qreal )"
   "void setOverline ( bool )"
   "void setPixelSize ( int )"
   "void setPointSize ( int )"
   "void setPointSizeF ( qreal )"
   "void setStretch ( int )"
   "void setStrikeOut ( bool )"
   "void setStyle ( Style )"
   "void setStyleHint ( StyleHint , StyleStrategy = PreferDefault )"
   "void setStyleName ( const QString & )"
   "void setStyleStrategy ( StyleStrategy )"
   "void setUnderline ( bool )"
   "void setWeight ( int )"
   "void setWordSpacing ( qreal )"
   "int stretch () const"
   "bool strikeOut () const"
   "Style style () const"
   "StyleHint styleHint () const"
   "QString styleName () const"
   "StyleStrategy styleStrategy () const"
   "void swap ( QFont & )"
   "QString toString () const"
   "bool underline () const"
   "int weight () const"
   "qreal wordSpacing () const"
   "static void insertSubstitution ( const QString & , const QString & )"
   "static void insertSubstitutions ( const QString & , const QStringList & )"
   "static void removeSubstitutions ( const QString & )"
   "static QString substitute ( const QString & )"
   "static QStringList substitutes ( const QString & )"
   "static QStringList substitutions ()")
  (("QFontDatabase" . NIL)
   "new QFontDatabase ()"
   "bool bold ( const QString & , const QString & ) const"
   "QStringList families ( WritingSystem = Any ) const"
   "QFont font ( const QString & , const QString & , int ) const"
   "bool isBitmapScalable ( const QString & , const QString & = QString() ) const"
   "bool isFixedPitch ( const QString & , const QString & = QString() ) const"
   "bool isPrivateFamily ( const QString & ) const"
   "bool isScalable ( const QString & , const QString & = QString() ) const"
   "bool isSmoothlyScalable ( const QString & , const QString & = QString() ) const"
   "bool italic ( const QString & , const QString & ) const"
   "QList<int> pointSizes ( const QString & , const QString & = QString() )"
   "QList<int> smoothSizes ( const QString & , const QString & )"
   "QString styleString ( const QFont & )"
   "QString styleString ( const QFontInfo & )"
   "QStringList styles ( const QString & ) const"
   "int weight ( const QString & , const QString & ) const"
   "static int addApplicationFont ( const QString & )"
   "static int addApplicationFontFromData ( const QByteArray & )"
   "static QStringList applicationFontFamilies ( int )"
   "static bool removeAllApplicationFonts ()"
   "static bool removeApplicationFont ( int )"
   "static QList<int> standardSizes ()"
   "static QFont systemFont ( SystemFont )"
   "static QString writingSystemName ( WritingSystem )"
   "static QString writingSystemSample ( WritingSystem )")
  (("QFontInfo" . NIL)
   "new QFontInfo ( const QFont & )"
   "new QFontInfo ( const QFontInfo & )"
   "bool bold () const"
   "bool exactMatch () const"
   "QString family () const"
   "bool fixedPitch () const"
   "bool italic () const"
   "int pixelSize () const"
   "int pointSize () const"
   "qreal pointSizeF () const"
   "QFont::Style style () const"
   "QFont::StyleHint styleHint () const"
   "QString styleName () const"
   "void swap ( QFontInfo & )"
   "int weight () const")
  (("QFontMetrics" . NIL)
   "new QFontMetrics ( const QFont & )"
   "new QFontMetrics ( const QFont & , QPaintDevice * )"
   "new QFontMetrics ( const QFontMetrics & )"
   "int ascent () const"
   "int averageCharWidth () const"
   "QRect boundingRect ( QChar ) const"
   "QRect boundingRect ( const QString & ) const"
   "int descent () const"
   "QString elidedText ( const QString & , Qt::TextElideMode , int , int = 0 ) const"
   "int height () const"
   "bool inFont ( QChar ) const"
   "bool inFontUcs4 ( uint ) const"
   "int leading () const"
   "int leftBearing ( QChar ) const"
   "int lineSpacing () const"
   "int lineWidth () const"
   "int maxWidth () const"
   "int minLeftBearing () const"
   "int minRightBearing () const"
   "int overlinePos () const"
   "int rightBearing ( QChar ) const"
   "int strikeOutPos () const"
   "void swap ( QFontMetrics & )"
   "QRect tightBoundingRect ( const QString & ) const"
   "int underlinePos () const"
   "int width ( const QString & , int = -1 ) const"
   "int width ( QChar ) const"
   "int xHeight () const")
  (("QGestureEvent" . "QEvent")
   "new QGestureEvent ( const QList<QGesture *> & )"
   "void accept ( QGesture * )"
   "void accept ( Qt::GestureType )"
   "QList<QGesture *> activeGestures () const"
   "QList<QGesture *> canceledGestures () const"
   "QGesture * gesture ( Qt::GestureType ) const"
   "QList<QGesture *> gestures () const"
   "void ignore ( QGesture * )"
   "void ignore ( Qt::GestureType )"
   "bool isAccepted ( QGesture * ) const"
   "bool isAccepted ( Qt::GestureType ) const"
   "QPointF mapToGraphicsScene ( const QPointF & ) const"
   "void setAccepted ( QGesture * , bool )"
   "void setAccepted ( Qt::GestureType , bool )"
   "QWidget * widget () const")
  (("QGradient" . NIL)
   "CoordinateMode coordinateMode () const"
   "void setColorAt ( qreal , const QColor & )"
   "void setCoordinateMode ( CoordinateMode )"
   "void setSpread ( Spread )"
   "void setStops ( const QGradientStops & )"
   "Spread spread () const"
   "QGradientStops stops () const"
   "Type type () const")
  (("QGraphicsAnchorLayout" . "QGraphicsLayout")
   "new QGraphicsAnchorLayout ( QGraphicsLayoutItem * = 0 )"
   "QGraphicsAnchor * addAnchor ( QGraphicsLayoutItem * , Qt::AnchorPoint , QGraphicsLayoutItem * , Qt::AnchorPoint )"
   "void addAnchors ( QGraphicsLayoutItem * , QGraphicsLayoutItem * , Qt::Orientations = Qt::Horizontal | Qt::Vertical )"
   "void addCornerAnchors ( QGraphicsLayoutItem * , Qt::Corner , QGraphicsLayoutItem * , Qt::Corner )"
   "QGraphicsAnchor * anchor ( QGraphicsLayoutItem * , Qt::AnchorPoint , QGraphicsLayoutItem * , Qt::AnchorPoint )"
   "qreal horizontalSpacing () const"
   "void setHorizontalSpacing ( qreal )"
   "void setSpacing ( qreal )"
   "void setVerticalSpacing ( qreal )"
   "qreal verticalSpacing () const"
   "virtual int count () const"
   "virtual void invalidate ()"
   "virtual QGraphicsLayoutItem * itemAt ( int ) const"
   "virtual void removeAt ( int )"
   "virtual void setGeometry ( const QRectF & )")
  (("QGraphicsEllipseItem" . "QAbstractGraphicsShapeItem")
   "new QGraphicsEllipseItem ( QGraphicsItem * = 0 )"
   "new QGraphicsEllipseItem ( const QRectF & , QGraphicsItem * = 0 )"
   "new QGraphicsEllipseItem ( qreal , qreal , qreal , qreal , QGraphicsItem * = 0 )"
   "QRectF rect () const"
   "void setRect ( const QRectF & )"
   "void setRect ( qreal , qreal , qreal , qreal )"
   "void setSpanAngle ( int )"
   "void setStartAngle ( int )"
   "int spanAngle () const"
   "int startAngle () const"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsGridLayout" . "QGraphicsLayout")
   "new QGraphicsGridLayout ( QGraphicsLayoutItem * = 0 )"
   "void addItem ( QGraphicsLayoutItem * , int , int , int , int , Qt::Alignment = 0 )"
   "void addItem ( QGraphicsLayoutItem * , int , int , Qt::Alignment = 0 )"
   "Qt::Alignment alignment ( QGraphicsLayoutItem * ) const"
   "Qt::Alignment columnAlignment ( int ) const"
   "int columnCount () const"
   "qreal columnMaximumWidth ( int ) const"
   "qreal columnMinimumWidth ( int ) const"
   "qreal columnPreferredWidth ( int ) const"
   "qreal columnSpacing ( int ) const"
   "int columnStretchFactor ( int ) const"
   "qreal horizontalSpacing () const"
   "QGraphicsLayoutItem * itemAt ( int , int ) const"
   "void removeItem ( QGraphicsLayoutItem * )"
   "Qt::Alignment rowAlignment ( int ) const"
   "int rowCount () const"
   "qreal rowMaximumHeight ( int ) const"
   "qreal rowMinimumHeight ( int ) const"
   "qreal rowPreferredHeight ( int ) const"
   "qreal rowSpacing ( int ) const"
   "int rowStretchFactor ( int ) const"
   "void setAlignment ( QGraphicsLayoutItem * , Qt::Alignment )"
   "void setColumnAlignment ( int , Qt::Alignment )"
   "void setColumnFixedWidth ( int , qreal )"
   "void setColumnMaximumWidth ( int , qreal )"
   "void setColumnMinimumWidth ( int , qreal )"
   "void setColumnPreferredWidth ( int , qreal )"
   "void setColumnSpacing ( int , qreal )"
   "void setColumnStretchFactor ( int , int )"
   "void setHorizontalSpacing ( qreal )"
   "void setRowAlignment ( int , Qt::Alignment )"
   "void setRowFixedHeight ( int , qreal )"
   "void setRowMaximumHeight ( int , qreal )"
   "void setRowMinimumHeight ( int , qreal )"
   "void setRowPreferredHeight ( int , qreal )"
   "void setRowSpacing ( int , qreal )"
   "void setRowStretchFactor ( int , int )"
   "void setSpacing ( qreal )"
   "void setVerticalSpacing ( qreal )"
   "qreal verticalSpacing () const"
   "virtual int count () const"
   "virtual void invalidate ()"
   "virtual QGraphicsLayoutItem * itemAt ( int ) const"
   "virtual void removeAt ( int )"
   "virtual void setGeometry ( const QRectF & )"
   "virtual QSizeF sizeHint ( Qt::SizeHint , const QSizeF & = QSizeF() ) const")
  (("QGraphicsItem" . NIL)
   "new QGraphicsItem ( QGraphicsItem * = 0 )"
   "bool acceptDrops () const"
   "bool acceptHoverEvents () const"
   "bool acceptTouchEvents () const"
   "Qt::MouseButtons acceptedMouseButtons () const"
   "virtual void advance ( int )"
   "virtual QRectF boundingRect () const = 0"
   "QRegion boundingRegion ( const QTransform & ) const"
   "qreal boundingRegionGranularity () const"
   "CacheMode cacheMode () const"
   "QList<QGraphicsItem *> childItems () const"
   "QRectF childrenBoundingRect () const"
   "void clearFocus ()"
   "QPainterPath clipPath () const"
   "virtual bool collidesWithItem ( const QGraphicsItem * , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "virtual bool collidesWithPath ( const QPainterPath & , Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QList<QGraphicsItem *> collidingItems ( Qt::ItemSelectionMode = Qt::IntersectsItemShape ) const"
   "QGraphicsItem * commonAncestorItem ( const QGraphicsItem * ) const"
   "virtual bool contains ( const QPointF & ) const"
   "QCursor cursor () const"
   "QVariant data ( int ) const"
   "QTransform deviceTransform ( const QTransform & ) const"
   "qreal effectiveOpacity () const"
   "void ensureVisible ( const QRectF & = QRectF() , int = 50 , int = 50 )"
   "void ensureVisible ( qreal , qreal , qreal , qreal , int = 50 , int = 50 )"
   "bool filtersChildEvents () const"
   "GraphicsItemFlags flags () const"
   "QGraphicsItem * focusItem () const"
   "QGraphicsItem * focusProxy () const"
   "void grabKeyboard ()"
   "void grabMouse ()"
   "QGraphicsEffect * graphicsEffect () const"
   "QGraphicsItemGroup * group () const"
   "bool hasCursor () const"
   "bool hasFocus () const"
   "void hide ()"
   "Qt::InputMethodHints inputMethodHints () const"
   "void installSceneEventFilter ( QGraphicsItem * )"
   "bool isActive () const"
   "bool isAncestorOf ( const QGraphicsItem * ) const"
   "bool isClipped () const"
   "bool isEnabled () const"
   "bool isObscured ( const QRectF & = QRectF() ) const"
   "bool isObscured ( qreal , qreal , qreal , qreal ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "bool isPanel () const"
   "bool isSelected () const"
   "bool isUnderMouse () const"
   "bool isVisible () const"
   "bool isVisibleTo ( const QGraphicsItem * ) const"
   "bool isWidget () const"
   "bool isWindow () const"
   "QTransform itemTransform ( const QGraphicsItem * , bool * = 0 ) const"
   "QPointF mapFromItem ( const QGraphicsItem * , const QPointF & ) const"
   "QPolygonF mapFromItem ( const QGraphicsItem * , const QRectF & ) const"
   "QPolygonF mapFromItem ( const QGraphicsItem * , const QPolygonF & ) const"
   "QPainterPath mapFromItem ( const QGraphicsItem * , const QPainterPath & ) const"
   "QPolygonF mapFromItem ( const QGraphicsItem * , qreal , qreal , qreal , qreal ) const"
   "QPointF mapFromItem ( const QGraphicsItem * , qreal , qreal ) const"
   "QPointF mapFromParent ( const QPointF & ) const"
   "QPolygonF mapFromParent ( const QRectF & ) const"
   "QPolygonF mapFromParent ( const QPolygonF & ) const"
   "QPainterPath mapFromParent ( const QPainterPath & ) const"
   "QPolygonF mapFromParent ( qreal , qreal , qreal , qreal ) const"
   "QPointF mapFromParent ( qreal , qreal ) const"
   "QPointF mapFromScene ( const QPointF & ) const"
   "QPolygonF mapFromScene ( const QRectF & ) const"
   "QPolygonF mapFromScene ( const QPolygonF & ) const"
   "QPainterPath mapFromScene ( const QPainterPath & ) const"
   "QPolygonF mapFromScene ( qreal , qreal , qreal , qreal ) const"
   "QPointF mapFromScene ( qreal , qreal ) const"
   "QRectF mapRectFromItem ( const QGraphicsItem * , const QRectF & ) const"
   "QRectF mapRectFromItem ( const QGraphicsItem * , qreal , qreal , qreal , qreal ) const"
   "QRectF mapRectFromParent ( const QRectF & ) const"
   "QRectF mapRectFromParent ( qreal , qreal , qreal , qreal ) const"
   "QRectF mapRectFromScene ( const QRectF & ) const"
   "QRectF mapRectFromScene ( qreal , qreal , qreal , qreal ) const"
   "QRectF mapRectToItem ( const QGraphicsItem * , const QRectF & ) const"
   "QRectF mapRectToItem ( const QGraphicsItem * , qreal , qreal , qreal , qreal ) const"
   "QRectF mapRectToParent ( const QRectF & ) const"
   "QRectF mapRectToParent ( qreal , qreal , qreal , qreal ) const"
   "QRectF mapRectToScene ( const QRectF & ) const"
   "QRectF mapRectToScene ( qreal , qreal , qreal , qreal ) const"
   "QPointF mapToItem ( const QGraphicsItem * , const QPointF & ) const"
   "QPolygonF mapToItem ( const QGraphicsItem * , const QRectF & ) const"
   "QPolygonF mapToItem ( const QGraphicsItem * , const QPolygonF & ) const"
   "QPainterPath mapToItem ( const QGraphicsItem * , const QPainterPath & ) const"
   "QPolygonF mapToItem ( const QGraphicsItem * , qreal , qreal , qreal , qreal ) const"
   "QPointF mapToItem ( const QGraphicsItem * , qreal , qreal ) const"
   "QPointF mapToParent ( const QPointF & ) const"
   "QPolygonF mapToParent ( const QRectF & ) const"
   "QPolygonF mapToParent ( const QPolygonF & ) const"
   "QPainterPath mapToParent ( const QPainterPath & ) const"
   "QPolygonF mapToParent ( qreal , qreal , qreal , qreal ) const"
   "QPointF mapToParent ( qreal , qreal ) const"
   "QPointF mapToScene ( const QPointF & ) const"
   "QPolygonF mapToScene ( const QRectF & ) const"
   "QPolygonF mapToScene ( const QPolygonF & ) const"
   "QPainterPath mapToScene ( const QPainterPath & ) const"
   "QPolygonF mapToScene ( qreal , qreal , qreal , qreal ) const"
   "QPointF mapToScene ( qreal , qreal ) const"
   "void moveBy ( qreal , qreal )"
   "qreal opacity () const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 ) = 0"
   "QGraphicsItem * panel () const"
   "PanelModality panelModality () const"
   "QGraphicsItem * parentItem () const"
   "QGraphicsObject * parentObject () const"
   "QGraphicsWidget * parentWidget () const"
   "QPointF pos () const"
   "void removeSceneEventFilter ( QGraphicsItem * )"
   "void resetTransform ()"
   "qreal rotation () const"
   "qreal scale () const"
   "QGraphicsScene * scene () const"
   "QRectF sceneBoundingRect () const"
   "QPointF scenePos () const"
   "QTransform sceneTransform () const"
   "void scroll ( qreal , qreal , const QRectF & = QRectF() )"
   "void setAcceptDrops ( bool )"
   "void setAcceptHoverEvents ( bool )"
   "void setAcceptTouchEvents ( bool )"
   "void setAcceptedMouseButtons ( Qt::MouseButtons )"
   "void setActive ( bool )"
   "void setBoundingRegionGranularity ( qreal )"
   "void setCacheMode ( CacheMode , const QSize & = QSize() )"
   "void setCursor ( const QCursor & )"
   "void setData ( int , const QVariant & )"
   "void setEnabled ( bool )"
   "void setFiltersChildEvents ( bool )"
   "void setFlag ( GraphicsItemFlag , bool = true )"
   "void setFlags ( GraphicsItemFlags )"
   "void setFocus ( Qt::FocusReason = Qt::OtherFocusReason )"
   "void setFocusProxy ( QGraphicsItem * )"
   "void setGraphicsEffect ( QGraphicsEffect * )"
   "void setGroup ( QGraphicsItemGroup * )"
   "void setInputMethodHints ( Qt::InputMethodHints )"
   "void setOpacity ( qreal )"
   "void setPanelModality ( PanelModality )"
   "void setParentItem ( QGraphicsItem * )"
   "void setPos ( const QPointF & )"
   "void setPos ( qreal , qreal )"
   "void setRotation ( qreal )"
   "void setScale ( qreal )"
   "void setSelected ( bool )"
   "void setToolTip ( const QString & )"
   "void setTransform ( const QTransform & , bool = false )"
   "void setTransformOriginPoint ( const QPointF & )"
   "void setTransformOriginPoint ( qreal , qreal )"
   "void setVisible ( bool )"
   "void setX ( qreal )"
   "void setY ( qreal )"
   "void setZValue ( qreal )"
   "virtual QPainterPath shape () const"
   "void show ()"
   "void stackBefore ( const QGraphicsItem * )"
   "QGraphicsObject * toGraphicsObject ()"
   "const QGraphicsObject * toGraphicsObject () const"
   "QString toolTip () const"
   "QGraphicsItem * topLevelItem () const"
   "QGraphicsWidget * topLevelWidget () const"
   "QTransform transform () const"
   "QPointF transformOriginPoint () const"
   "virtual int type () const"
   "void ungrabKeyboard ()"
   "void ungrabMouse ()"
   "void unsetCursor ()"
   "void update ( const QRectF & = QRectF() )"
   "void update ( qreal , qreal , qreal , qreal )"
   "QGraphicsWidget * window () const"
   "qreal x () const"
   "qreal y () const"
   "qreal zValue () const"
   "protected void prepareGeometryChange ()"
   "protected void updateMicroFocus ()")
  (("QGraphicsItemGroup" . "QGraphicsItem")
   "new QGraphicsItemGroup ( QGraphicsItem * = 0 )"
   "void addToGroup ( QGraphicsItem * )"
   "void removeFromGroup ( QGraphicsItem * )"
   "virtual QRectF boundingRect () const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 )"
   "virtual int type () const")
  (("QGraphicsLayout" . "QGraphicsLayoutItem")
   "new QGraphicsLayout ( QGraphicsLayoutItem * = 0 )"
   "void activate ()"
   "virtual int count () const = 0"
   "virtual void invalidate ()"
   "bool isActivated () const"
   "virtual QGraphicsLayoutItem * itemAt ( int ) const = 0"
   "virtual void removeAt ( int ) = 0"
   "void setContentsMargins ( qreal , qreal , qreal , qreal )"
   "virtual void widgetEvent ( QEvent * )"
   "protected void addChildLayoutItem ( QGraphicsLayoutItem * )"
   "virtual void updateGeometry ()")
  (("QGraphicsLayoutItem" . NIL)
   "new QGraphicsLayoutItem ( QGraphicsLayoutItem * = 0 , bool = false )"
   "QRectF contentsRect () const"
   "QSizeF effectiveSizeHint ( Qt::SizeHint , const QSizeF & = QSizeF() ) const"
   "QRectF geometry () const"
   "QGraphicsItem * graphicsItem () const"
   "bool isLayout () const"
   "qreal maximumHeight () const"
   "QSizeF maximumSize () const"
   "qreal maximumWidth () const"
   "qreal minimumHeight () const"
   "QSizeF minimumSize () const"
   "qreal minimumWidth () const"
   "bool ownedByLayout () const"
   "QGraphicsLayoutItem * parentLayoutItem () const"
   "qreal preferredHeight () const"
   "QSizeF preferredSize () const"
   "qreal preferredWidth () const"
   "virtual void setGeometry ( const QRectF & )"
   "void setMaximumHeight ( qreal )"
   "void setMaximumSize ( const QSizeF & )"
   "void setMaximumSize ( qreal , qreal )"
   "void setMaximumWidth ( qreal )"
   "void setMinimumHeight ( qreal )"
   "void setMinimumSize ( const QSizeF & )"
   "void setMinimumSize ( qreal , qreal )"
   "void setMinimumWidth ( qreal )"
   "void setParentLayoutItem ( QGraphicsLayoutItem * )"
   "void setPreferredHeight ( qreal )"
   "void setPreferredSize ( const QSizeF & )"
   "void setPreferredSize ( qreal , qreal )"
   "void setPreferredWidth ( qreal )"
   "void setSizePolicy ( const QSizePolicy & )"
   "void setSizePolicy ( QSizePolicy::Policy , QSizePolicy::Policy , QSizePolicy::ControlType = QSizePolicy::DefaultType )"
   "QSizePolicy sizePolicy () const"
   "virtual void updateGeometry ()"
   "protected void setGraphicsItem ( QGraphicsItem * )"
   "protected void setOwnedByLayout ( bool )")
  (("QGraphicsLineItem" . "QGraphicsItem")
   "new QGraphicsLineItem ( QGraphicsItem * = 0 )"
   "new QGraphicsLineItem ( const QLineF & , QGraphicsItem * = 0 )"
   "new QGraphicsLineItem ( qreal , qreal , qreal , qreal , QGraphicsItem * = 0 )"
   "QLineF line () const"
   "QPen pen () const"
   "void setLine ( const QLineF & )"
   "void setLine ( qreal , qreal , qreal , qreal )"
   "void setPen ( const QPen & )"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsLinearLayout" . "QGraphicsLayout")
   "new QGraphicsLinearLayout ( QGraphicsLayoutItem * = 0 )"
   "new QGraphicsLinearLayout ( Qt::Orientation , QGraphicsLayoutItem * = 0 )"
   "void addItem ( QGraphicsLayoutItem * )"
   "void addStretch ( int = 1 )"
   "Qt::Alignment alignment ( QGraphicsLayoutItem * ) const"
   "void insertItem ( int , QGraphicsLayoutItem * )"
   "void insertStretch ( int , int = 1 )"
   "qreal itemSpacing ( int ) const"
   "Qt::Orientation orientation () const"
   "void removeItem ( QGraphicsLayoutItem * )"
   "void setAlignment ( QGraphicsLayoutItem * , Qt::Alignment )"
   "void setItemSpacing ( int , qreal )"
   "void setOrientation ( Qt::Orientation )"
   "void setSpacing ( qreal )"
   "void setStretchFactor ( QGraphicsLayoutItem * , int )"
   "qreal spacing () const"
   "int stretchFactor ( QGraphicsLayoutItem * ) const"
   "virtual int count () const"
   "virtual void invalidate ()"
   "virtual QGraphicsLayoutItem * itemAt ( int ) const"
   "virtual void removeAt ( int )"
   "virtual void setGeometry ( const QRectF & )"
   "virtual QSizeF sizeHint ( Qt::SizeHint , const QSizeF & = QSizeF() ) const")
  (("QGraphicsPathItem" . "QAbstractGraphicsShapeItem")
   "new QGraphicsPathItem ( QGraphicsItem * = 0 )"
   "new QGraphicsPathItem ( const QPainterPath & , QGraphicsItem * = 0 )"
   "QPainterPath path () const"
   "void setPath ( const QPainterPath & )"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsPixmapItem" . "QGraphicsItem")
   "new QGraphicsPixmapItem ( QGraphicsItem * = 0 )"
   "new QGraphicsPixmapItem ( const QPixmap & , QGraphicsItem * = 0 )"
   "QPointF offset () const"
   "QPixmap pixmap () const"
   "void setOffset ( const QPointF & )"
   "void setOffset ( qreal , qreal )"
   "void setPixmap ( const QPixmap & )"
   "void setShapeMode ( ShapeMode )"
   "void setTransformationMode ( Qt::TransformationMode )"
   "ShapeMode shapeMode () const"
   "Qt::TransformationMode transformationMode () const"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsPolygonItem" . "QAbstractGraphicsShapeItem")
   "new QGraphicsPolygonItem ( QGraphicsItem * = 0 )"
   "new QGraphicsPolygonItem ( const QPolygonF & , QGraphicsItem * = 0 )"
   "Qt::FillRule fillRule () const"
   "QPolygonF polygon () const"
   "void setFillRule ( Qt::FillRule )"
   "void setPolygon ( const QPolygonF & )"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsRectItem" . "QAbstractGraphicsShapeItem")
   "new QGraphicsRectItem ( QGraphicsItem * = 0 )"
   "new QGraphicsRectItem ( const QRectF & , QGraphicsItem * = 0 )"
   "new QGraphicsRectItem ( qreal , qreal , qreal , qreal , QGraphicsItem * = 0 )"
   "QRectF rect () const"
   "void setRect ( const QRectF & )"
   "void setRect ( qreal , qreal , qreal , qreal )"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * = 0 )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QGraphicsSceneContextMenuEvent" . "QGraphicsSceneEvent")
   "Qt::KeyboardModifiers modifiers () const"
   "QPointF pos () const"
   "Reason reason () const"
   "QPointF scenePos () const"
   "QPoint screenPos () const")
  (("QGraphicsSceneDragDropEvent" . "QGraphicsSceneEvent")
   "void acceptProposedAction ()"
   "Qt::MouseButtons buttons () const"
   "Qt::DropAction dropAction () const"
   "const QMimeData * mimeData () const"
   "Qt::KeyboardModifiers modifiers () const"
   "QPointF pos () const"
   "Qt::DropActions possibleActions () const"
   "Qt::DropAction proposedAction () const"
   "QPointF scenePos () const"
   "QPoint screenPos () const"
   "void setDropAction ( Qt::DropAction )"
   "QWidget * source () const")
  (("QGraphicsSceneEvent" . "QEvent")
   "QWidget * widget () const")
  (("QGraphicsSceneHelpEvent" . "QGraphicsSceneEvent")
   "QPointF scenePos () const"
   "QPoint screenPos () const")
  (("QGraphicsSceneHoverEvent" . "QGraphicsSceneEvent")
   "QPointF lastPos () const"
   "QPointF lastScenePos () const"
   "QPoint lastScreenPos () const"
   "Qt::KeyboardModifiers modifiers () const"
   "QPointF pos () const"
   "QPointF scenePos () const"
   "QPoint screenPos () const")
  (("QGraphicsSceneMouseEvent" . "QGraphicsSceneEvent")
   "Qt::MouseButton button () const"
   "QPointF buttonDownPos ( Qt::MouseButton ) const"
   "QPointF buttonDownScenePos ( Qt::MouseButton ) const"
   "QPoint buttonDownScreenPos ( Qt::MouseButton ) const"
   "Qt::MouseButtons buttons () const"
   "Qt::MouseEventFlags flags () const"
   "QPointF lastPos () const"
   "QPointF lastScenePos () const"
   "QPoint lastScreenPos () const"
   "Qt::KeyboardModifiers modifiers () const"
   "QPointF pos () const"
   "QPointF scenePos () const"
   "QPoint screenPos () const"
   "Qt::MouseEventSource source () const")
  (("QGraphicsSceneMoveEvent" . "QGraphicsSceneEvent")
   "new QGraphicsSceneMoveEvent ()"
   "QPointF newPos () const"
   "QPointF oldPos () const")
  (("QGraphicsSceneResizeEvent" . "QGraphicsSceneEvent")
   "new QGraphicsSceneResizeEvent ()"
   "QSizeF newSize () const"
   "QSizeF oldSize () const")
  (("QGraphicsSceneWheelEvent" . "QGraphicsSceneEvent")
   "Qt::MouseButtons buttons () const"
   "int delta () const"
   "Qt::KeyboardModifiers modifiers () const"
   "Qt::Orientation orientation () const"
   "QPointF pos () const"
   "QPointF scenePos () const"
   "QPoint screenPos () const")
  (("QGraphicsSimpleTextItem" . "QAbstractGraphicsShapeItem")
   "new QGraphicsSimpleTextItem ( QGraphicsItem * = 0 )"
   "new QGraphicsSimpleTextItem ( const QString & , QGraphicsItem * = 0 )"
   "QFont font () const"
   "void setFont ( const QFont & )"
   "void setText ( const QString & )"
   "QString text () const"
   "virtual QRectF boundingRect () const"
   "virtual bool contains ( const QPointF & ) const"
   "virtual bool isObscuredBy ( const QGraphicsItem * ) const"
   "virtual QPainterPath opaqueArea () const"
   "virtual void paint ( QPainter * , const QStyleOptionGraphicsItem * , QWidget * )"
   "virtual QPainterPath shape () const"
   "virtual int type () const")
  (("QHelpContentItem" . NIL)
   "QHelpContentItem * child ( int ) const"
   "int childCount () const"
   "int childPosition ( QHelpContentItem * ) const"
   "QHelpContentItem * parent () const"
   "int row () const"
   "QString title () const"
   "QUrl url () const")
  (("QHelpEvent" . "QEvent")
   "new QHelpEvent ( Type , const QPoint & , const QPoint & )"
   "const QPoint & globalPos () const"
   "int globalX () const"
   "int globalY () const"
   "const QPoint & pos () const"
   "int x () const"
   "int y () const")
  (("QHelpSearchQuery" . NIL)
   "new QHelpSearchQuery ()"
   "new QHelpSearchQuery ( FieldName , const QStringList & )")
  (("QHideEvent" . "QEvent")
   "new QHideEvent ()")
  (("QHostAddress" . NIL)
   "new QHostAddress ()"
   "new QHostAddress ( quint8 * )"
   "new QHostAddress ( const quint8 * )"
   "new QHostAddress ( const sockaddr * )"
   "new QHostAddress ( const QString & )"
   "new QHostAddress ( const QHostAddress & )"
   "new QHostAddress ( SpecialAddress )"
   "void clear ()"
   "bool isInSubnet ( const QHostAddress & , int ) const"
   "bool isLoopback () const"
   "bool isNull () const"
   "QAbstractSocket::NetworkLayerProtocol protocol () const"
   "QString scopeId () const"
   "void setAddress ( quint8 * )"
   "void setAddress ( const quint8 * )"
   "bool setAddress ( const QString & )"
   "void setAddress ( const sockaddr * )"
   "void setScopeId ( const QString & )"
   "QString toString () const")
  (("QHostInfo" . NIL)
   "new QHostInfo ( int = -1 )"
   "new QHostInfo ( const QHostInfo & )"
   "QList<QHostAddress> addresses () const"
   "HostInfoError error () const"
   "QString errorString () const"
   "QString hostName () const"
   "int lookupId () const"
   "void setAddresses ( const QList<QHostAddress> & )"
   "void setError ( HostInfoError )"
   "void setErrorString ( const QString & )"
   "void setHostName ( const QString & )"
   "void setLookupId ( int )"
   "static void abortHostLookup ( int )"
   "static QHostInfo fromName ( const QString & )"
   "static QString localDomainName ()"
   "static QString localHostName ()"
   "static int lookupHost ( const QString & , QObject * , const char * )")
  (("QHoverEvent" . "QInputEvent")
   "new QHoverEvent ( Type , const QPointF & , const QPointF & , Qt::KeyboardModifiers = Qt::NoModifier )"
   "QPoint oldPos () const"
   "const QPointF & oldPosF () const"
   "QPoint pos () const"
   "const QPointF & posF () const")
  (("QIcon" . NIL)
   "new QIcon ()"
   "new QIcon ( const QPixmap & )"
   "new QIcon ( const QIcon & )"
   "new QIcon ( const QString & )"
   "QSize actualSize ( const QSize & , Mode = Normal , State = Off ) const"
   "QSize actualSize ( QWindow * , const QSize & , Mode = Normal , State = Off ) const"
   "void addFile ( const QString & , const QSize & = QSize() , Mode = Normal , State = Off )"
   "void addPixmap ( const QPixmap & , Mode = Normal , State = Off )"
   "QList<QSize> availableSizes ( Mode = Normal , State = Off ) const"
   "qint64 cacheKey () const"
   "bool isNull () const"
   "QString name () const"
   "void paint ( QPainter * , const QRect & , Qt::Alignment = Qt::AlignCenter , Mode = Normal , State = Off ) const"
   "void paint ( QPainter * , int , int , int , int , Qt::Alignment = Qt::AlignCenter , Mode = Normal , State = Off ) const"
   "QPixmap pixmap ( const QSize & , Mode = Normal , State = Off ) const"
   "QPixmap pixmap ( QWindow * , const QSize & , Mode = Normal , State = Off ) const"
   "QPixmap pixmap ( int , int , Mode = Normal , State = Off ) const"
   "QPixmap pixmap ( int , Mode = Normal , State = Off ) const"
   "void swap ( QIcon & )"
   "static QIcon fromTheme ( const QString & , const QIcon & = QIcon() )"
   "static bool hasThemeIcon ( const QString & )"
   "static void setThemeName ( const QString & )"
   "static void setThemeSearchPaths ( const QStringList & )"
   "static QString themeName ()"
   "static QStringList themeSearchPaths ()")
  (("QIconDragEvent" . "QEvent")
   "new QIconDragEvent ()")
  (("QImage" . "QPaintDevice")
   "new QImage ()"
   "new QImage ( const QSize & , Format )"
   "new QImage ( int , int , Format )"
   "new QImage ( const QString & , const char * = 0 )"
   "new QImage ( const QImage & )"
   "bool allGray () const"
   "int bitPlaneCount () const"
   "int byteCount () const"
   "int bytesPerLine () const"
   "qint64 cacheKey () const"
   "QRgb color ( int ) const"
   "int colorCount () const"
   "QVector<QRgb> colorTable () const"
   "QImage convertToFormat ( Format , Qt::ImageConversionFlags = Qt::AutoColor ) const"
   "QImage convertToFormat ( Format , const QVector<QRgb> & , Qt::ImageConversionFlags = Qt::AutoColor ) const"
   "QImage copy ( const QRect & = QRect() ) const"
   "QImage copy ( int , int , int , int ) const"
   "QImage createAlphaMask ( Qt::ImageConversionFlags = Qt::AutoColor ) const"
   "QImage createHeuristicMask ( bool = true ) const"
   "QImage createMaskFromColor ( QRgb , Qt::MaskMode = Qt::MaskInColor ) const"
   "int depth () const"
   "qreal devicePixelRatio () const"
   "int dotsPerMeterX () const"
   "int dotsPerMeterY () const"
   "void fill ( uint )"
   "void fill ( Qt::GlobalColor )"
   "void fill ( const QColor & )"
   "Format format () const"
   "bool hasAlphaChannel () const"
   "int height () const"
   "void invertPixels ( InvertMode = InvertRgb )"
   "bool isGrayscale () const"
   "bool isNull () const"
   "bool load ( const QString & , const char * = 0 )"
   "bool loadFromData ( const QByteArray & , const char * = 0 )"
   "QImage mirrored ( bool = false , bool = true ) const"
   "QPoint offset () const"
   "QRgb pixel ( const QPoint & ) const"
   "QRgb pixel ( int , int ) const"
   "QPixelFormat pixelFormat () const"
   "int pixelIndex ( const QPoint & ) const"
   "int pixelIndex ( int , int ) const"
   "QRect rect () const"
   "QImage rgbSwapped () const"
   "bool save ( const QString & , const char * = 0 , int = -1 ) const"
   "QImage scaled ( const QSize & , Qt::AspectRatioMode = Qt::IgnoreAspectRatio , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QImage scaled ( int , int , Qt::AspectRatioMode = Qt::IgnoreAspectRatio , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QImage scaledToHeight ( int , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QImage scaledToWidth ( int , Qt::TransformationMode = Qt::FastTransformation ) const"
   "void setColor ( int , QRgb )"
   "void setColorCount ( int )"
   "void setColorTable ( const QVector<QRgb> & )"
   "void setDevicePixelRatio ( qreal )"
   "void setDotsPerMeterX ( int )"
   "void setDotsPerMeterY ( int )"
   "void setOffset ( const QPoint & )"
   "void setPixel ( const QPoint & , uint )"
   "void setPixel ( int , int , uint )"
   "void setText ( const QString & , const QString & )"
   "QSize size () const"
   "void swap ( QImage & )"
   "QString text ( const QString & = QString() ) const"
   "QStringList textKeys () const"
   "QImage transformed ( const QMatrix & , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QImage transformed ( const QTransform & , Qt::TransformationMode = Qt::FastTransformation ) const"
   "bool valid ( const QPoint & ) const"
   "bool valid ( int , int ) const"
   "int width () const"
   "protected QImage smoothScaled ( int , int ) const"
   "static QImage fromData ( const QByteArray & , const char * = 0 )"
   "static QImage::Format toImageFormat ( QPixelFormat )"
   "static QPixelFormat toPixelFormat ( QImage::Format )"
   "static QMatrix trueMatrix ( const QMatrix & , int , int )"
   "static QTransform trueMatrix ( const QTransform & , int , int )")
  (("QInputEvent" . "QEvent")
   "Qt::KeyboardModifiers modifiers () const"
   "ulong timestamp () const")
  (("QInputMethodEvent" . "QEvent")
   "new QInputMethodEvent ()"
   "new QInputMethodEvent ( const QInputMethodEvent & )"
   "const QString & commitString () const"
   "const QString & preeditString () const"
   "int replacementLength () const"
   "int replacementStart () const"
   "void setCommitString ( const QString & , int = 0 , int = 0 )")
  (("QItemEditorFactory" . NIL)
   "new QItemEditorFactory ()"
   "virtual QWidget * createEditor ( int , QWidget * ) const"
   "void registerEditor ( int , QItemEditorCreatorBase * )"
   "virtual QByteArray valuePropertyName ( int ) const"
   "static const QItemEditorFactory * defaultFactory ()"
   "static void setDefaultFactory ( QItemEditorFactory * )")
  (("QItemSelectionRange" . NIL)
   "new QItemSelectionRange ()"
   "new QItemSelectionRange ( const QItemSelectionRange & )"
   "new QItemSelectionRange ( const QModelIndex & , const QModelIndex & )"
   "new QItemSelectionRange ( const QModelIndex & )"
   "int bottom () const"
   "const QPersistentModelIndex & bottomRight () const"
   "bool contains ( const QModelIndex & ) const"
   "bool contains ( int , int , const QModelIndex & ) const"
   "int height () const"
   "QModelIndexList indexes () const"
   "QItemSelectionRange intersected ( const QItemSelectionRange & ) const"
   "bool intersects ( const QItemSelectionRange & ) const"
   "bool isEmpty () const"
   "bool isValid () const"
   "int left () const"
   "const QAbstractItemModel * model () const"
   "QModelIndex parent () const"
   "int right () const"
   "int top () const"
   "const QPersistentModelIndex & topLeft () const"
   "int width () const")
  (("QKeyEvent" . "QInputEvent")
   "new QKeyEvent ( Type , int , Qt::KeyboardModifiers , const QString & = QString() , bool = false , ushort = 1 )"
   "int count () const"
   "bool isAutoRepeat () const"
   "int key () const"
   "bool matches ( QKeySequence::StandardKey ) const"
   "Qt::KeyboardModifiers modifiers () const"
   "QString text () const")
  (("QKeySequence" . NIL)
   "new QKeySequence ()"
   "new QKeySequence ( const QString & , SequenceFormat = NativeText )"
   "new QKeySequence ( int , int = 0 , int = 0 , int = 0 )"
   "new QKeySequence ( const QKeySequence & )"
   "new QKeySequence ( StandardKey )"
   "int count () const"
   "bool isEmpty () const"
   "SequenceMatch matches ( const QKeySequence & ) const"
   "void swap ( QKeySequence & )"
   "QString toString ( SequenceFormat = PortableText ) const"
   "static QKeySequence fromString ( const QString & , SequenceFormat = PortableText )"
   "static QList<QKeySequence> keyBindings ( StandardKey )"
   "static QList<QKeySequence> listFromString ( const QString & , SequenceFormat = PortableText )"
   "static QString listToString ( const QList<QKeySequence> & , SequenceFormat = PortableText )"
   "static QKeySequence mnemonic ( const QString & )")
  (("QLayoutItem" . NIL)
   "new QLayoutItem ( Qt::Alignment = 0 )"
   "Qt::Alignment alignment () const"
   "virtual QSizePolicy::ControlTypes controlTypes () const"
   "virtual Qt::Orientations expandingDirections () const = 0"
   "virtual QRect geometry () const = 0"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual void invalidate ()"
   "virtual bool isEmpty () const = 0"
   "virtual QLayout * layout ()"
   "virtual QSize maximumSize () const = 0"
   "virtual int minimumHeightForWidth ( int ) const"
   "virtual QSize minimumSize () const = 0"
   "void setAlignment ( Qt::Alignment )"
   "virtual void setGeometry ( const QRect & ) = 0"
   "virtual QSize sizeHint () const = 0"
   "virtual QSpacerItem * spacerItem ()"
   "virtual QWidget * widget ()")
  (("QLibraryInfo" . NIL)
   "static bool isDebugBuild ()"
   "static QString licensedProducts ()"
   "static QString licensee ()"
   "static QString location ( LibraryLocation )")
  (("QLinearGradient" . "QGradient")
   "new QLinearGradient ()"
   "new QLinearGradient ( const QPointF & , const QPointF & )"
   "new QLinearGradient ( qreal , qreal , qreal , qreal )"
   "QPointF finalStop () const"
   "void setFinalStop ( const QPointF & )"
   "void setFinalStop ( qreal , qreal )"
   "void setStart ( const QPointF & )"
   "void setStart ( qreal , qreal )"
   "QPointF start () const")
  (("QListWidgetItem" . NIL)
   "new QListWidgetItem ( QListWidget * = 0 , int = Type )"
   "new QListWidgetItem ( const QString & , QListWidget * = 0 , int = Type )"
   "new QListWidgetItem ( const QIcon & , const QString & , QListWidget * = 0 , int = Type )"
   "new QListWidgetItem ( const QListWidgetItem & )"
   "QBrush background () const"
   "Qt::CheckState checkState () const"
   "virtual QListWidgetItem * clone () const"
   "virtual QVariant data ( int ) const"
   "Qt::ItemFlags flags () const"
   "QFont font () const"
   "QBrush foreground () const"
   "QIcon icon () const"
   "bool isHidden () const"
   "bool isSelected () const"
   "QListWidget * listWidget () const"
   "void setBackground ( const QBrush & )"
   "void setCheckState ( Qt::CheckState )"
   "virtual void setData ( int , const QVariant & )"
   "void setFlags ( Qt::ItemFlags )"
   "void setFont ( const QFont & )"
   "void setForeground ( const QBrush & )"
   "void setHidden ( bool )"
   "void setIcon ( const QIcon & )"
   "void setSelected ( bool )"
   "void setSizeHint ( const QSize & )"
   "void setStatusTip ( const QString & )"
   "void setText ( const QString & )"
   "void setTextAlignment ( int )"
   "void setToolTip ( const QString & )"
   "void setWhatsThis ( const QString & )"
   "QSize sizeHint () const"
   "QString statusTip () const"
   "QString text () const"
   "int textAlignment () const"
   "QString toolTip () const"
   "int type () const"
   "QString whatsThis () const")
  (("QLocale" . NIL)
   "new QLocale ()"
   "new QLocale ( const QString & )"
   "new QLocale ( Language , Country = AnyCountry )"
   "new QLocale ( Language , Script , Country )"
   "new QLocale ( const QLocale & )"
   "QString amText () const"
   "QString bcp47Name () const"
   "Country country () const"
   "QString createSeparatedList ( const QStringList & ) const"
   "QString currencySymbol ( CurrencySymbolFormat = CurrencySymbol ) const"
   "QString dateFormat ( FormatType = LongFormat ) const"
   "QString dateTimeFormat ( FormatType = LongFormat ) const"
   "QString dayName ( int , FormatType = LongFormat ) const"
   "QChar decimalPoint () const"
   "QChar exponential () const"
   "Qt::DayOfWeek firstDayOfWeek () const"
   "QChar groupSeparator () const"
   "Language language () const"
   "MeasurementSystem measurementSystem () const"
   "QString monthName ( int , FormatType = LongFormat ) const"
   "QString name () const"
   "QString nativeCountryName () const"
   "QString nativeLanguageName () const"
   "QChar negativeSign () const"
   "NumberOptions numberOptions () const"
   "QChar percent () const"
   "QString pmText () const"
   "QChar positiveSign () const"
   "Script script () const"
   "void setNumberOptions ( NumberOptions )"
   "QString standaloneDayName ( int , FormatType = LongFormat ) const"
   "QString standaloneMonthName ( int , FormatType = LongFormat ) const"
   "Qt::LayoutDirection textDirection () const"
   "QString timeFormat ( FormatType = LongFormat ) const"
   "QString toCurrencyString ( qlonglong , const QString & = QString() ) const"
   "QString toCurrencyString ( qulonglong , const QString & = QString() ) const"
   "QString toCurrencyString ( double , const QString & = QString() ) const"
   "QString toCurrencyString ( short , const QString & = QString() ) const"
   "QString toCurrencyString ( ushort , const QString & = QString() ) const"
   "QString toCurrencyString ( int , const QString & = QString() ) const"
   "QString toCurrencyString ( uint , const QString & = QString() ) const"
   "QString toCurrencyString ( float , const QString & = QString() ) const"
   "QDate toDate ( const QString & , FormatType = LongFormat ) const"
   "QDate toDate ( const QString & , const QString & ) const"
   "QDateTime toDateTime ( const QString & , FormatType = LongFormat ) const"
   "QDateTime toDateTime ( const QString & , const QString & ) const"
   "double toDouble ( const QString & , bool * = 0 ) const"
   "double toDouble ( const QStringRef & , bool * = 0 ) const"
   "float toFloat ( const QString & , bool * = 0 ) const"
   "float toFloat ( const QStringRef & , bool * = 0 ) const"
   "int toInt ( const QString & , bool * = 0 ) const"
   "int toInt ( const QStringRef & , bool * = 0 ) const"
   "qlonglong toLongLong ( const QString & , bool * = 0 ) const"
   "qlonglong toLongLong ( const QStringRef & , bool * = 0 ) const"
   "QString toLower ( const QString & ) const"
   "short toShort ( const QString & , bool * = 0 ) const"
   "short toShort ( const QStringRef & , bool * = 0 ) const"
   "QString toString ( qlonglong ) const"
   "QString toString ( const QDate & , const QString & ) const"
   "QString toString ( const QDate & , FormatType = LongFormat ) const"
   "QString toString ( const QTime & , const QString & ) const"
   "QString toString ( const QTime & , FormatType = LongFormat ) const"
   "QString toString ( const QDateTime & , FormatType = LongFormat ) const"
   "QString toString ( const QDateTime & , const QString & ) const"
   "QString toString ( qulonglong ) const"
   "QString toString ( double , char = 'g' , int = 6 ) const"
   "QString toString ( short ) const"
   "QString toString ( ushort ) const"
   "QString toString ( int ) const"
   "QString toString ( uint ) const"
   "QString toString ( float , char = 'g' , int = 6 ) const"
   "QTime toTime ( const QString & , FormatType = LongFormat ) const"
   "QTime toTime ( const QString & , const QString & ) const"
   "uint toUInt ( const QString & , bool * = 0 ) const"
   "uint toUInt ( const QStringRef & , bool * = 0 ) const"
   "qulonglong toULongLong ( const QString & , bool * = 0 ) const"
   "qulonglong toULongLong ( const QStringRef & , bool * = 0 ) const"
   "ushort toUShort ( const QString & , bool * = 0 ) const"
   "ushort toUShort ( const QStringRef & , bool * = 0 ) const"
   "QString toUpper ( const QString & ) const"
   "QStringList uiLanguages () const"
   "QList<Qt::DayOfWeek> weekdays () const"
   "QChar zeroDigit () const"
   "static QLocale c ()"
   "static QString countryToString ( Country )"
   "static QString languageToString ( Language )"
   "static QList<QLocale> matchingLocales ( QLocale::Language , QLocale::Script , QLocale::Country )"
   "static QString scriptToString ( Script )"
   "static void setDefault ( const QLocale & )"
   "static QLocale system ()")
  (("QMargins" . NIL)
   "new QMargins ()"
   "new QMargins ( int , int , int , int )"
   "int bottom () const"
   "bool isNull () const"
   "int left () const"
   "int right () const"
   "void setBottom ( int )"
   "void setLeft ( int )"
   "void setRight ( int )"
   "void setTop ( int )"
   "int top () const")
  (("QMatrix" . NIL)
   "new QMatrix ()"
   "new QMatrix ( qreal , qreal , qreal , qreal , qreal , qreal )"
   "new QMatrix ( const QMatrix & )"
   "qreal m11 () const"
   "qreal m12 () const"
   "qreal m21 () const"
   "qreal m22 () const"
   "qreal determinant () const"
   "qreal dx () const"
   "qreal dy () const"
   "QMatrix inverted ( bool * = 0 ) const"
   "bool isIdentity () const"
   "bool isInvertible () const"
   "QPointF map ( const QPointF & ) const"
   "QPoint map ( const QPoint & ) const"
   "QLineF map ( const QLineF & ) const"
   "QLine map ( const QLine & ) const"
   "QPolygonF map ( const QPolygonF & ) const"
   "QPolygon map ( const QPolygon & ) const"
   "QRegion map ( const QRegion & ) const"
   "QPainterPath map ( const QPainterPath & ) const"
   "QRectF mapRect ( const QRectF & ) const"
   "QRect mapRect ( const QRect & ) const"
   "QPolygon mapToPolygon ( const QRect & ) const"
   "void reset ()"
   "QMatrix & rotate ( qreal )"
   "QMatrix & scale ( qreal , qreal )"
   "void setMatrix ( qreal , qreal , qreal , qreal , qreal , qreal )"
   "QMatrix & shear ( qreal , qreal )"
   "QMatrix & translate ( qreal , qreal )")
  (("QMatrix4x4" . NIL)
   "new QMatrix4x4 ()"
   "new QMatrix4x4 ( float , float , float , float , float , float , float , float , float , float , float , float , float , float , float , float )"
   "new QMatrix4x4 ( const QTransform & )"
   "new QMatrix4x4 ( const QMatrix & )"
   "QVector4D column ( int ) const"
   "double determinant () const"
   "void fill ( float )"
   "void frustum ( float , float , float , float , float , float )"
   "QMatrix4x4 inverted ( bool * = 0 ) const"
   "bool isAffine () const"
   "bool isIdentity () const"
   "void lookAt ( const QVector3D & , const QVector3D & , const QVector3D & )"
   "QPoint map ( const QPoint & ) const"
   "QPointF map ( const QPointF & ) const"
   "QVector3D map ( const QVector3D & ) const"
   "QVector4D map ( const QVector4D & ) const"
   "QRect mapRect ( const QRect & ) const"
   "QRectF mapRect ( const QRectF & ) const"
   "QVector3D mapVector ( const QVector3D & ) const"
   "void optimize ()"
   "void ortho ( float , float , float , float , float , float )"
   "void ortho ( const QRect & )"
   "void ortho ( const QRectF & )"
   "void perspective ( float , float , float , float )"
   "void rotate ( float , const QVector3D & )"
   "void rotate ( const QQuaternion & )"
   "void rotate ( float , float , float , float = 0.0f )"
   "QVector4D row ( int ) const"
   "void scale ( const QVector3D & )"
   "void scale ( float , float )"
   "void scale ( float , float , float )"
   "void scale ( float )"
   "void setColumn ( int , const QVector4D & )"
   "void setRow ( int , const QVector4D & )"
   "void setToIdentity ()"
   "QMatrix toAffine () const"
   "QTransform toTransform () const"
   "QTransform toTransform ( float ) const"
   "void translate ( const QVector3D & )"
   "void translate ( float , float )"
   "void translate ( float , float , float )"
   "QMatrix4x4 transposed () const"
   "void viewport ( float , float , float , float , float = 0.0f , float = 1.0f )"
   "void viewport ( const QRectF & )")
  (("QMetaObject" . NIL)
   "int classInfoCount () const"
   "int classInfoOffset () const"
   "const char * className () const"
   "int constructorCount () const"
   "int enumeratorCount () const"
   "int enumeratorOffset () const"
   "int indexOfClassInfo ( const char * ) const"
   "int indexOfConstructor ( const char * ) const"
   "int indexOfEnumerator ( const char * ) const"
   "int indexOfMethod ( const char * ) const"
   "int indexOfProperty ( const char * ) const"
   "int indexOfSignal ( const char * ) const"
   "int indexOfSlot ( const char * ) const"
   "int methodCount () const"
   "int methodOffset () const"
   "int propertyCount () const"
   "int propertyOffset () const"
   "const QMetaObject * superClass () const"
   "static bool checkConnectArgs ( const char * , const char * )"
   "static void connectSlotsByName ( QObject * )"
   "static QByteArray normalizedSignature ( const char * )"
   "static QByteArray normalizedType ( const char * )")
  (("QModelIndex" . NIL)
   "new QModelIndex ()"
   "QModelIndex child ( int , int ) const"
   "int column () const"
   "QVariant data ( int = Qt::DisplayRole ) const"
   "Qt::ItemFlags flags () const"
   "quintptr internalId () const"
   "bool isValid () const"
   "const QAbstractItemModel * model () const"
   "QModelIndex parent () const"
   "int row () const"
   "QModelIndex sibling ( int , int ) const")
  (("QMouseEvent" . "QInputEvent")
   "new QMouseEvent ( Type , const QPointF & , Qt::MouseButton , Qt::MouseButtons , Qt::KeyboardModifiers )"
   "new QMouseEvent ( Type , const QPointF & , const QPointF & , Qt::MouseButton , Qt::MouseButtons , Qt::KeyboardModifiers )"
   "new QMouseEvent ( Type , const QPointF & , const QPointF & , const QPointF & , Qt::MouseButton , Qt::MouseButtons , Qt::KeyboardModifiers )"
   "Qt::MouseButton button () const"
   "Qt::MouseButtons buttons () const"
   "Qt::MouseEventFlags flags () const"
   "QPoint globalPos () const"
   "int globalX () const"
   "int globalY () const"
   "const QPointF & localPos () const"
   "QPoint pos () const"
   "const QPointF & screenPos () const"
   "Qt::MouseEventSource source () const"
   "const QPointF & windowPos () const"
   "int x () const"
   "int y () const")
  (("QMoveEvent" . "QEvent")
   "new QMoveEvent ( const QPoint & , const QPoint & )"
   "const QPoint & oldPos () const"
   "const QPoint & pos () const")
  (("QNetworkAddressEntry" . NIL)
   "new QNetworkAddressEntry ()"
   "new QNetworkAddressEntry ( const QNetworkAddressEntry & )"
   "QHostAddress broadcast () const"
   "QHostAddress ip () const"
   "QHostAddress netmask () const"
   "int prefixLength () const"
   "void setBroadcast ( const QHostAddress & )"
   "void setIp ( const QHostAddress & )"
   "void setNetmask ( const QHostAddress & )"
   "void setPrefixLength ( int )"
   "void swap ( QNetworkAddressEntry & )")
  (("QNetworkCacheMetaData" . NIL)
   "new QNetworkCacheMetaData ()"
   "new QNetworkCacheMetaData ( const QNetworkCacheMetaData & )"
   "AttributesMap attributes () const"
   "QDateTime expirationDate () const"
   "bool isValid () const"
   "QDateTime lastModified () const"
   "RawHeaderList rawHeaders () const"
   "bool saveToDisk () const"
   "void setAttributes ( const AttributesMap & )"
   "void setExpirationDate ( const QDateTime & )"
   "void setLastModified ( const QDateTime & )"
   "void setRawHeaders ( const RawHeaderList & )"
   "void setSaveToDisk ( bool )"
   "void setUrl ( const QUrl & )"
   "void swap ( QNetworkCacheMetaData & )"
   "QUrl url () const")
  (("QNetworkCookie" . NIL)
   "new QNetworkCookie ( const QByteArray & = QByteArray() , const QByteArray & = QByteArray() )"
   "new QNetworkCookie ( const QNetworkCookie & )"
   "QString domain () const"
   "QDateTime expirationDate () const"
   "bool hasSameIdentifier ( const QNetworkCookie & ) const"
   "bool isHttpOnly () const"
   "bool isSecure () const"
   "bool isSessionCookie () const"
   "QByteArray name () const"
   "void normalize ( const QUrl & )"
   "QString path () const"
   "void setDomain ( const QString & )"
   "void setExpirationDate ( const QDateTime & )"
   "void setHttpOnly ( bool )"
   "void setName ( const QByteArray & )"
   "void setPath ( const QString & )"
   "void setSecure ( bool )"
   "void setValue ( const QByteArray & )"
   "void swap ( QNetworkCookie & )"
   "QByteArray toRawForm ( RawForm = Full ) const"
   "QByteArray value () const"
   "static QList<QNetworkCookie> parseCookies ( const QByteArray & )")
  (("QNetworkInterface" . NIL)
   "new QNetworkInterface ()"
   "new QNetworkInterface ( const QNetworkInterface & )"
   "QList<QNetworkAddressEntry> addressEntries () const"
   "InterfaceFlags flags () const"
   "QString hardwareAddress () const"
   "QString humanReadableName () const"
   "int index () const"
   "bool isValid () const"
   "QString name () const"
   "void swap ( QNetworkInterface & )"
   "static QList<QHostAddress> allAddresses ()"
   "static QList<QNetworkInterface> allInterfaces ()"
   "static QNetworkInterface interfaceFromIndex ( int )"
   "static QNetworkInterface interfaceFromName ( const QString & )")
  (("QNetworkProxy" . NIL)
   "new QNetworkProxy ()"
   "new QNetworkProxy ( ProxyType , const QString & = QString() , quint16 = 0 , const QString & = QString() , const QString & = QString() )"
   "new QNetworkProxy ( const QNetworkProxy & )"
   "Capabilities capabilities () const"
   "bool hasRawHeader ( const QByteArray & ) const"
   "QVariant header ( QNetworkRequest::KnownHeaders ) const"
   "QString hostName () const"
   "bool isCachingProxy () const"
   "bool isTransparentProxy () const"
   "QString password () const"
   "quint16 port () const"
   "QByteArray rawHeader ( const QByteArray & ) const"
   "QList<QByteArray> rawHeaderList () const"
   "void setCapabilities ( Capabilities )"
   "void setHeader ( QNetworkRequest::KnownHeaders , const QVariant & )"
   "void setHostName ( const QString & )"
   "void setPassword ( const QString & )"
   "void setPort ( quint16 )"
   "void setRawHeader ( const QByteArray & , const QByteArray & )"
   "void setType ( QNetworkProxy::ProxyType )"
   "void setUser ( const QString & )"
   "void swap ( QNetworkProxy & )"
   "QNetworkProxy::ProxyType type () const"
   "QString user () const"
   "static QNetworkProxy applicationProxy ()"
   "static void setApplicationProxy ( const QNetworkProxy & )")
  (("QNetworkProxyFactory" . NIL)
   "new QNetworkProxyFactory ()"
   "virtual QList<QNetworkProxy> queryProxy ( const QNetworkProxyQuery & = QNetworkProxyQuery() ) = 0"
   "static QList<QNetworkProxy> proxyForQuery ( const QNetworkProxyQuery & )"
   "static void setApplicationProxyFactory ( QNetworkProxyFactory * )"
   "static void setUseSystemConfiguration ( bool )"
   "static QList<QNetworkProxy> systemProxyForQuery ( const QNetworkProxyQuery & = QNetworkProxyQuery() )")
  (("QNetworkProxyQuery" . NIL)
   "new QNetworkProxyQuery ()"
   "new QNetworkProxyQuery ( const QUrl & , QueryType = UrlRequest )"
   "new QNetworkProxyQuery ( const QString & , int , const QString & = QString() , QueryType = TcpSocket )"
   "new QNetworkProxyQuery ( quint16 , const QString & = QString() , QueryType = TcpServer )"
   "new QNetworkProxyQuery ( const QNetworkProxyQuery & )"
   "new QNetworkProxyQuery ( const QNetworkConfiguration & , const QUrl & , QueryType = UrlRequest )"
   "new QNetworkProxyQuery ( const QNetworkConfiguration & , const QString & , int , const QString & = QString() , QueryType = TcpSocket )"
   "new QNetworkProxyQuery ( const QNetworkConfiguration & , quint16 , const QString & = QString() , QueryType = TcpServer )"
   "int localPort () const"
   "QNetworkConfiguration networkConfiguration () const"
   "QString peerHostName () const"
   "int peerPort () const"
   "QString protocolTag () const"
   "QueryType queryType () const"
   "void setLocalPort ( int )"
   "void setNetworkConfiguration ( const QNetworkConfiguration & )"
   "void setPeerHostName ( const QString & )"
   "void setPeerPort ( int )"
   "void setProtocolTag ( const QString & )"
   "void setQueryType ( QueryType )"
   "void setUrl ( const QUrl & )"
   "void swap ( QNetworkProxyQuery & )"
   "QUrl url () const")
  (("QNetworkRequest" . NIL)
   "new QNetworkRequest ( const QUrl & = QUrl() )"
   "new QNetworkRequest ( const QNetworkRequest & )"
   "QVariant attribute ( Attribute , const QVariant & = QVariant() ) const"
   "bool hasRawHeader ( const QByteArray & ) const"
   "QVariant header ( KnownHeaders ) const"
   "QObject * originatingObject () const"
   "Priority priority () const"
   "QByteArray rawHeader ( const QByteArray & ) const"
   "QList<QByteArray> rawHeaderList () const"
   "void setAttribute ( Attribute , const QVariant & )"
   "void setHeader ( KnownHeaders , const QVariant & )"
   "void setOriginatingObject ( QObject * )"
   "void setPriority ( Priority )"
   "void setRawHeader ( const QByteArray & , const QByteArray & )"
   "void setSslConfiguration ( const QSslConfiguration & )"
   "void setUrl ( const QUrl & )"
   "QSslConfiguration sslConfiguration () const"
   "void swap ( QNetworkRequest & )"
   "QUrl url () const")
  (("QOpenGLPaintDevice" . "QPaintDevice")
   "new QOpenGLPaintDevice ()"
   "new QOpenGLPaintDevice ( const QSize & )"
   "new QOpenGLPaintDevice ( int , int )"
   "QOpenGLContext * context () const"
   "qreal dotsPerMeterX () const"
   "qreal dotsPerMeterY () const"
   "virtual void ensureActiveTarget ()"
   "bool paintFlipped () const"
   "void setDevicePixelRatio ( qreal )"
   "void setDotsPerMeterX ( qreal )"
   "void setDotsPerMeterY ( qreal )"
   "void setPaintFlipped ( bool )"
   "void setSize ( const QSize & )"
   "QSize size () const")
  (("QOpenGLTexture" . NIL)
   "new QOpenGLTexture ( Target )"
   "new QOpenGLTexture ( const QImage & , MipMapGeneration = GenerateMipMaps )"
   "void allocateStorage ()"
   "void allocateStorage ( PixelFormat , PixelType )"
   "void bind ()"
   "void bind ( uint , TextureUnitReset = DontResetTextureUnit )"
   "QColor borderColor () const"
   "ComparisonFunction comparisonFunction () const"
   "ComparisonMode comparisonMode () const"
   "bool create ()"
   "QOpenGLTexture * createTextureView ( Target , TextureFormat , int , int , int , int ) const"
   "int depth () const"
   "DepthStencilMode depthStencilMode () const"
   "void destroy ()"
   "int faces () const"
   "TextureFormat format () const"
   "void generateMipMaps ()"
   "void generateMipMaps ( int , bool = true )"
   "int height () const"
   "bool isAutoMipMapGenerationEnabled () const"
   "bool isBound () const"
   "bool isBound ( uint )"
   "bool isCreated () const"
   "bool isFixedSamplePositions () const"
   "bool isStorageAllocated () const"
   "bool isTextureView () const"
   "int layers () const"
   "float levelofDetailBias () const"
   "Filter magnificationFilter () const"
   "float maximumAnisotropy () const"
   "float maximumLevelOfDetail () const"
   "int maximumMipLevels () const"
   "Filter minificationFilter () const"
   "float minimumLevelOfDetail () const"
   "int mipBaseLevel () const"
   "int mipLevels () const"
   "int mipMaxLevel () const"
   "void release ()"
   "void release ( uint , TextureUnitReset = DontResetTextureUnit )"
   "int samples () const"
   "void setAutoMipMapGenerationEnabled ( bool )"
   "void setBorderColor ( QColor )"
   "void setBorderColor ( float , float , float , float )"
   "void setBorderColor ( int , int , int , int )"
   "void setBorderColor ( uint , uint , uint , uint )"
   "void setComparisonFunction ( ComparisonFunction )"
   "void setComparisonMode ( ComparisonMode )"
   "void setData ( const QImage & , MipMapGeneration = GenerateMipMaps )"
   "void setDepthStencilMode ( DepthStencilMode )"
   "void setFixedSamplePositions ( bool )"
   "void setFormat ( TextureFormat )"
   "void setLayers ( int )"
   "void setLevelOfDetailRange ( float , float )"
   "void setLevelofDetailBias ( float )"
   "void setMagnificationFilter ( Filter )"
   "void setMaximumAnisotropy ( float )"
   "void setMaximumLevelOfDetail ( float )"
   "void setMinMagFilters ( Filter , Filter )"
   "void setMinificationFilter ( Filter )"
   "void setMinimumLevelOfDetail ( float )"
   "void setMipBaseLevel ( int )"
   "void setMipLevelRange ( int , int )"
   "void setMipLevels ( int )"
   "void setMipMaxLevel ( int )"
   "void setSamples ( int )"
   "void setSize ( int , int = 1 , int = 1 )"
   "void setSwizzleMask ( SwizzleComponent , SwizzleValue )"
   "void setSwizzleMask ( SwizzleValue , SwizzleValue , SwizzleValue , SwizzleValue )"
   "void setWrapMode ( WrapMode )"
   "void setWrapMode ( CoordinateDirection , WrapMode )"
   "SwizzleValue swizzleMask ( SwizzleComponent ) const"
   "Target target () const"
   "GLuint textureId () const"
   "int width () const"
   "WrapMode wrapMode ( CoordinateDirection ) const"
   "static GLuint boundTextureId ( BindingTarget )"
   "static GLuint boundTextureId ( uint , BindingTarget )"
   "static bool hasFeature ( Feature )")
  (("QPagedPaintDevice" . "QPaintDevice")
   "virtual bool newPage () = 0"
   "QPageLayout pageLayout () const"
   "PageSize pageSize () const"
   "QSizeF pageSizeMM () const"
   "bool setPageLayout ( const QPageLayout & )"
   "bool setPageMargins ( const QMarginsF & )"
   "bool setPageMargins ( const QMarginsF & , QPageLayout::Unit )"
   "bool setPageOrientation ( QPageLayout::Orientation )"
   "bool setPageSize ( const QPageSize & )"
   "virtual void setPageSize ( PageSize )"
   "virtual void setPageSizeMM ( const QSizeF & )")
  (("QPaintDevice" . NIL)
   "int colorCount () const"
   "int depth () const"
   "int devicePixelRatio () const"
   "int height () const"
   "int heightMM () const"
   "int logicalDpiX () const"
   "int logicalDpiY () const"
   "bool paintingActive () const"
   "int physicalDpiX () const"
   "int physicalDpiY () const"
   "int width () const"
   "int widthMM () const")
  (("QPaintEvent" . "QEvent")
   "new QPaintEvent ( const QRegion & )"
   "new QPaintEvent ( const QRect & )"
   "const QRect & rect () const"
   "const QRegion & region () const")
  (("QPainter" . NIL)
   "new QPainter ( QImage * )"
   "bool begin ( QImage * )"
   "new QPainter ( QPicture * )"
   "bool begin ( QPicture * )"
   "new QPainter ( QPixmap * )"
   "bool begin ( QPixmap * )"
   "new QPainter ( QPrinter * )"
   "bool begin ( QPrinter * )"
   "new QPainter ( QWidget * )"
   "bool begin ( QWidget * )"
   "new QPainter ()"
   "const QBrush & background () const"
   "Qt::BGMode backgroundMode () const"
   "void beginNativePainting ()"
   "QRectF boundingRect ( const QRectF & , int , const QString & )"
   "QRect boundingRect ( const QRect & , int , const QString & )"
   "QRect boundingRect ( int , int , int , int , int , const QString & )"
   "QRectF boundingRect ( const QRectF & , const QString & , const QTextOption & = QTextOption() )"
   "const QBrush & brush () const"
   "QPoint brushOrigin () const"
   "QRectF clipBoundingRect () const"
   "QPainterPath clipPath () const"
   "QRegion clipRegion () const"
   "QTransform combinedTransform () const"
   "CompositionMode compositionMode () const"
   "const QTransform & deviceTransform () const"
   "void drawArc ( const QRectF & , int , int )"
   "void drawArc ( const QRect & , int , int )"
   "void drawArc ( int , int , int , int , int , int )"
   "void drawChord ( const QRectF & , int , int )"
   "void drawChord ( const QRect & , int , int )"
   "void drawChord ( int , int , int , int , int , int )"
   "void drawConvexPolygon ( const QPointF * , int )"
   "void drawConvexPolygon ( const QPolygonF & )"
   "void drawConvexPolygon ( const QPolygon & )"
   "void drawEllipse ( const QRectF & )"
   "void drawEllipse ( const QRect & )"
   "void drawEllipse ( int , int , int , int )"
   "void drawEllipse ( const QPointF & , qreal , qreal )"
   "void drawEllipse ( const QPoint & , int , int )"
   "void drawGlyphRun ( const QPointF & , const QGlyphRun & )"
   "void drawImage ( const QRectF & , const QImage & , const QRectF & , Qt::ImageConversionFlags = Qt::AutoColor )"
   "void drawImage ( const QRect & , const QImage & , const QRect & , Qt::ImageConversionFlags = Qt::AutoColor )"
   "void drawImage ( const QPointF & , const QImage & )"
   "void drawImage ( const QPoint & , const QImage & )"
   "void drawImage ( const QPointF & , const QImage & , const QRectF & , Qt::ImageConversionFlags = Qt::AutoColor )"
   "void drawImage ( const QPoint & , const QImage & , const QRect & , Qt::ImageConversionFlags = Qt::AutoColor )"
   "void drawImage ( const QRectF & , const QImage & )"
   "void drawImage ( const QRect & , const QImage & )"
   "void drawImage ( int , int , const QImage & , int = 0 , int = 0 , int = -1 , int = -1 , Qt::ImageConversionFlags = Qt::AutoColor )"
   "void drawLine ( const QLineF & )"
   "void drawLine ( const QLine & )"
   "void drawLine ( const QPoint & , const QPoint & )"
   "void drawLine ( const QPointF & , const QPointF & )"
   "void drawLine ( int , int , int , int )"
   "void drawLines ( const QLineF * , int )"
   "void drawLines ( const QLine * , int )"
   "void drawLines ( const QPointF * , int )"
   "void drawLines ( const QVector<QPointF> & )"
   "void drawLines ( const QVector<QPoint> & )"
   "void drawLines ( const QVector<QLineF> & )"
   "void drawLines ( const QVector<QLine> & )"
   "void drawPath ( const QPainterPath & )"
   "void drawPicture ( const QPointF & , const QPicture & )"
   "void drawPicture ( const QPoint & , const QPicture & )"
   "void drawPicture ( int , int , const QPicture & )"
   "void drawPie ( const QRectF & , int , int )"
   "void drawPie ( const QRect & , int , int )"
   "void drawPie ( int , int , int , int , int , int )"
   "void drawPixmap ( const QRectF & , const QPixmap & , const QRectF & )"
   "void drawPixmap ( const QRect & , const QPixmap & , const QRect & )"
   "void drawPixmap ( const QPointF & , const QPixmap & , const QRectF & )"
   "void drawPixmap ( const QPoint & , const QPixmap & , const QRect & )"
   "void drawPixmap ( const QPointF & , const QPixmap & )"
   "void drawPixmap ( const QPoint & , const QPixmap & )"
   "void drawPixmap ( int , int , const QPixmap & )"
   "void drawPixmap ( const QRect & , const QPixmap & )"
   "void drawPixmap ( int , int , int , int , const QPixmap & )"
   "void drawPixmap ( int , int , int , int , const QPixmap & , int , int , int , int )"
   "void drawPixmap ( int , int , const QPixmap & , int , int , int , int )"
   "void drawPixmapFragments ( const PixmapFragment * , int , const QPixmap & , PixmapFragmentHints = 0 )"
   "void drawPoint ( const QPointF & )"
   "void drawPoint ( const QPoint & )"
   "void drawPoint ( int , int )"
   "void drawPoints ( const QPointF * , int )"
   "void drawPoints ( const QPolygonF & )"
   "void drawPoints ( const QPolygon & )"
   "void drawPolygon ( const QPointF * , int , Qt::FillRule = Qt::OddEvenFill )"
   "void drawPolygon ( const QPolygonF & , Qt::FillRule = Qt::OddEvenFill )"
   "void drawPolygon ( const QPolygon & , Qt::FillRule = Qt::OddEvenFill )"
   "void drawPolyline ( const QPointF * , int )"
   "void drawPolyline ( const QPolygonF & )"
   "void drawPolyline ( const QPolygon & )"
   "void drawRect ( const QRectF & )"
   "void drawRect ( const QRect & )"
   "void drawRect ( int , int , int , int )"
   "void drawRects ( const QRectF * , int )"
   "void drawRects ( const QRect * , int )"
   "void drawRects ( const QVector<QRectF> & )"
   "void drawRects ( const QVector<QRect> & )"
   "void drawRoundedRect ( const QRectF & , qreal , qreal , Qt::SizeMode = Qt::AbsoluteSize )"
   "void drawRoundedRect ( const QRect & , qreal , qreal , Qt::SizeMode = Qt::AbsoluteSize )"
   "void drawRoundedRect ( int , int , int , int , qreal , qreal , Qt::SizeMode = Qt::AbsoluteSize )"
   "void drawStaticText ( const QPointF & , const QStaticText & )"
   "void drawStaticText ( const QPoint & , const QStaticText & )"
   "void drawStaticText ( int , int , const QStaticText & )"
   "void drawText ( const QPointF & , const QString & )"
   "void drawText ( const QPoint & , const QString & )"
   "void drawText ( const QRectF & , int , const QString & , QRectF * = 0 )"
   "void drawText ( const QRect & , int , const QString & , QRect * = 0 )"
   "void drawText ( int , int , const QString & )"
   "void drawText ( int , int , int , int , int , const QString & , QRect * = 0 )"
   "void drawText ( const QRectF & , const QString & , const QTextOption & = QTextOption() )"
   "void drawTiledPixmap ( const QRectF & , const QPixmap & , const QPointF & = QPointF() )"
   "void drawTiledPixmap ( const QRect & , const QPixmap & , const QPoint & = QPoint() )"
   "void drawTiledPixmap ( int , int , int , int , const QPixmap & , int = 0 , int = 0 )"
   "bool end ()"
   "void endNativePainting ()"
   "void eraseRect ( const QRectF & )"
   "void eraseRect ( const QRect & )"
   "void eraseRect ( int , int , int , int )"
   "void fillPath ( const QPainterPath & , const QBrush & )"
   "void fillRect ( const QRectF & , const QBrush & )"
   "void fillRect ( int , int , int , int , Qt::BrushStyle )"
   "void fillRect ( const QRect & , Qt::BrushStyle )"
   "void fillRect ( const QRectF & , Qt::BrushStyle )"
   "void fillRect ( const QRect & , const QBrush & )"
   "void fillRect ( const QRect & , const QColor & )"
   "void fillRect ( const QRectF & , const QColor & )"
   "void fillRect ( int , int , int , int , const QBrush & )"
   "void fillRect ( int , int , int , int , const QColor & )"
   "void fillRect ( int , int , int , int , Qt::GlobalColor )"
   "void fillRect ( const QRect & , Qt::GlobalColor )"
   "void fillRect ( const QRectF & , Qt::GlobalColor )"
   "const QFont & font () const"
   "QFontInfo fontInfo () const"
   "QFontMetrics fontMetrics () const"
   "bool hasClipping () const"
   "bool isActive () const"
   "Qt::LayoutDirection layoutDirection () const"
   "qreal opacity () const"
   "const QPen & pen () const"
   "RenderHints renderHints () const"
   "void resetTransform ()"
   "void restore ()"
   "void rotate ( qreal )"
   "void save ()"
   "void scale ( qreal , qreal )"
   "void setBackground ( const QBrush & )"
   "void setBackgroundMode ( Qt::BGMode )"
   "void setBrush ( const QBrush & )"
   "void setBrush ( Qt::BrushStyle )"
   "void setBrushOrigin ( const QPointF & )"
   "void setBrushOrigin ( const QPoint & )"
   "void setBrushOrigin ( int , int )"
   "void setClipPath ( const QPainterPath & , Qt::ClipOperation = Qt::ReplaceClip )"
   "void setClipRect ( const QRectF & , Qt::ClipOperation = Qt::ReplaceClip )"
   "void setClipRect ( int , int , int , int , Qt::ClipOperation = Qt::ReplaceClip )"
   "void setClipRect ( const QRect & , Qt::ClipOperation = Qt::ReplaceClip )"
   "void setClipRegion ( const QRegion & , Qt::ClipOperation = Qt::ReplaceClip )"
   "void setClipping ( bool )"
   "void setCompositionMode ( CompositionMode )"
   "void setFont ( const QFont & )"
   "void setLayoutDirection ( Qt::LayoutDirection )"
   "void setOpacity ( qreal )"
   "void setPen ( const QPen & )"
   "void setPen ( const QColor & )"
   "void setPen ( Qt::PenStyle )"
   "void setRenderHint ( RenderHint , bool = true )"
   "void setRenderHints ( RenderHints , bool = true )"
   "void setTransform ( const QTransform & , bool = false )"
   "void setViewTransformEnabled ( bool )"
   "void setViewport ( const QRect & )"
   "void setViewport ( int , int , int , int )"
   "void setWindow ( const QRect & )"
   "void setWindow ( int , int , int , int )"
   "void setWorldMatrixEnabled ( bool )"
   "void setWorldTransform ( const QTransform & , bool = false )"
   "void shear ( qreal , qreal )"
   "void strokePath ( const QPainterPath & , const QPen & )"
   "bool testRenderHint ( RenderHint ) const"
   "const QTransform & transform () const"
   "void translate ( const QPointF & )"
   "void translate ( const QPoint & )"
   "void translate ( qreal , qreal )"
   "bool viewTransformEnabled () const"
   "QRect viewport () const"
   "QRect window () const"
   "bool worldMatrixEnabled () const"
   "const QTransform & worldTransform () const")
  (("QPainterPath" . NIL)
   "new QPainterPath ()"
   "new QPainterPath ( const QPointF & )"
   "new QPainterPath ( const QPainterPath & )"
   "void addEllipse ( const QRectF & )"
   "void addEllipse ( qreal , qreal , qreal , qreal )"
   "void addEllipse ( const QPointF & , qreal , qreal )"
   "void addPath ( const QPainterPath & )"
   "void addPolygon ( const QPolygonF & )"
   "void addRect ( const QRectF & )"
   "void addRect ( qreal , qreal , qreal , qreal )"
   "void addRegion ( const QRegion & )"
   "void addRoundedRect ( const QRectF & , qreal , qreal , Qt::SizeMode = Qt::AbsoluteSize )"
   "void addRoundedRect ( qreal , qreal , qreal , qreal , qreal , qreal , Qt::SizeMode = Qt::AbsoluteSize )"
   "void addText ( const QPointF & , const QFont & , const QString & )"
   "void addText ( qreal , qreal , const QFont & , const QString & )"
   "qreal angleAtPercent ( qreal ) const"
   "void arcMoveTo ( const QRectF & , qreal )"
   "void arcMoveTo ( qreal , qreal , qreal , qreal , qreal )"
   "void arcTo ( const QRectF & , qreal , qreal )"
   "void arcTo ( qreal , qreal , qreal , qreal , qreal , qreal )"
   "QRectF boundingRect () const"
   "void closeSubpath ()"
   "void connectPath ( const QPainterPath & )"
   "bool contains ( const QPointF & ) const"
   "bool contains ( const QRectF & ) const"
   "bool contains ( const QPainterPath & ) const"
   "QRectF controlPointRect () const"
   "void cubicTo ( const QPointF & , const QPointF & , const QPointF & )"
   "void cubicTo ( qreal , qreal , qreal , qreal , qreal , qreal )"
   "QPointF currentPosition () const"
   "QPainterPath::Element elementAt ( int ) const"
   "int elementCount () const"
   "Qt::FillRule fillRule () const"
   "QPainterPath intersected ( const QPainterPath & ) const"
   "bool intersects ( const QRectF & ) const"
   "bool intersects ( const QPainterPath & ) const"
   "bool isEmpty () const"
   "qreal length () const"
   "void lineTo ( const QPointF & )"
   "void lineTo ( qreal , qreal )"
   "void moveTo ( const QPointF & )"
   "void moveTo ( qreal , qreal )"
   "qreal percentAtLength ( qreal ) const"
   "QPointF pointAtPercent ( qreal ) const"
   "void quadTo ( const QPointF & , const QPointF & )"
   "void quadTo ( qreal , qreal , qreal , qreal )"
   "void setElementPositionAt ( int , qreal , qreal )"
   "void setFillRule ( Qt::FillRule )"
   "QPainterPath simplified () const"
   "qreal slopeAtPercent ( qreal ) const"
   "QPainterPath subtracted ( const QPainterPath & ) const"
   "void swap ( QPainterPath & )"
   "QPolygonF toFillPolygon ( const QTransform & ) const"
   "QPolygonF toFillPolygon ( const QMatrix & = QMatrix() ) const"
   "QList<QPolygonF> toFillPolygons ( const QTransform & ) const"
   "QList<QPolygonF> toFillPolygons ( const QMatrix & = QMatrix() ) const"
   "QPainterPath toReversed () const"
   "QList<QPolygonF> toSubpathPolygons ( const QTransform & ) const"
   "QList<QPolygonF> toSubpathPolygons ( const QMatrix & = QMatrix() ) const"
   "void translate ( qreal , qreal )"
   "void translate ( const QPointF & )"
   "QPainterPath translated ( qreal , qreal ) const"
   "QPainterPath translated ( const QPointF & ) const"
   "QPainterPath united ( const QPainterPath & ) const")
  (("QPainterPathStroker" . NIL)
   "new QPainterPathStroker ()"
   "new QPainterPathStroker ( const QPen & )"
   "Qt::PenCapStyle capStyle () const"
   "QPainterPath createStroke ( const QPainterPath & ) const"
   "qreal curveThreshold () const"
   "qreal dashOffset () const"
   "QVector<qreal> dashPattern () const"
   "Qt::PenJoinStyle joinStyle () const"
   "qreal miterLimit () const"
   "void setCapStyle ( Qt::PenCapStyle )"
   "void setCurveThreshold ( qreal )"
   "void setDashOffset ( qreal )"
   "void setDashPattern ( Qt::PenStyle )"
   "void setDashPattern ( const QVector<qreal> & )"
   "void setJoinStyle ( Qt::PenJoinStyle )"
   "void setMiterLimit ( qreal )"
   "void setWidth ( qreal )"
   "qreal width () const")
  (("QPalette" . NIL)
   "new QPalette ()"
   "new QPalette ( const QColor & )"
   "new QPalette ( Qt::GlobalColor )"
   "new QPalette ( const QColor & , const QColor & )"
   "new QPalette ( const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & )"
   "new QPalette ( const QPalette & )"
   "const QBrush & alternateBase () const"
   "const QBrush & base () const"
   "const QBrush & brightText () const"
   "const QBrush & brush ( ColorGroup , ColorRole ) const"
   "const QBrush & brush ( ColorRole ) const"
   "const QBrush & button () const"
   "const QBrush & buttonText () const"
   "qint64 cacheKey () const"
   "const QColor & color ( ColorGroup , ColorRole ) const"
   "const QColor & color ( ColorRole ) const"
   "ColorGroup currentColorGroup () const"
   "const QBrush & dark () const"
   "const QBrush & highlight () const"
   "const QBrush & highlightedText () const"
   "bool isBrushSet ( ColorGroup , ColorRole ) const"
   "bool isCopyOf ( const QPalette & ) const"
   "bool isEqual ( ColorGroup , ColorGroup ) const"
   "const QBrush & light () const"
   "const QBrush & link () const"
   "const QBrush & linkVisited () const"
   "const QBrush & mid () const"
   "const QBrush & midlight () const"
   "QPalette resolve ( const QPalette & ) const"
   "void setBrush ( ColorRole , const QBrush & )"
   "void setBrush ( ColorGroup , ColorRole , const QBrush & )"
   "void setColor ( ColorGroup , ColorRole , const QColor & )"
   "void setColor ( ColorRole , const QColor & )"
   "void setColorGroup ( ColorGroup , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & , const QBrush & )"
   "void setCurrentColorGroup ( ColorGroup )"
   "const QBrush & shadow () const"
   "void swap ( QPalette & )"
   "const QBrush & text () const"
   "const QBrush & toolTipBase () const"
   "const QBrush & toolTipText () const"
   "const QBrush & window () const"
   "const QBrush & windowText () const")
  (("QPen" . NIL)
   "new QPen ()"
   "new QPen ( Qt::PenStyle )"
   "new QPen ( const QColor & )"
   "new QPen ( const QBrush & , qreal , Qt::PenStyle = Qt::SolidLine , Qt::PenCapStyle = Qt::SquareCap , Qt::PenJoinStyle = Qt::BevelJoin )"
   "new QPen ( const QPen & )"
   "QBrush brush () const"
   "Qt::PenCapStyle capStyle () const"
   "QColor color () const"
   "qreal dashOffset () const"
   "QVector<qreal> dashPattern () const"
   "bool isCosmetic () const"
   "bool isSolid () const"
   "Qt::PenJoinStyle joinStyle () const"
   "qreal miterLimit () const"
   "void setBrush ( const QBrush & )"
   "void setCapStyle ( Qt::PenCapStyle )"
   "void setColor ( const QColor & )"
   "void setCosmetic ( bool )"
   "void setDashOffset ( qreal )"
   "void setDashPattern ( const QVector<qreal> & )"
   "void setJoinStyle ( Qt::PenJoinStyle )"
   "void setMiterLimit ( qreal )"
   "void setStyle ( Qt::PenStyle )"
   "void setWidth ( int )"
   "void setWidthF ( qreal )"
   "Qt::PenStyle style () const"
   "void swap ( QPen & )"
   "int width () const"
   "qreal widthF () const")
  (("QPersistentModelIndex" . NIL)
   "new QPersistentModelIndex ( const QModelIndex & )"
   "new QPersistentModelIndex ( const QPersistentModelIndex & )"
   "QModelIndex child ( int , int ) const"
   "int column () const"
   "QVariant data ( int = Qt::DisplayRole ) const"
   "Qt::ItemFlags flags () const"
   "bool isValid () const"
   "const QAbstractItemModel * model () const"
   "QModelIndex parent () const"
   "int row () const"
   "QModelIndex sibling ( int , int ) const"
   "void swap ( QPersistentModelIndex & )")
  (("QPicture" . "QPaintDevice")
   "new QPicture ( int = -1 )"
   "new QPicture ( const QPicture & )"
   "QRect boundingRect () const"
   "const char * data () const"
   "bool isNull () const"
   "bool load ( const QString & , const char * = 0 )"
   "bool play ( QPainter * )"
   "bool save ( const QString & , const char * = 0 )"
   "void setBoundingRect ( const QRect & )"
   "virtual void setData ( const char * , uint )"
   "uint size () const"
   "void swap ( QPicture & )")
  (("QPixmap" . "QPaintDevice")
   "new QPixmap ()"
   "new QPixmap ( int , int )"
   "new QPixmap ( const QString & , const char * = 0 , Qt::ImageConversionFlags = Qt::AutoColor )"
   "new QPixmap ( const QPixmap & )"
   "new QPixmap ( const QSize & )"
   "qint64 cacheKey () const"
   "bool convertFromImage ( const QImage & , Qt::ImageConversionFlags = Qt::AutoColor )"
   "QPixmap copy ( const QRect & = QRect() ) const"
   "QPixmap copy ( int , int , int , int ) const"
   "QBitmap createHeuristicMask ( bool = true ) const"
   "QBitmap createMaskFromColor ( const QColor & , Qt::MaskMode = Qt::MaskInColor ) const"
   "int depth () const"
   "void detach ()"
   "qreal devicePixelRatio () const"
   "void fill ( const QColor & = Qt::white )"
   "bool hasAlpha () const"
   "bool hasAlphaChannel () const"
   "int height () const"
   "bool isNull () const"
   "bool isQBitmap () const"
   "bool load ( const QString & , const char * = 0 , Qt::ImageConversionFlags = Qt::AutoColor )"
   "bool loadFromData ( const QByteArray & , const char * = 0 , Qt::ImageConversionFlags = Qt::AutoColor )"
   "QBitmap mask () const"
   "QRect rect () const"
   "bool save ( const QString & , const char * = 0 , int = -1 ) const"
   "QPixmap scaled ( const QSize & , Qt::AspectRatioMode = Qt::IgnoreAspectRatio , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QPixmap scaled ( int , int , Qt::AspectRatioMode = Qt::IgnoreAspectRatio , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QPixmap scaledToHeight ( int , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QPixmap scaledToWidth ( int , Qt::TransformationMode = Qt::FastTransformation ) const"
   "void scroll ( int , int , int , int , int , int , QRegion * = 0 )"
   "void scroll ( int , int , const QRect & , QRegion * = 0 )"
   "void setDevicePixelRatio ( qreal )"
   "void setMask ( const QBitmap & )"
   "QSize size () const"
   "void swap ( QPixmap & )"
   "QImage toImage () const"
   "QPixmap transformed ( const QTransform & , Qt::TransformationMode = Qt::FastTransformation ) const"
   "QPixmap transformed ( const QMatrix & , Qt::TransformationMode = Qt::FastTransformation ) const"
   "int width () const"
   "static int defaultDepth ()"
   "static QPixmap fromImage ( const QImage & , Qt::ImageConversionFlags = Qt::AutoColor )"
   "static QPixmap fromImageReader ( QImageReader * , Qt::ImageConversionFlags = Qt::AutoColor )"
   "static QTransform trueMatrix ( const QTransform & , int , int )"
   "static QMatrix trueMatrix ( const QMatrix & , int , int )")
  (("QPixmapCache" . NIL)
   "static int cacheLimit ()"
   "static void clear ()"
   "static bool find ( const QString & , QPixmap * )"
   "static bool find ( const Key & , QPixmap * )"
   "static bool insert ( const QString & , const QPixmap & )"
   "static Key insert ( const QPixmap & )"
   "static void remove ( const QString & )"
   "static void remove ( const Key & )"
   "static bool replace ( const Key & , const QPixmap & )"
   "static void setCacheLimit ( int )")
  (("QPrinter" . "QPagedPaintDevice")
   "new QPrinter ( PrinterMode = ScreenResolution )"
   "bool abort ()"
   "bool collateCopies () const"
   "ColorMode colorMode () const"
   "int copyCount () const"
   "QString creator () const"
   "QString docName () const"
   "DuplexMode duplex () const"
   "bool fontEmbeddingEnabled () const"
   "int fromPage () const"
   "bool fullPage () const"
   "bool isValid () const"
   "QString outputFileName () const"
   "OutputFormat outputFormat () const"
   "QPageLayout pageLayout () const"
   "PageOrder pageOrder () const"
   "QRectF pageRect ( Unit ) const"
   "QRectF paperRect ( Unit ) const"
   "PaperSource paperSource () const"
   "QString printProgram () const"
   "PrintRange printRange () const"
   "QString printerName () const"
   "PrinterState printerState () const"
   "int resolution () const"
   "void setCollateCopies ( bool )"
   "void setColorMode ( ColorMode )"
   "void setCopyCount ( int )"
   "void setCreator ( const QString & )"
   "void setDocName ( const QString & )"
   "void setDuplex ( DuplexMode )"
   "void setFontEmbeddingEnabled ( bool )"
   "void setFromTo ( int , int )"
   "void setFullPage ( bool )"
   "void setOutputFileName ( const QString & )"
   "void setOutputFormat ( OutputFormat )"
   "bool setPageLayout ( const QPageLayout & )"
   "bool setPageMargins ( const QMarginsF & )"
   "bool setPageMargins ( const QMarginsF & , QPageLayout::Unit )"
   "void setPageOrder ( PageOrder )"
   "bool setPageOrientation ( QPageLayout::Orientation )"
   "bool setPageSize ( const QPageSize & )"
   "void setPaperSource ( PaperSource )"
   "void setPrintProgram ( const QString & )"
   "void setPrintRange ( PrintRange )"
   "void setPrinterName ( const QString & )"
   "void setResolution ( int )"
   "QList<int> supportedResolutions () const"
   "bool supportsMultipleCopies () const"
   "int toPage () const"
   "virtual bool newPage ()")
  (("QPrinterInfo" . NIL)
   "QPrinter::DuplexMode defaultDuplexMode () const"
   "QPageSize defaultPageSize () const"
   "QString description () const"
   "bool isDefault () const"
   "bool isNull () const"
   "bool isRemote () const"
   "QString location () const"
   "QString makeAndModel () const"
   "QPageSize maximumPhysicalPageSize () const"
   "QPageSize minimumPhysicalPageSize () const"
   "QString printerName () const"
   "QPrinter::PrinterState state () const"
   "QList<QPrinter::DuplexMode> supportedDuplexModes () const"
   "QList<QPageSize> supportedPageSizes () const"
   "QList<int> supportedResolutions () const"
   "bool supportsCustomPageSizes () const"
   "static QStringList availablePrinterNames ()"
   "static QString defaultPrinterName ()")
  (("QProcessEnvironment" . NIL)
   "new QProcessEnvironment ()"
   "new QProcessEnvironment ( const QProcessEnvironment & )"
   "void clear ()"
   "bool contains ( const QString & ) const"
   "void insert ( const QString & , const QString & )"
   "void insert ( const QProcessEnvironment & )"
   "bool isEmpty () const"
   "QStringList keys () const"
   "void remove ( const QString & )"
   "void swap ( QProcessEnvironment & )"
   "QStringList toStringList () const"
   "QString value ( const QString & , const QString & = QString() ) const"
   "static QProcessEnvironment systemEnvironment ()")
  (("QQuaternion" . NIL)
   "new QQuaternion ()"
   "new QQuaternion ( float , float , float , float )"
   "new QQuaternion ( float , const QVector3D & )"
   "new QQuaternion ( const QVector4D & )"
   "QQuaternion conjugated () const"
   "QQuaternion inverted () const"
   "bool isIdentity () const"
   "bool isNull () const"
   "float length () const"
   "float lengthSquared () const"
   "void normalize ()"
   "QQuaternion normalized () const"
   "QVector3D rotatedVector ( const QVector3D & ) const"
   "float scalar () const"
   "void setScalar ( float )"
   "void setVector ( const QVector3D & )"
   "void setVector ( float , float , float )"
   "void setX ( float )"
   "void setY ( float )"
   "void setZ ( float )"
   "QVector3D toEulerAngles () const"
   "QVector4D toVector4D () const"
   "QVector3D vector () const"
   "float x () const"
   "float y () const"
   "float z () const"
   "static float dotProduct ( const QQuaternion & , const QQuaternion & )"
   "static QQuaternion fromAxes ( const QVector3D & , const QVector3D & , const QVector3D & )"
   "static QQuaternion fromAxisAndAngle ( const QVector3D & , float )"
   "static QQuaternion fromAxisAndAngle ( float , float , float , float )"
   "static QQuaternion fromDirection ( const QVector3D & , const QVector3D & )"
   "static QQuaternion fromEulerAngles ( float , float , float )"
   "static QQuaternion fromEulerAngles ( const QVector3D & )"
   "static QQuaternion nlerp ( const QQuaternion & , const QQuaternion & , float )"
   "static QQuaternion rotationTo ( const QVector3D & , const QVector3D & )"
   "static QQuaternion slerp ( const QQuaternion & , const QQuaternion & , float )")
  (("QRadialGradient" . "QGradient")
   "new QRadialGradient ()"
   "new QRadialGradient ( const QPointF & , qreal , const QPointF & )"
   "new QRadialGradient ( qreal , qreal , qreal , qreal , qreal )"
   "new QRadialGradient ( const QPointF & , qreal )"
   "new QRadialGradient ( qreal , qreal , qreal )"
   "new QRadialGradient ( const QPointF & , qreal , const QPointF & , qreal )"
   "new QRadialGradient ( qreal , qreal , qreal , qreal , qreal , qreal )"
   "QPointF center () const"
   "qreal centerRadius () const"
   "QPointF focalPoint () const"
   "qreal focalRadius () const"
   "qreal radius () const"
   "void setCenter ( const QPointF & )"
   "void setCenter ( qreal , qreal )"
   "void setCenterRadius ( qreal )"
   "void setFocalPoint ( const QPointF & )"
   "void setFocalPoint ( qreal , qreal )"
   "void setFocalRadius ( qreal )"
   "void setRadius ( qreal )")
  (("QReadLocker" . NIL)
   "new QReadLocker ( QReadWriteLock * )"
   "QReadWriteLock * readWriteLock () const"
   "void relock ()"
   "void unlock ()")
  (("QReadWriteLock" . NIL)
   "new QReadWriteLock ( RecursionMode = NonRecursive )"
   "void lockForRead ()"
   "void lockForWrite ()"
   "bool tryLockForRead ()"
   "bool tryLockForRead ( int )"
   "bool tryLockForWrite ()"
   "bool tryLockForWrite ( int )"
   "void unlock ()")
  (("QRegExp" . NIL)
   "new QRegExp ()"
   "new QRegExp ( const QString & , Qt::CaseSensitivity = Qt::CaseSensitive , PatternSyntax = RegExp )"
   "new QRegExp ( const QRegExp & )"
   "QString cap ( int = 0 ) const"
   "int captureCount () const"
   "QStringList capturedTexts () const"
   "Qt::CaseSensitivity caseSensitivity () const"
   "QString errorString () const"
   "bool exactMatch ( const QString & ) const"
   "int indexIn ( const QString & , int = 0 , CaretMode = CaretAtZero ) const"
   "bool isEmpty () const"
   "bool isMinimal () const"
   "bool isValid () const"
   "int lastIndexIn ( const QString & , int = -1 , CaretMode = CaretAtZero ) const"
   "int matchedLength () const"
   "QString pattern () const"
   "PatternSyntax patternSyntax () const"
   "int pos ( int = 0 ) const"
   "void setCaseSensitivity ( Qt::CaseSensitivity )"
   "void setMinimal ( bool )"
   "void setPattern ( const QString & )"
   "void setPatternSyntax ( PatternSyntax )"
   "void swap ( QRegExp & )"
   "static QString escape ( const QString & )")
  (("QRegion" . NIL)
   "new QRegion ()"
   "new QRegion ( int , int , int , int , RegionType = Rectangle )"
   "new QRegion ( const QPolygon & , Qt::FillRule = Qt::OddEvenFill )"
   "new QRegion ( const QRegion & )"
   "new QRegion ( const QBitmap & )"
   "new QRegion ( const QRect & , RegionType = Rectangle )"
   "QRect boundingRect () const"
   "bool contains ( const QPoint & ) const"
   "bool contains ( const QRect & ) const"
   "QRegion intersected ( const QRegion & ) const"
   "QRegion intersected ( const QRect & ) const"
   "bool intersects ( const QRegion & ) const"
   "bool intersects ( const QRect & ) const"
   "bool isEmpty () const"
   "bool isNull () const"
   "int rectCount () const"
   "QVector<QRect> rects () const"
   "void setRects ( const QRect * , int )"
   "QRegion subtracted ( const QRegion & ) const"
   "void swap ( QRegion & )"
   "void translate ( int , int )"
   "void translate ( const QPoint & )"
   "QRegion translated ( int , int ) const"
   "QRegion translated ( const QPoint & ) const"
   "QRegion united ( const QRegion & ) const"
   "QRegion united ( const QRect & ) const"
   "QRegion xored ( const QRegion & ) const")
  (("QRegularExpression" . NIL)
   "new QRegularExpression ()"
   "new QRegularExpression ( const QString & , PatternOptions = NoPatternOption )"
   "new QRegularExpression ( const QRegularExpression & )"
   "int captureCount () const"
   "QString errorString () const"
   "QRegularExpressionMatchIterator globalMatch ( const QString & , int = 0 , MatchType = NormalMatch , MatchOptions = NoMatchOption ) const"
   "QRegularExpressionMatchIterator globalMatch ( const QStringRef & , int = 0 , MatchType = NormalMatch , MatchOptions = NoMatchOption ) const"
   "bool isValid () const"
   "QRegularExpressionMatch match ( const QString & , int = 0 , MatchType = NormalMatch , MatchOptions = NoMatchOption ) const"
   "QRegularExpressionMatch match ( const QStringRef & , int = 0 , MatchType = NormalMatch , MatchOptions = NoMatchOption ) const"
   "QStringList namedCaptureGroups () const"
   "void optimize () const"
   "QString pattern () const"
   "int patternErrorOffset () const"
   "PatternOptions patternOptions () const"
   "void setPattern ( const QString & )"
   "void setPatternOptions ( PatternOptions )"
   "void swap ( QRegularExpression & )"
   "static QString escape ( const QString & )")
  (("QResizeEvent" . "QEvent")
   "new QResizeEvent ( const QSize & , const QSize & )"
   "const QSize & oldSize () const"
   "const QSize & size () const")
  (("QRunnable" . NIL)
   "new QRunnable ()"
   "bool autoDelete () const"
   "virtual void run () = 0"
   "void setAutoDelete ( bool )")
  (("QSemaphore" . NIL)
   "new QSemaphore ( int = 0 )"
   "void acquire ( int = 1 )"
   "int available () const"
   "void release ( int = 1 )"
   "bool tryAcquire ( int = 1 )"
   "bool tryAcquire ( int , int )")
  (("QShortcutEvent" . "QEvent")
   "new QShortcutEvent ( const QKeySequence & , int , bool = false )"
   "bool isAmbiguous () const"
   "const QKeySequence & key () const"
   "int shortcutId () const")
  (("QShowEvent" . "QEvent")
   "new QShowEvent ()")
  (("QSizePolicy" . NIL)
   "new QSizePolicy ()"
   "new QSizePolicy ( Policy , Policy , ControlType = DefaultType )"
   "ControlType controlType () const"
   "Qt::Orientations expandingDirections () const"
   "bool hasHeightForWidth () const"
   "bool hasWidthForHeight () const"
   "Policy horizontalPolicy () const"
   "int horizontalStretch () const"
   "bool retainSizeWhenHidden () const"
   "void setControlType ( ControlType )"
   "void setHeightForWidth ( bool )"
   "void setHorizontalPolicy ( Policy )"
   "void setHorizontalStretch ( int )"
   "void setRetainSizeWhenHidden ( bool )"
   "void setVerticalPolicy ( Policy )"
   "void setVerticalStretch ( int )"
   "void setWidthForHeight ( bool )"
   "void transpose ()"
   "Policy verticalPolicy () const"
   "int verticalStretch () const")
  (("QSpacerItem" . "QLayoutItem")
   "new QSpacerItem ( int , int , QSizePolicy::Policy = QSizePolicy::Minimum , QSizePolicy::Policy = QSizePolicy::Minimum )"
   "void changeSize ( int , int , QSizePolicy::Policy = QSizePolicy::Minimum , QSizePolicy::Policy = QSizePolicy::Minimum )"
   "QSizePolicy sizePolicy () const"
   "virtual Qt::Orientations expandingDirections () const"
   "virtual QRect geometry () const"
   "virtual bool isEmpty () const"
   "virtual QSize maximumSize () const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect & )"
   "virtual QSize sizeHint () const"
   "virtual QSpacerItem * spacerItem ()")
  (("QSqlDatabase" . NIL)
   "new QSqlDatabase ()"
   "new QSqlDatabase ( const QSqlDatabase & )"
   "void close ()"
   "bool commit ()"
   "QString connectOptions () const"
   "QString connectionName () const"
   "QString databaseName () const"
   "QSqlDriver * driver () const"
   "QString driverName () const"
   "QSqlQuery exec ( const QString & = QString() ) const"
   "QString hostName () const"
   "bool isOpen () const"
   "bool isOpenError () const"
   "bool isValid () const"
   "QSqlError lastError () const"
   "QSql::NumericalPrecisionPolicy numericalPrecisionPolicy () const"
   "bool open ()"
   "bool open ( const QString & , const QString & )"
   "QString password () const"
   "int port () const"
   "QSqlIndex primaryIndex ( const QString & ) const"
   "QSqlRecord record ( const QString & ) const"
   "bool rollback ()"
   "void setConnectOptions ( const QString & = QString() )"
   "void setDatabaseName ( const QString & )"
   "void setHostName ( const QString & )"
   "void setNumericalPrecisionPolicy ( QSql::NumericalPrecisionPolicy )"
   "void setPassword ( const QString & )"
   "void setPort ( int )"
   "void setUserName ( const QString & )"
   "QStringList tables ( QSql::TableType = QSql::Tables ) const"
   "bool transaction ()"
   "QString userName () const"
   "static QSqlDatabase addDatabase ( const QString & , const QString & = QLatin1String( defaultConnection ) )"
   "static QSqlDatabase addDatabase ( QSqlDriver * , const QString & = QLatin1String( defaultConnection ) )"
   "static QSqlDatabase cloneDatabase ( const QSqlDatabase & , const QString & )"
   "static QStringList connectionNames ()"
   "static bool contains ( const QString & = QLatin1String( defaultConnection ) )"
   "static QSqlDatabase database ( const QString & = QLatin1String( defaultConnection ) , bool = true )"
   "static QStringList drivers ()"
   "static bool isDriverAvailable ( const QString & )"
   "static void registerSqlDriver ( const QString & , QSqlDriverCreatorBase * )"
   "static void removeDatabase ( const QString & )")
  (("QSqlError" . NIL)
   "new QSqlError ( const QString & = QString() , const QString & = QString() , ErrorType = NoError , const QString & = QString() )"
   "new QSqlError ( const QSqlError & )"
   "QString databaseText () const"
   "QString driverText () const"
   "bool isValid () const"
   "QString nativeErrorCode () const"
   "QString text () const"
   "ErrorType type () const")
  (("QSqlField" . NIL)
   "new QSqlField ( const QString & = QString() , QVariant::Type = QVariant::Invalid )"
   "new QSqlField ( const QSqlField & )"
   "void clear ()"
   "QVariant defaultValue () const"
   "bool isAutoValue () const"
   "bool isGenerated () const"
   "bool isNull () const"
   "bool isReadOnly () const"
   "bool isValid () const"
   "int length () const"
   "QString name () const"
   "int precision () const"
   "RequiredStatus requiredStatus () const"
   "void setAutoValue ( bool )"
   "void setDefaultValue ( const QVariant & )"
   "void setGenerated ( bool )"
   "void setLength ( int )"
   "void setName ( const QString & )"
   "void setPrecision ( int )"
   "void setReadOnly ( bool )"
   "void setRequired ( bool )"
   "void setRequiredStatus ( RequiredStatus )"
   "void setType ( QVariant::Type )"
   "void setValue ( const QVariant & )"
   "QVariant::Type type () const"
   "QVariant value () const")
  (("QSqlIndex" . "QSqlRecord")
   "new QSqlIndex ( const QString & = QString() , const QString & = QString() )"
   "new QSqlIndex ( const QSqlIndex & )"
   "void append ( const QSqlField & )"
   "void append ( const QSqlField & , bool )"
   "QString cursorName () const"
   "bool isDescending ( int ) const"
   "QString name () const"
   "void setCursorName ( const QString & )"
   "void setDescending ( int , bool )"
   "void setName ( const QString & )")
  (("QSqlQuery" . NIL)
   "new QSqlQuery ( QSqlResult * )"
   "new QSqlQuery ( const QString & = QString() , QSqlDatabase = QSqlDatabase() )"
   "new QSqlQuery ( QSqlDatabase )"
   "new QSqlQuery ( const QSqlQuery & )"
   "void addBindValue ( const QVariant & , QSql::ParamType = QSql::In )"
   "int at () const"
   "void bindValue ( const QString & , const QVariant & , QSql::ParamType = QSql::In )"
   "void bindValue ( int , const QVariant & , QSql::ParamType = QSql::In )"
   "QVariant boundValue ( const QString & ) const"
   "QVariant boundValue ( int ) const"
   "void clear ()"
   "const QSqlDriver * driver () const"
   "bool exec ( const QString & )"
   "bool exec ()"
   "bool execBatch ( BatchExecutionMode = ValuesAsRows )"
   "QString executedQuery () const"
   "void finish ()"
   "bool first ()"
   "bool isActive () const"
   "bool isForwardOnly () const"
   "bool isNull ( int ) const"
   "bool isNull ( const QString & ) const"
   "bool isSelect () const"
   "bool isValid () const"
   "bool last ()"
   "QSqlError lastError () const"
   "QVariant lastInsertId () const"
   "QString lastQuery () const"
   "bool next ()"
   "bool nextResult ()"
   "int numRowsAffected () const"
   "QSql::NumericalPrecisionPolicy numericalPrecisionPolicy () const"
   "bool prepare ( const QString & )"
   "bool previous ()"
   "QSqlRecord record () const"
   "const QSqlResult * result () const"
   "bool seek ( int , bool = false )"
   "void setForwardOnly ( bool )"
   "void setNumericalPrecisionPolicy ( QSql::NumericalPrecisionPolicy )"
   "int size () const"
   "QVariant value ( int ) const"
   "QVariant value ( const QString & ) const")
  (("QSqlRecord" . NIL)
   "new QSqlRecord ()"
   "new QSqlRecord ( const QSqlRecord & )"
   "void append ( const QSqlField & )"
   "void clear ()"
   "void clearValues ()"
   "bool contains ( const QString & ) const"
   "int count () const"
   "QSqlField field ( int ) const"
   "QSqlField field ( const QString & ) const"
   "QString fieldName ( int ) const"
   "int indexOf ( const QString & ) const"
   "void insert ( int , const QSqlField & )"
   "bool isEmpty () const"
   "bool isGenerated ( const QString & ) const"
   "bool isGenerated ( int ) const"
   "bool isNull ( const QString & ) const"
   "bool isNull ( int ) const"
   "QSqlRecord keyValues ( const QSqlRecord & ) const"
   "void remove ( int )"
   "void replace ( int , const QSqlField & )"
   "void setGenerated ( const QString & , bool )"
   "void setGenerated ( int , bool )"
   "void setNull ( int )"
   "void setNull ( const QString & )"
   "void setValue ( int , const QVariant & )"
   "void setValue ( const QString & , const QVariant & )"
   "QVariant value ( int ) const"
   "QVariant value ( const QString & ) const")
  (("QSqlRelation" . NIL)
   "new QSqlRelation ()"
   "new QSqlRelation ( const QString & , const QString & , const QString & )"
   "QString displayColumn () const"
   "QString indexColumn () const"
   "bool isValid () const"
   "QString tableName () const")
  (("QSqlResult" . NIL)
   "virtual QVariant handle () const"
   "protected void addBindValue ( const QVariant & , QSql::ParamType )"
   "protected int at () const"
   "protected QSql::ParamType bindValueType ( int ) const"
   "protected QSql::ParamType bindValueType ( const QString & ) const"
   "protected BindingSyntax bindingSyntax () const"
   "protected QVariant boundValue ( int ) const"
   "protected QVariant boundValue ( const QString & ) const"
   "protected int boundValueCount () const"
   "protected QString boundValueName ( int ) const"
   "protected QVector<QVariant> & boundValues () const"
   "protected void clear ()"
   "protected const QSqlDriver * driver () const"
   "protected QString executedQuery () const"
   "protected bool hasOutValues () const"
   "protected bool isActive () const"
   "protected bool isForwardOnly () const"
   "protected bool isSelect () const"
   "protected bool isValid () const"
   "protected QSqlError lastError () const"
   "protected QString lastQuery () const"
   "protected void resetBindCount ()")
  (("QSslCertificate" . NIL)
   "new QSslCertificate ( const QByteArray & = QByteArray() , QSsl::EncodingFormat = QSsl::Pem )"
   "new QSslCertificate ( const QSslCertificate & )"
   "void clear ()"
   "QByteArray digest ( QCryptographicHash::Algorithm = QCryptographicHash::Md5 ) const"
   "QDateTime effectiveDate () const"
   "QDateTime expiryDate () const"
   "QList<QSslCertificateExtension> extensions () const"
   "bool isBlacklisted () const"
   "bool isNull () const"
   "bool isSelfSigned () const"
   "QStringList issuerInfo ( SubjectInfo ) const"
   "QStringList issuerInfo ( const QByteArray & ) const"
   "QList<QByteArray> issuerInfoAttributes () const"
   "QSslKey publicKey () const"
   "QByteArray serialNumber () const"
   "QMultiMap<QSsl::AlternativeNameEntryType, QString> subjectAlternativeNames () const"
   "QStringList subjectInfo ( SubjectInfo ) const"
   "QStringList subjectInfo ( const QByteArray & ) const"
   "QList<QByteArray> subjectInfoAttributes () const"
   "void swap ( QSslCertificate & )"
   "QByteArray toDer () const"
   "QByteArray toPem () const"
   "QString toText () const"
   "QByteArray version () const"
   "static QList<QSslCertificate> fromData ( const QByteArray & , QSsl::EncodingFormat = QSsl::Pem )"
   "static QList<QSslCertificate> fromPath ( const QString & , QSsl::EncodingFormat = QSsl::Pem , QRegExp::PatternSyntax = QRegExp::FixedString )"
   "static QList<QSslError> verify ( const QList<QSslCertificate> & , const QString & = QString() )")
  (("QSslCipher" . NIL)
   "new QSslCipher ()"
   "new QSslCipher ( const QString & )"
   "new QSslCipher ( const QString & , QSsl::SslProtocol )"
   "new QSslCipher ( const QSslCipher & )"
   "QString authenticationMethod () const"
   "QString encryptionMethod () const"
   "bool isNull () const"
   "QString keyExchangeMethod () const"
   "QString name () const"
   "QSsl::SslProtocol protocol () const"
   "QString protocolString () const"
   "int supportedBits () const"
   "void swap ( QSslCipher & )"
   "int usedBits () const")
  (("QSslConfiguration" . NIL)
   "new QSslConfiguration ()"
   "new QSslConfiguration ( const QSslConfiguration & )"
   "QList<QByteArray> allowedNextProtocols () const"
   "QList<QSslCertificate> caCertificates () const"
   "QList<QSslCipher> ciphers () const"
   "QVector<QSslEllipticCurve> ellipticCurves () const"
   "bool isNull () const"
   "QSslCertificate localCertificate () const"
   "QList<QSslCertificate> localCertificateChain () const"
   "QByteArray nextNegotiatedProtocol () const"
   "NextProtocolNegotiationStatus nextProtocolNegotiationStatus () const"
   "QSslCertificate peerCertificate () const"
   "QList<QSslCertificate> peerCertificateChain () const"
   "int peerVerifyDepth () const"
   "QSslSocket::PeerVerifyMode peerVerifyMode () const"
   "QSslKey privateKey () const"
   "QSsl::SslProtocol protocol () const"
   "QSslCipher sessionCipher () const"
   "QSsl::SslProtocol sessionProtocol () const"
   "QByteArray sessionTicket () const"
   "int sessionTicketLifeTimeHint () const"
   "void setAllowedNextProtocols ( const QList<QByteArray> & )"
   "void setCaCertificates ( const QList<QSslCertificate> & )"
   "void setCiphers ( const QList<QSslCipher> & )"
   "void setEllipticCurves ( const QVector<QSslEllipticCurve> & )"
   "void setLocalCertificate ( const QSslCertificate & )"
   "void setLocalCertificateChain ( const QList<QSslCertificate> & )"
   "void setPeerVerifyDepth ( int )"
   "void setPeerVerifyMode ( QSslSocket::PeerVerifyMode )"
   "void setPrivateKey ( const QSslKey & )"
   "void setProtocol ( QSsl::SslProtocol )"
   "void setSessionTicket ( const QByteArray & )"
   "void setSslOption ( QSsl::SslOption , bool )"
   "void swap ( QSslConfiguration & )"
   "bool testSslOption ( QSsl::SslOption ) const"
   "static QSslConfiguration defaultConfiguration ()"
   "static void setDefaultConfiguration ( const QSslConfiguration & )"
   "static QList<QSslCipher> supportedCiphers ()"
   "static QVector<QSslEllipticCurve> supportedEllipticCurves ()"
   "static QList<QSslCertificate> systemCaCertificates ()")
  (("QSslError" . NIL)
   "new QSslError ()"
   "new QSslError ( SslError )"
   "new QSslError ( SslError , const QSslCertificate & )"
   "new QSslError ( const QSslError & )"
   "QSslCertificate certificate () const"
   "SslError error () const"
   "QString errorString () const"
   "void swap ( QSslError & )")
  (("QSslKey" . NIL)
   "new QSslKey ()"
   "new QSslKey ( const QByteArray & , QSsl::KeyAlgorithm , QSsl::EncodingFormat = QSsl::Pem , QSsl::KeyType = QSsl::PrivateKey , const QByteArray & = QByteArray() )"
   "new QSslKey ( const QSslKey & )"
   "QSsl::KeyAlgorithm algorithm () const"
   "void clear ()"
   "bool isNull () const"
   "int length () const"
   "void swap ( QSslKey & )"
   "QByteArray toDer ( const QByteArray & = QByteArray() ) const"
   "QByteArray toPem ( const QByteArray & = QByteArray() ) const"
   "QSsl::KeyType type () const")
  (("QStandardItem" . NIL)
   "new QStandardItem ()"
   "new QStandardItem ( const QString & )"
   "new QStandardItem ( const QIcon & , const QString & )"
   "new QStandardItem ( int , int = 1 )"
   "QString accessibleDescription () const"
   "QString accessibleText () const"
   "void appendColumn ( const QList<QStandardItem *> & )"
   "void appendRow ( const QList<QStandardItem *> & )"
   "void appendRow ( QStandardItem * )"
   "void appendRows ( const QList<QStandardItem *> & )"
   "QBrush background () const"
   "Qt::CheckState checkState () const"
   "QStandardItem * child ( int , int = 0 ) const"
   "virtual QStandardItem * clone () const"
   "int column () const"
   "int columnCount () const"
   "virtual QVariant data ( int = Qt::UserRole + 1 ) const"
   "Qt::ItemFlags flags () const"
   "QFont font () const"
   "QBrush foreground () const"
   "bool hasChildren () const"
   "QIcon icon () const"
   "QModelIndex index () const"
   "void insertColumn ( int , const QList<QStandardItem *> & )"
   "void insertColumns ( int , int )"
   "void insertRow ( int , const QList<QStandardItem *> & )"
   "void insertRow ( int , QStandardItem * )"
   "void insertRows ( int , const QList<QStandardItem *> & )"
   "void insertRows ( int , int )"
   "bool isCheckable () const"
   "bool isDragEnabled () const"
   "bool isDropEnabled () const"
   "bool isEditable () const"
   "bool isEnabled () const"
   "bool isSelectable () const"
   "bool isTristate () const"
   "QStandardItemModel * model () const"
   "QStandardItem * parent () const"
   "void removeColumn ( int )"
   "void removeColumns ( int , int )"
   "void removeRow ( int )"
   "void removeRows ( int , int )"
   "int row () const"
   "int rowCount () const"
   "void setAccessibleDescription ( const QString & )"
   "void setAccessibleText ( const QString & )"
   "void setBackground ( const QBrush & )"
   "void setCheckState ( Qt::CheckState )"
   "void setCheckable ( bool )"
   "void setChild ( int , int , QStandardItem * )"
   "void setChild ( int , QStandardItem * )"
   "void setColumnCount ( int )"
   "virtual void setData ( const QVariant & , int = Qt::UserRole + 1 )"
   "void setDragEnabled ( bool )"
   "void setDropEnabled ( bool )"
   "void setEditable ( bool )"
   "void setEnabled ( bool )"
   "void setFlags ( Qt::ItemFlags )"
   "void setFont ( const QFont & )"
   "void setForeground ( const QBrush & )"
   "void setIcon ( const QIcon & )"
   "void setRowCount ( int )"
   "void setSelectable ( bool )"
   "void setSizeHint ( const QSize & )"
   "void setStatusTip ( const QString & )"
   "void setText ( const QString & )"
   "void setTextAlignment ( Qt::Alignment )"
   "void setToolTip ( const QString & )"
   "void setTristate ( bool )"
   "void setWhatsThis ( const QString & )"
   "QSize sizeHint () const"
   "void sortChildren ( int , Qt::SortOrder = Qt::AscendingOrder )"
   "QString statusTip () const"
   "QStandardItem * takeChild ( int , int = 0 )"
   "QList<QStandardItem *> takeColumn ( int )"
   "QList<QStandardItem *> takeRow ( int )"
   "QString text () const"
   "Qt::Alignment textAlignment () const"
   "QString toolTip () const"
   "virtual int type () const"
   "QString whatsThis () const"
   "protected void emitDataChanged ()")
  (("QStandardPaths" . NIL)
   "static QString displayName ( StandardLocation )"
   "static QString findExecutable ( const QString & , const QStringList & = QStringList() )"
   "static QString locate ( StandardLocation , const QString & , LocateOptions = LocateFile )"
   "static QStringList locateAll ( StandardLocation , const QString & , LocateOptions = LocateFile )"
   "static void setTestModeEnabled ( bool )"
   "static QStringList standardLocations ( StandardLocation )"
   "static QString writableLocation ( StandardLocation )")
  (("QStatusTipEvent" . "QEvent")
   "new QStatusTipEvent ( const QString & )"
   "QString tip () const")
  (("QStyleOption" . NIL)
   "new QStyleOption ( int = QStyleOption::Version , int = SO_Default )"
   "new QStyleOption ( const QStyleOption & )"
   "void initFrom ( const QWidget * )")
  (("QStyleOptionGraphicsItem" . "QStyleOption")
   "new QStyleOptionGraphicsItem ()"
   "new QStyleOptionGraphicsItem ( const QStyleOptionGraphicsItem & )"
   "static qreal levelOfDetailFromTransform ( const QTransform & )")
  (("QSurface" . NIL)
   "virtual QSurfaceFormat format () const = 0"
   "virtual QSize size () const = 0"
   "bool supportsOpenGL () const"
   "SurfaceClass surfaceClass () const"
   "virtual SurfaceType surfaceType () const = 0")
  (("QSvgGenerator" . "QPaintDevice")
   "new QSvgGenerator ()"
   "QString description () const"
   "QString fileName () const"
   "int resolution () const"
   "void setDescription ( const QString & )"
   "void setFileName ( const QString & )"
   "void setResolution ( int )"
   "void setSize ( const QSize & )"
   "void setTitle ( const QString & )"
   "void setViewBox ( const QRect & )"
   "void setViewBox ( const QRectF & )"
   "QSize size () const"
   "QString title () const"
   "QRect viewBox () const"
   "QRectF viewBoxF () const")
  (("QSysInfo" . NIL)
   "static QString buildAbi ()"
   "static QString buildCpuArchitecture ()"
   "static QString currentCpuArchitecture ()"
   "static QString kernelType ()"
   "static QString kernelVersion ()"
   "static MacVersion macVersion ()"
   "static QString prettyProductName ()"
   "static QString productType ()"
   "static QString productVersion ()"
   "static WinVersion windowsVersion ()")
  (("QSystemSemaphore" . NIL)
   "new QSystemSemaphore ( const QString & , int = 0 , AccessMode = Open )"
   "bool acquire ()"
   "SystemSemaphoreError error () const"
   "QString errorString () const"
   "QString key () const"
   "bool release ( int = 1 )"
   "void setKey ( const QString & , int = 0 , AccessMode = Open )")
  (("QTableWidgetItem" . NIL)
   "new QTableWidgetItem ( int = Type )"
   "new QTableWidgetItem ( const QString & , int = Type )"
   "new QTableWidgetItem ( const QIcon & , const QString & , int = Type )"
   "new QTableWidgetItem ( const QTableWidgetItem & )"
   "QBrush background () const"
   "Qt::CheckState checkState () const"
   "virtual QTableWidgetItem * clone () const"
   "int column () const"
   "virtual QVariant data ( int ) const"
   "Qt::ItemFlags flags () const"
   "QFont font () const"
   "QBrush foreground () const"
   "QIcon icon () const"
   "bool isSelected () const"
   "int row () const"
   "void setBackground ( const QBrush & )"
   "void setCheckState ( Qt::CheckState )"
   "virtual void setData ( int , const QVariant & )"
   "void setFlags ( Qt::ItemFlags )"
   "void setFont ( const QFont & )"
   "void setForeground ( const QBrush & )"
   "void setIcon ( const QIcon & )"
   "void setSelected ( bool )"
   "void setSizeHint ( const QSize & )"
   "void setStatusTip ( const QString & )"
   "void setText ( const QString & )"
   "void setTextAlignment ( int )"
   "void setToolTip ( const QString & )"
   "void setWhatsThis ( const QString & )"
   "QSize sizeHint () const"
   "QString statusTip () const"
   "QTableWidget * tableWidget () const"
   "QString text () const"
   "int textAlignment () const"
   "QString toolTip () const"
   "int type () const"
   "QString whatsThis () const")
  (("QTableWidgetSelectionRange" . NIL)
   "new QTableWidgetSelectionRange ()"
   "new QTableWidgetSelectionRange ( int , int , int , int )"
   "new QTableWidgetSelectionRange ( const QTableWidgetSelectionRange & )"
   "int bottomRow () const"
   "int columnCount () const"
   "int leftColumn () const"
   "int rightColumn () const"
   "int rowCount () const"
   "int topRow () const")
  (("QTabletEvent" . "QInputEvent")
   "new QTabletEvent ( Type , const QPointF & , const QPointF & , int , int , qreal , int , int , qreal , qreal , int , Qt::KeyboardModifiers , qint64 , Qt::MouseButton , Qt::MouseButtons )"
   "Qt::MouseButton button () const"
   "Qt::MouseButtons buttons () const"
   "TabletDevice device () const"
   "QPoint globalPos () const"
   "const QPointF & globalPosF () const"
   "int globalX () const"
   "int globalY () const"
   "qreal hiResGlobalX () const"
   "qreal hiResGlobalY () const"
   "PointerType pointerType () const"
   "QPoint pos () const"
   "const QPointF & posF () const"
   "qreal pressure () const"
   "qreal rotation () const"
   "qreal tangentialPressure () const"
   "qint64 uniqueId () const"
   "int x () const"
   "int xTilt () const"
   "int y () const"
   "int yTilt () const"
   "int z () const")
  (("QTextBlock" . NIL)
   "new QTextBlock ( const QTextBlock & )"
   "QTextBlockFormat blockFormat () const"
   "int blockFormatIndex () const"
   "int blockNumber () const"
   "QTextCharFormat charFormat () const"
   "int charFormatIndex () const"
   "void clearLayout ()"
   "bool contains ( int ) const"
   "const QTextDocument * document () const"
   "int firstLineNumber () const"
   "bool isValid () const"
   "bool isVisible () const"
   "QTextLayout * layout () const"
   "int length () const"
   "int lineCount () const"
   "QTextBlock next () const"
   "int position () const"
   "QTextBlock previous () const"
   "int revision () const"
   "void setLineCount ( int )"
   "void setRevision ( int )"
   "void setUserData ( QTextBlockUserData * )"
   "void setUserState ( int )"
   "void setVisible ( bool )"
   "QString text () const"
   "Qt::LayoutDirection textDirection () const"
   "QVector<QTextLayout::FormatRange> textFormats () const"
   "QTextList * textList () const"
   "QTextBlockUserData * userData () const"
   "int userState () const")
  (("QTextBlockFormat" . "QTextFormat")
   "new QTextBlockFormat ()"
   "Qt::Alignment alignment () const"
   "qreal bottomMargin () const"
   "int indent () const"
   "bool isValid () const"
   "qreal leftMargin () const"
   "qreal lineHeight ( qreal , qreal ) const"
   "qreal lineHeight () const"
   "int lineHeightType () const"
   "bool nonBreakableLines () const"
   "PageBreakFlags pageBreakPolicy () const"
   "qreal rightMargin () const"
   "void setAlignment ( Qt::Alignment )"
   "void setBottomMargin ( qreal )"
   "void setIndent ( int )"
   "void setLeftMargin ( qreal )"
   "void setLineHeight ( qreal , int )"
   "void setNonBreakableLines ( bool )"
   "void setPageBreakPolicy ( PageBreakFlags )"
   "void setRightMargin ( qreal )"
   "void setTabPositions ( const QList<QTextOption::Tab> & )"
   "void setTextIndent ( qreal )"
   "void setTopMargin ( qreal )"
   "QList<QTextOption::Tab> tabPositions () const"
   "qreal textIndent () const"
   "qreal topMargin () const")
  (("QTextBlockUserData" . NIL))
  (("QTextBoundaryFinder" . NIL)
   "new QTextBoundaryFinder ()"
   "new QTextBoundaryFinder ( const QTextBoundaryFinder & )"
   "new QTextBoundaryFinder ( BoundaryType , const QString & )"
   "new QTextBoundaryFinder ( BoundaryType , const QChar * , int , unsigned char * = 0 , int = 0 )"
   "BoundaryReasons boundaryReasons () const"
   "bool isAtBoundary () const"
   "bool isValid () const"
   "int position () const"
   "void setPosition ( int )"
   "QString string () const"
   "void toEnd ()"
   "int toNextBoundary ()"
   "int toPreviousBoundary ()"
   "void toStart ()"
   "BoundaryType type () const")
  (("QTextCharFormat" . "QTextFormat")
   "new QTextCharFormat ()"
   "QString anchorHref () const"
   "QStringList anchorNames () const"
   "QFont font () const"
   "QFont::Capitalization fontCapitalization () const"
   "QString fontFamily () const"
   "bool fontFixedPitch () const"
   "QFont::HintingPreference fontHintingPreference () const"
   "bool fontItalic () const"
   "bool fontKerning () const"
   "qreal fontLetterSpacing () const"
   "QFont::SpacingType fontLetterSpacingType () const"
   "bool fontOverline () const"
   "qreal fontPointSize () const"
   "int fontStretch () const"
   "bool fontStrikeOut () const"
   "QFont::StyleHint fontStyleHint () const"
   "QFont::StyleStrategy fontStyleStrategy () const"
   "bool fontUnderline () const"
   "int fontWeight () const"
   "qreal fontWordSpacing () const"
   "bool isAnchor () const"
   "bool isValid () const"
   "void setAnchor ( bool )"
   "void setAnchorHref ( const QString & )"
   "void setAnchorNames ( const QStringList & )"
   "void setFont ( const QFont & , FontPropertiesInheritanceBehavior )"
   "void setFont ( const QFont & )"
   "void setFontCapitalization ( QFont::Capitalization )"
   "void setFontFamily ( const QString & )"
   "void setFontFixedPitch ( bool )"
   "void setFontHintingPreference ( QFont::HintingPreference )"
   "void setFontItalic ( bool )"
   "void setFontKerning ( bool )"
   "void setFontLetterSpacing ( qreal )"
   "void setFontLetterSpacingType ( QFont::SpacingType )"
   "void setFontOverline ( bool )"
   "void setFontPointSize ( qreal )"
   "void setFontStretch ( int )"
   "void setFontStrikeOut ( bool )"
   "void setFontStyleHint ( QFont::StyleHint , QFont::StyleStrategy = QFont::PreferDefault )"
   "void setFontStyleStrategy ( QFont::StyleStrategy )"
   "void setFontUnderline ( bool )"
   "void setFontWeight ( int )"
   "void setFontWordSpacing ( qreal )"
   "void setTextOutline ( const QPen & )"
   "void setToolTip ( const QString & )"
   "void setUnderlineColor ( const QColor & )"
   "void setUnderlineStyle ( UnderlineStyle )"
   "void setVerticalAlignment ( VerticalAlignment )"
   "QPen textOutline () const"
   "QString toolTip () const"
   "QColor underlineColor () const"
   "UnderlineStyle underlineStyle () const"
   "VerticalAlignment verticalAlignment () const")
  (("QTextCodec" . NIL)
   "virtual QList<QByteArray> aliases () const"
   "bool canEncode ( QChar ) const"
   "bool canEncode ( const QString & ) const"
   "QByteArray fromUnicode ( const QString & ) const"
   "QByteArray fromUnicode ( const QChar * , int , ConverterState * = 0 ) const"
   "QTextDecoder * makeDecoder ( ConversionFlags = DefaultConversion ) const"
   "QTextEncoder * makeEncoder ( ConversionFlags = DefaultConversion ) const"
   "virtual int mibEnum () const = 0"
   "virtual QByteArray name () const = 0"
   "QString toUnicode ( const QByteArray & ) const"
   "QString toUnicode ( const char * , int , ConverterState * = 0 ) const"
   "QString toUnicode ( const char * ) const"
   "static QList<QByteArray> availableCodecs ()"
   "static QList<int> availableMibs ()"
   "static QTextCodec * codecForHtml ( const QByteArray & , QTextCodec * )"
   "static QTextCodec * codecForHtml ( const QByteArray & )"
   "static QTextCodec * codecForLocale ()"
   "static QTextCodec * codecForMib ( int )"
   "static QTextCodec * codecForName ( const QByteArray & )"
   "static QTextCodec * codecForName ( const char * )"
   "static QTextCodec * codecForUtfText ( const QByteArray & , QTextCodec * )"
   "static QTextCodec * codecForUtfText ( const QByteArray & )"
   "static void setCodecForLocale ( QTextCodec * )")
  (("QTextCursor" . NIL)
   "new QTextCursor ()"
   "new QTextCursor ( QTextDocument * )"
   "new QTextCursor ( QTextFrame * )"
   "new QTextCursor ( const QTextBlock & )"
   "new QTextCursor ( const QTextCursor & )"
   "int anchor () const"
   "bool atBlockEnd () const"
   "bool atBlockStart () const"
   "bool atEnd () const"
   "bool atStart () const"
   "void beginEditBlock ()"
   "QTextBlock block () const"
   "QTextCharFormat blockCharFormat () const"
   "QTextBlockFormat blockFormat () const"
   "int blockNumber () const"
   "QTextCharFormat charFormat () const"
   "void clearSelection ()"
   "int columnNumber () const"
   "QTextList * createList ( const QTextListFormat & )"
   "QTextList * createList ( QTextListFormat::Style )"
   "QTextFrame * currentFrame () const"
   "QTextList * currentList () const"
   "QTextTable * currentTable () const"
   "void deleteChar ()"
   "void deletePreviousChar ()"
   "QTextDocument * document () const"
   "void endEditBlock ()"
   "bool hasComplexSelection () const"
   "bool hasSelection () const"
   "void insertBlock ()"
   "void insertBlock ( const QTextBlockFormat & )"
   "void insertBlock ( const QTextBlockFormat & , const QTextCharFormat & )"
   "void insertFragment ( const QTextDocumentFragment & )"
   "QTextFrame * insertFrame ( const QTextFrameFormat & )"
   "void insertHtml ( const QString & )"
   "void insertImage ( const QTextImageFormat & )"
   "void insertImage ( const QTextImageFormat & , QTextFrameFormat::Position )"
   "void insertImage ( const QString & )"
   "void insertImage ( const QImage & , const QString & = QString() )"
   "QTextList * insertList ( const QTextListFormat & )"
   "QTextList * insertList ( QTextListFormat::Style )"
   "QTextTable * insertTable ( int , int , const QTextTableFormat & )"
   "QTextTable * insertTable ( int , int )"
   "void insertText ( const QString & )"
   "void insertText ( const QString & , const QTextCharFormat & )"
   "bool isCopyOf ( const QTextCursor & ) const"
   "bool isNull () const"
   "void joinPreviousEditBlock ()"
   "bool keepPositionOnInsert () const"
   "void mergeBlockCharFormat ( const QTextCharFormat & )"
   "void mergeBlockFormat ( const QTextBlockFormat & )"
   "void mergeCharFormat ( const QTextCharFormat & )"
   "bool movePosition ( MoveOperation , MoveMode = MoveAnchor , int = 1 )"
   "int position () const"
   "int positionInBlock () const"
   "void removeSelectedText ()"
   "void select ( SelectionType )"
   "QString selectedText () const"
   "QTextDocumentFragment selection () const"
   "int selectionEnd () const"
   "int selectionStart () const"
   "void setBlockCharFormat ( const QTextCharFormat & )"
   "void setBlockFormat ( const QTextBlockFormat & )"
   "void setCharFormat ( const QTextCharFormat & )"
   "void setKeepPositionOnInsert ( bool )"
   "void setPosition ( int , MoveMode = MoveAnchor )"
   "void setVerticalMovementX ( int )"
   "void setVisualNavigation ( bool )"
   "void swap ( QTextCursor & )"
   "int verticalMovementX () const"
   "bool visualNavigation () const")
  (("QTextDecoder" . NIL)
   "new QTextDecoder ( const QTextCodec * )"
   "new QTextDecoder ( const QTextCodec * , QTextCodec::ConversionFlags )"
   "QString toUnicode ( const char * , int )"
   "void toUnicode ( QString * , const char * , int )"
   "QString toUnicode ( const QByteArray & )")
  (("QTextDocumentFragment" . NIL)
   "new QTextDocumentFragment ()"
   "new QTextDocumentFragment ( const QTextDocument * )"
   "new QTextDocumentFragment ( const QTextCursor & )"
   "new QTextDocumentFragment ( const QTextDocumentFragment & )"
   "bool isEmpty () const"
   "QString toHtml ( const QByteArray & = QByteArray() ) const"
   "QString toPlainText () const"
   "static QTextDocumentFragment fromHtml ( const QString & )"
   "static QTextDocumentFragment fromHtml ( const QString & , const QTextDocument * )"
   "static QTextDocumentFragment fromPlainText ( const QString & )")
  (("QTextDocumentWriter" . NIL)
   "new QTextDocumentWriter ()"
   "new QTextDocumentWriter ( const QString & , const QByteArray & = QByteArray() )"
   "QTextCodec * codec () const"
   "QString fileName () const"
   "QByteArray format () const"
   "void setCodec ( QTextCodec * )"
   "void setFileName ( const QString & )"
   "void setFormat ( const QByteArray & )"
   "bool write ( const QTextDocument * )"
   "bool write ( const QTextDocumentFragment & )"
   "static QList<QByteArray> supportedDocumentFormats ()")
  (("QTextEncoder" . NIL)
   "new QTextEncoder ( const QTextCodec * )"
   "new QTextEncoder ( const QTextCodec * , QTextCodec::ConversionFlags )"
   "QByteArray fromUnicode ( const QString & )"
   "QByteArray fromUnicode ( const QChar * , int )")
  (("QTextFormat" . NIL)
   "new QTextFormat ()"
   "new QTextFormat ( int )"
   "new QTextFormat ( const QTextFormat & )"
   "QBrush background () const"
   "bool boolProperty ( int ) const"
   "QBrush brushProperty ( int ) const"
   "void clearBackground ()"
   "void clearForeground ()"
   "void clearProperty ( int )"
   "QColor colorProperty ( int ) const"
   "qreal doubleProperty ( int ) const"
   "QBrush foreground () const"
   "bool hasProperty ( int ) const"
   "int intProperty ( int ) const"
   "bool isBlockFormat () const"
   "bool isCharFormat () const"
   "bool isEmpty () const"
   "bool isFrameFormat () const"
   "bool isImageFormat () const"
   "bool isListFormat () const"
   "bool isTableCellFormat () const"
   "bool isTableFormat () const"
   "bool isValid () const"
   "Qt::LayoutDirection layoutDirection () const"
   "QTextLength lengthProperty ( int ) const"
   "QVector<QTextLength> lengthVectorProperty ( int ) const"
   "void merge ( const QTextFormat & )"
   "int objectIndex () const"
   "int objectType () const"
   "QPen penProperty ( int ) const"
   "QVariant property ( int ) const"
   "int propertyCount () const"
   "void setBackground ( const QBrush & )"
   "void setForeground ( const QBrush & )"
   "void setLayoutDirection ( Qt::LayoutDirection )"
   "void setObjectIndex ( int )"
   "void setObjectType ( int )"
   "void setProperty ( int , const QVariant & )"
   "void setProperty ( int , const QVector<QTextLength> & )"
   "QString stringProperty ( int ) const"
   "void swap ( QTextFormat & )"
   "QTextBlockFormat toBlockFormat () const"
   "QTextCharFormat toCharFormat () const"
   "QTextFrameFormat toFrameFormat () const"
   "QTextImageFormat toImageFormat () const"
   "QTextListFormat toListFormat () const"
   "QTextTableCellFormat toTableCellFormat () const"
   "QTextTableFormat toTableFormat () const"
   "int type () const")
  (("QTextFragment" . NIL)
   "new QTextFragment ()"
   "new QTextFragment ( const QTextFragment & )"
   "QTextCharFormat charFormat () const"
   "int charFormatIndex () const"
   "bool contains ( int ) const"
   "QList<QGlyphRun> glyphRuns ( int = -1 , int = -1 ) const"
   "bool isValid () const"
   "int length () const"
   "int position () const"
   "QString text () const")
  (("QTextFrameFormat" . "QTextFormat")
   "new QTextFrameFormat ()"
   "qreal border () const"
   "QBrush borderBrush () const"
   "BorderStyle borderStyle () const"
   "qreal bottomMargin () const"
   "QTextLength height () const"
   "bool isValid () const"
   "qreal leftMargin () const"
   "qreal margin () const"
   "qreal padding () const"
   "PageBreakFlags pageBreakPolicy () const"
   "Position position () const"
   "qreal rightMargin () const"
   "void setBorder ( qreal )"
   "void setBorderBrush ( const QBrush & )"
   "void setBorderStyle ( BorderStyle )"
   "void setBottomMargin ( qreal )"
   "void setHeight ( const QTextLength & )"
   "void setHeight ( qreal )"
   "void setLeftMargin ( qreal )"
   "void setMargin ( qreal )"
   "void setPadding ( qreal )"
   "void setPageBreakPolicy ( PageBreakFlags )"
   "void setPosition ( Position )"
   "void setRightMargin ( qreal )"
   "void setTopMargin ( qreal )"
   "void setWidth ( const QTextLength & )"
   "void setWidth ( qreal )"
   "qreal topMargin () const"
   "QTextLength width () const")
  (("QTextImageFormat" . "QTextCharFormat")
   "new QTextImageFormat ()"
   "qreal height () const"
   "bool isValid () const"
   "QString name () const"
   "void setHeight ( qreal )"
   "void setName ( const QString & )"
   "void setWidth ( qreal )"
   "qreal width () const")
  (("QTextLayout" . NIL)
   "new QTextLayout ()"
   "new QTextLayout ( const QString & )"
   "new QTextLayout ( const QString & , const QFont & , QPaintDevice * = 0 )"
   "void beginLayout ()"
   "QRectF boundingRect () const"
   "bool cacheEnabled () const"
   "void clearAdditionalFormats ()"
   "void clearLayout ()"
   "QTextLine createLine ()"
   "Qt::CursorMoveStyle cursorMoveStyle () const"
   "void drawCursor ( QPainter * , const QPointF & , int , int ) const"
   "void drawCursor ( QPainter * , const QPointF & , int ) const"
   "void endLayout ()"
   "QFont font () const"
   "QList<QGlyphRun> glyphRuns ( int = -1 , int = -1 ) const"
   "bool isValidCursorPosition ( int ) const"
   "int leftCursorPosition ( int ) const"
   "QTextLine lineAt ( int ) const"
   "int lineCount () const"
   "QTextLine lineForTextPosition ( int ) const"
   "qreal maximumWidth () const"
   "qreal minimumWidth () const"
   "int nextCursorPosition ( int , CursorMode = SkipCharacters ) const"
   "QPointF position () const"
   "int preeditAreaPosition () const"
   "QString preeditAreaText () const"
   "int previousCursorPosition ( int , CursorMode = SkipCharacters ) const"
   "int rightCursorPosition ( int ) const"
   "void setCacheEnabled ( bool )"
   "void setCursorMoveStyle ( Qt::CursorMoveStyle )"
   "void setFont ( const QFont & )"
   "void setPosition ( const QPointF & )"
   "void setPreeditArea ( int , const QString & )"
   "void setText ( const QString & )"
   "void setTextOption ( const QTextOption & )"
   "QString text () const"
   "const QTextOption & textOption () const")
  (("QTextLength" . NIL)
   "new QTextLength ()"
   "new QTextLength ( Type , qreal )"
   "qreal rawValue () const"
   "Type type () const"
   "qreal value ( qreal ) const")
  (("QTextLine" . NIL)
   "new QTextLine ()"
   "qreal ascent () const"
   "qreal cursorToX ( int , Edge = Leading ) const"
   "qreal descent () const"
   "void draw ( QPainter * , const QPointF & , const QTextLayout::FormatRange * = 0 ) const"
   "QList<QGlyphRun> glyphRuns ( int = -1 , int = -1 ) const"
   "qreal height () const"
   "qreal horizontalAdvance () const"
   "bool isValid () const"
   "qreal leading () const"
   "bool leadingIncluded () const"
   "int lineNumber () const"
   "QRectF naturalTextRect () const"
   "qreal naturalTextWidth () const"
   "QPointF position () const"
   "QRectF rect () const"
   "void setLeadingIncluded ( bool )"
   "void setLineWidth ( qreal )"
   "void setNumColumns ( int )"
   "void setNumColumns ( int , qreal )"
   "void setPosition ( const QPointF & )"
   "int textLength () const"
   "int textStart () const"
   "qreal width () const"
   "qreal x () const"
   "int xToCursor ( qreal , CursorPosition = CursorBetweenCharacters ) const"
   "qreal y () const")
  (("QTextListFormat" . "QTextFormat")
   "new QTextListFormat ()"
   "int indent () const"
   "bool isValid () const"
   "QString numberPrefix () const"
   "QString numberSuffix () const"
   "void setIndent ( int )"
   "void setNumberPrefix ( const QString & )"
   "void setNumberSuffix ( const QString & )"
   "void setStyle ( Style )"
   "Style style () const")
  (("QTextOption" . NIL)
   "new QTextOption ()"
   "new QTextOption ( Qt::Alignment )"
   "new QTextOption ( const QTextOption & )"
   "Qt::Alignment alignment () const"
   "Flags flags () const"
   "void setAlignment ( Qt::Alignment )"
   "void setFlags ( Flags )"
   "void setTabArray ( const QList<qreal> & )"
   "void setTabStop ( qreal )"
   "void setTextDirection ( Qt::LayoutDirection )"
   "void setUseDesignMetrics ( bool )"
   "void setWrapMode ( WrapMode )"
   "QList<qreal> tabArray () const"
   "qreal tabStop () const"
   "Qt::LayoutDirection textDirection () const"
   "bool useDesignMetrics () const"
   "WrapMode wrapMode () const")
  (("QTextTableCell" . NIL)
   "new QTextTableCell ()"
   "new QTextTableCell ( const QTextTableCell & )"
   "int column () const"
   "int columnSpan () const"
   "QTextCursor firstCursorPosition () const"
   "QTextCharFormat format () const"
   "bool isValid () const"
   "QTextCursor lastCursorPosition () const"
   "int row () const"
   "int rowSpan () const"
   "void setFormat ( const QTextCharFormat & )"
   "int tableCellFormatIndex () const")
  (("QTextTableCellFormat" . "QTextCharFormat")
   "new QTextTableCellFormat ()"
   "qreal bottomPadding () const"
   "bool isValid () const"
   "qreal leftPadding () const"
   "qreal rightPadding () const"
   "void setBottomPadding ( qreal )"
   "void setLeftPadding ( qreal )"
   "void setPadding ( qreal )"
   "void setRightPadding ( qreal )"
   "void setTopPadding ( qreal )"
   "qreal topPadding () const")
  (("QTextTableFormat" . "QTextFrameFormat")
   "new QTextTableFormat ()"
   "Qt::Alignment alignment () const"
   "qreal cellPadding () const"
   "qreal cellSpacing () const"
   "void clearColumnWidthConstraints ()"
   "QVector<QTextLength> columnWidthConstraints () const"
   "int columns () const"
   "int headerRowCount () const"
   "bool isValid () const"
   "void setAlignment ( Qt::Alignment )"
   "void setCellPadding ( qreal )"
   "void setCellSpacing ( qreal )"
   "void setColumnWidthConstraints ( const QVector<QTextLength> & )"
   "void setHeaderRowCount ( int )")
  (("QTime" . NIL)
   "new QTime ()"
   "new QTime ( int , int , int = 0 , int = 0 )"
   "QTime addMSecs ( int ) const"
   "QTime addSecs ( int ) const"
   "int elapsed () const"
   "int hour () const"
   "bool isNull () const"
   "bool isValid () const"
   "int minute () const"
   "int msec () const"
   "int msecsSinceStartOfDay () const"
   "int msecsTo ( const QTime & ) const"
   "int restart ()"
   "int second () const"
   "int secsTo ( const QTime & ) const"
   "bool setHMS ( int , int , int , int = 0 )"
   "void start ()"
   "QString toString ( const QString & ) const"
   "QString toString ( Qt::DateFormat = Qt::TextDate ) const"
   "static QTime currentTime ()"
   "static QTime fromMSecsSinceStartOfDay ( int )"
   "static QTime fromString ( const QString & , Qt::DateFormat = Qt::TextDate )"
   "static QTime fromString ( const QString & , const QString & )"
   "static bool isValid ( int , int , int , int = 0 )")
  (("QTimeZone" . NIL)
   "new QTimeZone ()"
   "new QTimeZone ( const QByteArray & )"
   "new QTimeZone ( int )"
   "new QTimeZone ( const QByteArray & , int , const QString & , const QString & , QLocale::Country = QLocale::AnyCountry , const QString & = QString() )"
   "new QTimeZone ( const QTimeZone & )"
   "QString abbreviation ( const QDateTime & ) const"
   "QString comment () const"
   "QLocale::Country country () const"
   "int daylightTimeOffset ( const QDateTime & ) const"
   "QString displayName ( const QDateTime & , QTimeZone::NameType = QTimeZone::DefaultName , const QLocale & = QLocale() ) const"
   "QString displayName ( QTimeZone::TimeType , QTimeZone::NameType = QTimeZone::DefaultName , const QLocale & = QLocale() ) const"
   "bool hasDaylightTime () const"
   "bool hasTransitions () const"
   "QByteArray id () const"
   "bool isDaylightTime ( const QDateTime & ) const"
   "bool isValid () const"
   "int offsetFromUtc ( const QDateTime & ) const"
   "int standardTimeOffset ( const QDateTime & ) const"
   "void swap ( QTimeZone & )"
   "static QList<QByteArray> availableTimeZoneIds ()"
   "static QList<QByteArray> availableTimeZoneIds ( QLocale::Country )"
   "static QList<QByteArray> availableTimeZoneIds ( int )"
   "static QByteArray ianaIdToWindowsId ( const QByteArray & )"
   "static bool isTimeZoneIdAvailable ( const QByteArray & )"
   "static QTimeZone systemTimeZone ()"
   "static QByteArray systemTimeZoneId ()"
   "static QTimeZone utc ()"
   "static QByteArray windowsIdToDefaultIanaId ( const QByteArray & )"
   "static QByteArray windowsIdToDefaultIanaId ( const QByteArray & , QLocale::Country )"
   "static QList<QByteArray> windowsIdToIanaIds ( const QByteArray & )"
   "static QList<QByteArray> windowsIdToIanaIds ( const QByteArray & , QLocale::Country )")
  (("QTimerEvent" . "QEvent")
   "new QTimerEvent ( int )"
   "int timerId () const")
  (("QToolTip" . NIL)
   "static QFont font ()"
   "static void hideText ()"
   "static bool isVisible ()"
   "static QPalette palette ()"
   "static void setFont ( const QFont & )"
   "static void setPalette ( const QPalette & )"
   "static void showText ( const QPoint & , const QString & , QWidget * , const QRect & )"
   "static void showText ( const QPoint & , const QString & , QWidget * , const QRect & , int )"
   "static void showText ( const QPoint & , const QString & , QWidget * = 0 )"
   "static QString text ()")
  (("QTouchEvent" . "QInputEvent")
   "new QTouchEvent ( QEvent::Type , QTouchDevice * = 0 , Qt::KeyboardModifiers = Qt::NoModifier , Qt::TouchPointStates = 0 , const QList<QTouchEvent::TouchPoint> & = QList<QTouchEvent::TouchPoint> () )"
   "QTouchDevice * device () const"
   "QObject * target () const"
   "Qt::TouchPointStates touchPointStates () const"
   "const QList<QTouchEvent::TouchPoint> & touchPoints () const"
   "QWindow * window () const")
  (("QTransform" . NIL)
   "new QTransform ()"
   "new QTransform ( qreal , qreal , qreal , qreal , qreal , qreal , qreal , qreal , qreal = 1.0 )"
   "new QTransform ( qreal , qreal , qreal , qreal , qreal , qreal )"
   "new QTransform ( const QMatrix & )"
   "qreal m11 () const"
   "qreal m12 () const"
   "qreal m13 () const"
   "qreal m21 () const"
   "qreal m22 () const"
   "qreal m23 () const"
   "qreal m31 () const"
   "qreal m32 () const"
   "qreal m33 () const"
   "QTransform adjoint () const"
   "qreal determinant () const"
   "qreal dx () const"
   "qreal dy () const"
   "QTransform inverted ( bool * = 0 ) const"
   "bool isAffine () const"
   "bool isIdentity () const"
   "bool isInvertible () const"
   "bool isRotating () const"
   "bool isScaling () const"
   "bool isTranslating () const"
   "QPointF map ( const QPointF & ) const"
   "QPoint map ( const QPoint & ) const"
   "QLine map ( const QLine & ) const"
   "QLineF map ( const QLineF & ) const"
   "QPolygonF map ( const QPolygonF & ) const"
   "QPolygon map ( const QPolygon & ) const"
   "QRegion map ( const QRegion & ) const"
   "QPainterPath map ( const QPainterPath & ) const"
   "QRectF mapRect ( const QRectF & ) const"
   "QRect mapRect ( const QRect & ) const"
   "QPolygon mapToPolygon ( const QRect & ) const"
   "void reset ()"
   "QTransform & rotate ( qreal , Qt::Axis = Qt::ZAxis )"
   "QTransform & rotateRadians ( qreal , Qt::Axis = Qt::ZAxis )"
   "QTransform & scale ( qreal , qreal )"
   "void setMatrix ( qreal , qreal , qreal , qreal , qreal , qreal , qreal , qreal , qreal )"
   "QTransform & shear ( qreal , qreal )"
   "const QMatrix & toAffine () const"
   "QTransform & translate ( qreal , qreal )"
   "QTransform transposed () const"
   "TransformationType type () const"
   "static QTransform fromScale ( qreal , qreal )"
   "static QTransform fromTranslate ( qreal , qreal )"
   "static bool quadToQuad ( const QPolygonF & , const QPolygonF & , QTransform & )"
   "static bool quadToSquare ( const QPolygonF & , QTransform & )"
   "static bool squareToQuad ( const QPolygonF & , QTransform & )")
  (("QTreeWidgetItem" . NIL)
   "new QTreeWidgetItem ( int = Type )"
   "new QTreeWidgetItem ( const QStringList & , int = Type )"
   "new QTreeWidgetItem ( QTreeWidget * , int = Type )"
   "new QTreeWidgetItem ( QTreeWidget * , const QStringList & , int = Type )"
   "new QTreeWidgetItem ( QTreeWidget * , QTreeWidgetItem * , int = Type )"
   "new QTreeWidgetItem ( QTreeWidgetItem * , int = Type )"
   "new QTreeWidgetItem ( QTreeWidgetItem * , const QStringList & , int = Type )"
   "new QTreeWidgetItem ( QTreeWidgetItem * , QTreeWidgetItem * , int = Type )"
   "new QTreeWidgetItem ( const QTreeWidgetItem & )"
   "void addChild ( QTreeWidgetItem * )"
   "void addChildren ( const QList<QTreeWidgetItem *> & )"
   "QBrush background ( int ) const"
   "Qt::CheckState checkState ( int ) const"
   "QTreeWidgetItem * child ( int ) const"
   "int childCount () const"
   "QTreeWidgetItem::ChildIndicatorPolicy childIndicatorPolicy () const"
   "virtual QTreeWidgetItem * clone () const"
   "int columnCount () const"
   "virtual QVariant data ( int , int ) const"
   "Qt::ItemFlags flags () const"
   "QFont font ( int ) const"
   "QBrush foreground ( int ) const"
   "QIcon icon ( int ) const"
   "int indexOfChild ( QTreeWidgetItem * ) const"
   "void insertChild ( int , QTreeWidgetItem * )"
   "void insertChildren ( int , const QList<QTreeWidgetItem *> & )"
   "bool isDisabled () const"
   "bool isExpanded () const"
   "bool isFirstColumnSpanned () const"
   "bool isHidden () const"
   "bool isSelected () const"
   "QTreeWidgetItem * parent () const"
   "void removeChild ( QTreeWidgetItem * )"
   "void setBackground ( int , const QBrush & )"
   "void setCheckState ( int , Qt::CheckState )"
   "void setChildIndicatorPolicy ( QTreeWidgetItem::ChildIndicatorPolicy )"
   "virtual void setData ( int , int , const QVariant & )"
   "void setDisabled ( bool )"
   "void setExpanded ( bool )"
   "void setFirstColumnSpanned ( bool )"
   "void setFlags ( Qt::ItemFlags )"
   "void setFont ( int , const QFont & )"
   "void setForeground ( int , const QBrush & )"
   "void setHidden ( bool )"
   "void setIcon ( int , const QIcon & )"
   "void setSelected ( bool )"
   "void setSizeHint ( int , const QSize & )"
   "void setStatusTip ( int , const QString & )"
   "void setText ( int , const QString & )"
   "void setTextAlignment ( int , int )"
   "void setToolTip ( int , const QString & )"
   "void setWhatsThis ( int , const QString & )"
   "QSize sizeHint ( int ) const"
   "void sortChildren ( int , Qt::SortOrder )"
   "QString statusTip ( int ) const"
   "QTreeWidgetItem * takeChild ( int )"
   "QList<QTreeWidgetItem *> takeChildren ()"
   "QString text ( int ) const"
   "int textAlignment ( int ) const"
   "QString toolTip ( int ) const"
   "QTreeWidget * treeWidget () const"
   "int type () const"
   "QString whatsThis ( int ) const"
   "protected void emitDataChanged ()")
  (("QUndoCommand" . NIL)
   "new QUndoCommand ( QUndoCommand * = 0 )"
   "new QUndoCommand ( const QString & , QUndoCommand * = 0 )"
   "QString actionText () const"
   "const QUndoCommand * child ( int ) const"
   "int childCount () const"
   "virtual int id () const"
   "virtual bool mergeWith ( const QUndoCommand * )"
   "virtual void redo ()"
   "void setText ( const QString & )"
   "QString text () const"
   "virtual void undo ()")
  (("QUrl" . NIL)
   "new QUrl ()"
   "new QUrl ( const QUrl & )"
   "new QUrl ( const QString & , ParsingMode = TolerantMode )"
   "QUrl adjusted ( FormattingOptions ) const"
   "QString authority ( ComponentFormattingOptions = PrettyDecoded ) const"
   "void clear ()"
   "QString errorString () const"
   "QString fileName ( ComponentFormattingOptions = FullyDecoded ) const"
   "QString fragment ( ComponentFormattingOptions = PrettyDecoded ) const"
   "bool hasFragment () const"
   "bool hasQuery () const"
   "QString host ( ComponentFormattingOptions = FullyDecoded ) const"
   "bool isEmpty () const"
   "bool isLocalFile () const"
   "bool isParentOf ( const QUrl & ) const"
   "bool isRelative () const"
   "bool isValid () const"
   "bool matches ( const QUrl & , FormattingOptions ) const"
   "QString password ( ComponentFormattingOptions = FullyDecoded ) const"
   "QString path ( ComponentFormattingOptions = FullyDecoded ) const"
   "int port ( int = -1 ) const"
   "QString query ( ComponentFormattingOptions = PrettyDecoded ) const"
   "QUrl resolved ( const QUrl & ) const"
   "QString scheme () const"
   "void setAuthority ( const QString & , ParsingMode = TolerantMode )"
   "void setFragment ( const QString & , ParsingMode = TolerantMode )"
   "void setHost ( const QString & , ParsingMode = DecodedMode )"
   "void setPassword ( const QString & , ParsingMode = DecodedMode )"
   "void setPath ( const QString & , ParsingMode = DecodedMode )"
   "void setPort ( int )"
   "void setQuery ( const QString & , ParsingMode = TolerantMode )"
   "void setQuery ( const QUrlQuery & )"
   "void setScheme ( const QString & )"
   "void setUrl ( const QString & , ParsingMode = TolerantMode )"
   "void setUserInfo ( const QString & , ParsingMode = TolerantMode )"
   "void setUserName ( const QString & , ParsingMode = DecodedMode )"
   "void swap ( QUrl & )"
   "QString toDisplayString ( FormattingOptions = FormattingOptions( PrettyDecoded ) ) const"
   "QByteArray toEncoded ( FormattingOptions = FullyEncoded ) const"
   "QString toLocalFile () const"
   "QString toString ( FormattingOptions = FormattingOptions( PrettyDecoded ) ) const"
   "QString topLevelDomain ( ComponentFormattingOptions = FullyDecoded ) const"
   "QString url ( FormattingOptions = FormattingOptions( PrettyDecoded ) ) const"
   "QString userInfo ( ComponentFormattingOptions = PrettyDecoded ) const"
   "QString userName ( ComponentFormattingOptions = FullyDecoded ) const"
   "static QString fromAce ( const QByteArray & )"
   "static QUrl fromEncoded ( const QByteArray & , ParsingMode = TolerantMode )"
   "static QUrl fromLocalFile ( const QString & )"
   "static QString fromPercentEncoding ( const QByteArray & )"
   "static QList<QUrl> fromStringList ( const QStringList & , ParsingMode = TolerantMode )"
   "static QUrl fromUserInput ( const QString & )"
   "static QUrl fromUserInput ( const QString & , const QString & , UserInputResolutionOptions = DefaultResolution )"
   "static QStringList idnWhitelist ()"
   "static void setIdnWhitelist ( const QStringList & )"
   "static QByteArray toAce ( const QString & )"
   "static QByteArray toPercentEncoding ( const QString & , const QByteArray & = QByteArray() , const QByteArray & = QByteArray() )"
   "static QStringList toStringList ( const QList<QUrl> & , FormattingOptions = FormattingOptions( PrettyDecoded ) )")
  (("QVariant" . NIL)
   "new QVariant ( const QCursor & )"
   "new QVariant ()"
   "new QVariant ( const QRegExp & )"
   "new QVariant ( const QRegularExpression & )"
   "new QVariant ( const QUrl & )"
   "new QVariant ( const QEasingCurve & )"
   "new QVariant ( const QUuid & )"
   "new QVariant ( const QModelIndex & )"
   "new QVariant ( const QPersistentModelIndex & )"
   "new QVariant ( const QJsonValue & )"
   "new QVariant ( const QJsonObject & )"
   "new QVariant ( const QJsonArray & )"
   "new QVariant ( const QJsonDocument & )"
   "new QVariant ( Type )"
   "new QVariant ( const QVariant & )"
   "new QVariant ( int )"
   "new QVariant ( uint )"
   "new QVariant ( qlonglong )"
   "new QVariant ( qulonglong )"
   "new QVariant ( bool )"
   "new QVariant ( double )"
   "new QVariant ( float )"
   "new QVariant ( const char * )"
   "new QVariant ( const QByteArray & )"
   "new QVariant ( const QBitArray & )"
   "new QVariant ( const QString & )"
   "new QVariant ( QLatin1String )"
   "new QVariant ( const QStringList & )"
   "new QVariant ( QChar )"
   "new QVariant ( const QDate & )"
   "new QVariant ( const QTime & )"
   "new QVariant ( const QDateTime & )"
   "new QVariant ( const QSize & )"
   "new QVariant ( const QSizeF & )"
   "new QVariant ( const QPoint & )"
   "new QVariant ( const QPointF & )"
   "new QVariant ( const QLine & )"
   "new QVariant ( const QLineF & )"
   "new QVariant ( const QRect & )"
   "new QVariant ( const QRectF & )"
   "new QVariant ( const QLocale & )"
   "bool canConvert ( int ) const"
   "void clear ()"
   "bool convert ( int )"
   "bool isNull () const"
   "bool isValid () const"
   "void swap ( QVariant & )"
   "QBitArray toBitArray () const"
   "bool toBool () const"
   "QByteArray toByteArray () const"
   "QChar toChar () const"
   "QDate toDate () const"
   "QDateTime toDateTime () const"
   "double toDouble ( bool * = 0 ) const"
   "QEasingCurve toEasingCurve () const"
   "float toFloat ( bool * = 0 ) const"
   "int toInt ( bool * = 0 ) const"
   "QJsonArray toJsonArray () const"
   "QJsonDocument toJsonDocument () const"
   "QJsonObject toJsonObject () const"
   "QJsonValue toJsonValue () const"
   "QLine toLine () const"
   "QLineF toLineF () const"
   "QLocale toLocale () const"
   "qlonglong toLongLong ( bool * = 0 ) const"
   "QModelIndex toModelIndex () const"
   "QPersistentModelIndex toPersistentModelIndex () const"
   "QPoint toPoint () const"
   "QPointF toPointF () const"
   "qreal toReal ( bool * = 0 ) const"
   "QRect toRect () const"
   "QRectF toRectF () const"
   "QRegExp toRegExp () const"
   "QRegularExpression toRegularExpression () const"
   "QSize toSize () const"
   "QSizeF toSizeF () const"
   "QString toString () const"
   "QStringList toStringList () const"
   "QTime toTime () const"
   "uint toUInt ( bool * = 0 ) const"
   "qulonglong toULongLong ( bool * = 0 ) const"
   "QUrl toUrl () const"
   "QUuid toUuid () const"
   "Type type () const"
   "const char * typeName () const"
   "int userType () const"
   "static Type nameToType ( const char * )"
   "static const char * typeToName ( int )")
  (("QVector2D" . NIL)
   "new QVector2D ()"
   "new QVector2D ( float , float )"
   "new QVector2D ( const QPoint & )"
   "new QVector2D ( const QPointF & )"
   "new QVector2D ( const QVector3D & )"
   "new QVector2D ( const QVector4D & )"
   "float distanceToLine ( const QVector2D & , const QVector2D & ) const"
   "float distanceToPoint ( const QVector2D & ) const"
   "bool isNull () const"
   "float length () const"
   "float lengthSquared () const"
   "void normalize ()"
   "QVector2D normalized () const"
   "void setX ( float )"
   "void setY ( float )"
   "QPoint toPoint () const"
   "QPointF toPointF () const"
   "QVector3D toVector3D () const"
   "QVector4D toVector4D () const"
   "float x () const"
   "float y () const"
   "static float dotProduct ( const QVector2D & , const QVector2D & )")
  (("QVector3D" . NIL)
   "new QVector3D ()"
   "new QVector3D ( float , float , float )"
   "new QVector3D ( const QPoint & )"
   "new QVector3D ( const QPointF & )"
   "new QVector3D ( const QVector2D & )"
   "new QVector3D ( const QVector2D & , float )"
   "new QVector3D ( const QVector4D & )"
   "float distanceToLine ( const QVector3D & , const QVector3D & ) const"
   "float distanceToPlane ( const QVector3D & , const QVector3D & ) const"
   "float distanceToPlane ( const QVector3D & , const QVector3D & , const QVector3D & ) const"
   "float distanceToPoint ( const QVector3D & ) const"
   "bool isNull () const"
   "float length () const"
   "float lengthSquared () const"
   "void normalize ()"
   "QVector3D normalized () const"
   "QVector3D project ( const QMatrix4x4 & , const QMatrix4x4 & , const QRect & ) const"
   "void setX ( float )"
   "void setY ( float )"
   "void setZ ( float )"
   "QPoint toPoint () const"
   "QPointF toPointF () const"
   "QVector2D toVector2D () const"
   "QVector4D toVector4D () const"
   "QVector3D unproject ( const QMatrix4x4 & , const QMatrix4x4 & , const QRect & ) const"
   "float x () const"
   "float y () const"
   "float z () const"
   "static QVector3D crossProduct ( const QVector3D & , const QVector3D & )"
   "static float dotProduct ( const QVector3D & , const QVector3D & )"
   "static QVector3D normal ( const QVector3D & , const QVector3D & )"
   "static QVector3D normal ( const QVector3D & , const QVector3D & , const QVector3D & )")
  (("QVector4D" . NIL)
   "new QVector4D ()"
   "new QVector4D ( float , float , float , float )"
   "new QVector4D ( const QPoint & )"
   "new QVector4D ( const QPointF & )"
   "new QVector4D ( const QVector2D & )"
   "new QVector4D ( const QVector2D & , float , float )"
   "new QVector4D ( const QVector3D & )"
   "new QVector4D ( const QVector3D & , float )"
   "bool isNull () const"
   "float length () const"
   "float lengthSquared () const"
   "void normalize ()"
   "QVector4D normalized () const"
   "void setW ( float )"
   "void setX ( float )"
   "void setY ( float )"
   "void setZ ( float )"
   "QPoint toPoint () const"
   "QPointF toPointF () const"
   "QVector2D toVector2D () const"
   "QVector2D toVector2DAffine () const"
   "QVector3D toVector3D () const"
   "QVector3D toVector3DAffine () const"
   "float w () const"
   "float x () const"
   "float y () const"
   "float z () const"
   "static float dotProduct ( const QVector4D & , const QVector4D & )")
  (("QVideoEncoderSettings" . NIL)
   "new QVideoEncoderSettings ()"
   "new QVideoEncoderSettings ( const QVideoEncoderSettings & )"
   "int bitRate () const"
   "QString codec () const"
   "QMultimedia::EncodingMode encodingMode () const"
   "QVariant encodingOption ( const QString & ) const"
   "qreal frameRate () const"
   "bool isNull () const"
   "QMultimedia::EncodingQuality quality () const"
   "QSize resolution () const"
   "void setBitRate ( int )"
   "void setCodec ( const QString & )"
   "void setEncodingMode ( QMultimedia::EncodingMode )"
   "void setEncodingOption ( const QString & , const QVariant & )"
   "void setFrameRate ( qreal )"
   "void setQuality ( QMultimedia::EncodingQuality )"
   "void setResolution ( const QSize & )"
   "void setResolution ( int , int )")
  (("QVideoFrame" . NIL)
   "new QVideoFrame ()"
   "new QVideoFrame ( QAbstractVideoBuffer * , const QSize & , PixelFormat )"
   "new QVideoFrame ( int , const QSize & , int , PixelFormat )"
   "new QVideoFrame ( const QImage & )"
   "new QVideoFrame ( const QVideoFrame & )"
   "int bytesPerLine () const"
   "int bytesPerLine ( int ) const"
   "qint64 endTime () const"
   "FieldType fieldType () const"
   "QVariant handle () const"
   "int height () const"
   "bool isMapped () const"
   "bool isReadable () const"
   "bool isValid () const"
   "bool isWritable () const"
   "bool map ( QAbstractVideoBuffer::MapMode )"
   "QAbstractVideoBuffer::MapMode mapMode () const"
   "int mappedBytes () const"
   "QVariant metaData ( const QString & ) const"
   "PixelFormat pixelFormat () const"
   "int planeCount () const"
   "void setEndTime ( qint64 )"
   "void setFieldType ( FieldType )"
   "void setMetaData ( const QString & , const QVariant & )"
   "void setStartTime ( qint64 )"
   "QSize size () const"
   "qint64 startTime () const"
   "void unmap ()"
   "int width () const"
   "static QImage::Format imageFormatFromPixelFormat ( PixelFormat )"
   "static PixelFormat pixelFormatFromImageFormat ( QImage::Format )")
  (("QVideoSurfaceFormat" . NIL)
   "new QVideoSurfaceFormat ()"
   "new QVideoSurfaceFormat ( const QVideoSurfaceFormat & )"
   "int frameHeight () const"
   "qreal frameRate () const"
   "QSize frameSize () const"
   "int frameWidth () const"
   "bool isValid () const"
   "QSize pixelAspectRatio () const"
   "QVideoFrame::PixelFormat pixelFormat () const"
   "QVariant property ( const char * ) const"
   "QList<QByteArray> propertyNames () const"
   "Direction scanLineDirection () const"
   "void setFrameRate ( qreal )"
   "void setFrameSize ( const QSize & )"
   "void setFrameSize ( int , int )"
   "void setPixelAspectRatio ( const QSize & )"
   "void setPixelAspectRatio ( int , int )"
   "void setProperty ( const char * , const QVariant & )"
   "void setScanLineDirection ( Direction )"
   "void setViewport ( const QRect & )"
   "void setYCbCrColorSpace ( YCbCrColorSpace )"
   "QSize sizeHint () const"
   "QRect viewport () const"
   "YCbCrColorSpace yCbCrColorSpace () const")
  (("QWebDatabase" . NIL)
   "new QWebDatabase ( const QWebDatabase & )"
   "QString displayName () const"
   "qint64 expectedSize () const"
   "QString fileName () const"
   "QString name () const"
   "QWebSecurityOrigin origin () const"
   "qint64 size () const"
   "static void removeAllDatabases ()"
   "static void removeDatabase ( const QWebDatabase & )")
  (("QWebElement" . NIL)
   "new QWebElement ()"
   "new QWebElement ( const QWebElement & )"
   "void addClass ( const QString & )"
   "void appendInside ( const QString & )"
   "void appendInside ( const QWebElement & )"
   "void appendOutside ( const QString & )"
   "void appendOutside ( const QWebElement & )"
   "QString attribute ( const QString & , const QString & = QString() ) const"
   "QString attributeNS ( const QString & , const QString & , const QString & = QString() ) const"
   "QStringList attributeNames ( const QString & = QString() ) const"
   "QStringList classes () const"
   "QWebElement clone () const"
   "QWebElement document () const"
   "void encloseContentsWith ( const QWebElement & )"
   "void encloseContentsWith ( const QString & )"
   "void encloseWith ( const QString & )"
   "void encloseWith ( const QWebElement & )"
   "QVariant evaluateJavaScript ( const QString & )"
   "QWebElementCollection findAll ( const QString & ) const"
   "QWebElement findFirst ( const QString & ) const"
   "QWebElement firstChild () const"
   "QRect geometry () const"
   "bool hasAttribute ( const QString & ) const"
   "bool hasAttributeNS ( const QString & , const QString & ) const"
   "bool hasAttributes () const"
   "bool hasClass ( const QString & ) const"
   "bool hasFocus () const"
   "bool isNull () const"
   "QWebElement lastChild () const"
   "QString localName () const"
   "QString namespaceUri () const"
   "QWebElement nextSibling () const"
   "QWebElement parent () const"
   "QString prefix () const"
   "void prependInside ( const QString & )"
   "void prependInside ( const QWebElement & )"
   "void prependOutside ( const QString & )"
   "void prependOutside ( const QWebElement & )"
   "QWebElement previousSibling () const"
   "void removeAllChildren ()"
   "void removeAttribute ( const QString & )"
   "void removeAttributeNS ( const QString & , const QString & )"
   "void removeClass ( const QString & )"
   "void removeFromDocument ()"
   "void render ( QPainter * )"
   "void render ( QPainter * , const QRect & )"
   "void replace ( const QString & )"
   "void replace ( const QWebElement & )"
   "void setAttribute ( const QString & , const QString & )"
   "void setAttributeNS ( const QString & , const QString & , const QString & )"
   "void setFocus ()"
   "void setInnerXml ( const QString & )"
   "void setOuterXml ( const QString & )"
   "void setPlainText ( const QString & )"
   "void setStyleProperty ( const QString & , const QString & )"
   "QString styleProperty ( const QString & , StyleResolveStrategy ) const"
   "QString tagName () const"
   "QWebElement & takeFromDocument ()"
   "QString toInnerXml () const"
   "QString toOuterXml () const"
   "QString toPlainText () const"
   "void toggleClass ( const QString & )"
   "QWebFrame * webFrame () const")
  (("QWebElementCollection" . NIL)
   "new QWebElementCollection ()"
   "new QWebElementCollection ( const QWebElement & , const QString & )"
   "new QWebElementCollection ( const QWebElementCollection & )"
   "void append ( const QWebElementCollection & )"
   "QWebElement at ( int ) const"
   "int count () const"
   "QWebElement first () const"
   "QWebElement last () const"
   "QList<QWebElement> toList () const")
  (("QWebHistory" . NIL)
   "void back ()"
   "QWebHistoryItem backItem () const"
   "QList<QWebHistoryItem> backItems ( int ) const"
   "bool canGoBack () const"
   "bool canGoForward () const"
   "void clear ()"
   "int count () const"
   "QWebHistoryItem currentItem () const"
   "int currentItemIndex () const"
   "void forward ()"
   "QWebHistoryItem forwardItem () const"
   "QList<QWebHistoryItem> forwardItems ( int ) const"
   "void goToItem ( const QWebHistoryItem & )"
   "QWebHistoryItem itemAt ( int ) const"
   "QList<QWebHistoryItem> items () const"
   "int maximumItemCount () const"
   "void setMaximumItemCount ( int )")
  (("QWebHistoryItem" . NIL)
   "new QWebHistoryItem ( const QWebHistoryItem & )"
   "QIcon icon () const"
   "bool isValid () const"
   "QDateTime lastVisited () const"
   "QUrl originalUrl () const"
   "void setUserData ( const QVariant & )"
   "QString title () const"
   "QUrl url () const"
   "QVariant userData () const")
  (("QWebHitTestResult" . NIL)
   "new QWebHitTestResult ()"
   "new QWebHitTestResult ( const QWebHitTestResult & )"
   "QString alternateText () const"
   "QRect boundingRect () const"
   "QWebElement element () const"
   "QWebElement enclosingBlockElement () const"
   "QWebFrame * frame () const"
   "QUrl imageUrl () const"
   "bool isContentEditable () const"
   "bool isContentSelected () const"
   "bool isNull () const"
   "QWebElement linkElement () const"
   "QWebFrame * linkTargetFrame () const"
   "QString linkText () const"
   "QString linkTitleString () const"
   "QUrl linkUrl () const"
   "QUrl mediaUrl () const"
   "QPixmap pixmap () const"
   "QPoint pos () const"
   "QString title () const")
  (("QWebSecurityOrigin" . NIL)
   "new QWebSecurityOrigin ( const QUrl & )"
   "new QWebSecurityOrigin ( const QWebSecurityOrigin & )"
   "void addAccessWhitelistEntry ( const QString & , const QString & , SubdomainSetting )"
   "qint64 databaseQuota () const"
   "qint64 databaseUsage () const"
   "QList<QWebDatabase> databases () const"
   "QString host () const"
   "int port () const"
   "void removeAccessWhitelistEntry ( const QString & , const QString & , SubdomainSetting )"
   "QString scheme () const"
   "void setApplicationCacheQuota ( qint64 )"
   "void setDatabaseQuota ( qint64 )"
   "static void addLocalScheme ( const QString & )"
   "static QList<QWebSecurityOrigin> allOrigins ()"
   "static QStringList localSchemes ()"
   "static void removeLocalScheme ( const QString & )")
  (("QWebSettings" . NIL)
   "QString cssMediaType () const"
   "QString defaultTextEncoding () const"
   "QString fontFamily ( FontFamily ) const"
   "int fontSize ( FontSize ) const"
   "QString localStoragePath () const"
   "void resetAttribute ( WebAttribute )"
   "void resetFontFamily ( FontFamily )"
   "void resetFontSize ( FontSize )"
   "void setAttribute ( WebAttribute , bool )"
   "void setCSSMediaType ( const QString & )"
   "void setDefaultTextEncoding ( const QString & )"
   "void setFontFamily ( FontFamily , const QString & )"
   "void setFontSize ( FontSize , int )"
   "void setLocalStoragePath ( const QString & )"
   "void setThirdPartyCookiePolicy ( ThirdPartyCookiePolicy )"
   "void setUserStyleSheetUrl ( const QUrl & )"
   "bool testAttribute ( WebAttribute ) const"
   "QWebSettings::ThirdPartyCookiePolicy thirdPartyCookiePolicy () const"
   "QUrl userStyleSheetUrl () const"
   "static void clearIconDatabase ()"
   "static void clearMemoryCaches ()"
   "static void enablePersistentStorage ( const QString & = QString() )"
   "static QWebSettings * globalSettings ()"
   "static QString iconDatabasePath ()"
   "static QIcon iconForUrl ( const QUrl & )"
   "static int maximumPagesInCache ()"
   "static qint64 offlineStorageDefaultQuota ()"
   "static QString offlineStoragePath ()"
   "static QString offlineWebApplicationCachePath ()"
   "static qint64 offlineWebApplicationCacheQuota ()"
   "static void setIconDatabasePath ( const QString & )"
   "static void setMaximumPagesInCache ( int )"
   "static void setObjectCacheCapacities ( int , int , int )"
   "static void setOfflineStorageDefaultQuota ( qint64 )"
   "static void setOfflineStoragePath ( const QString & )"
   "static void setOfflineWebApplicationCachePath ( const QString & )"
   "static void setOfflineWebApplicationCacheQuota ( qint64 )"
   "static void setWebGraphic ( WebGraphic , const QPixmap & )"
   "static QPixmap webGraphic ( WebGraphic )")
  (("QWhatsThis" . NIL)
   "static QAction * createAction ( QObject * = 0 )"
   "static void enterWhatsThisMode ()"
   "static void hideText ()"
   "static bool inWhatsThisMode ()"
   "static void leaveWhatsThisMode ()"
   "static void showText ( const QPoint & , const QString & , QWidget * = 0 )")
  (("QWhatsThisClickedEvent" . "QEvent")
   "new QWhatsThisClickedEvent ( const QString & )"
   "QString href () const")
  (("QWheelEvent" . "QInputEvent")
   "new QWheelEvent ( const QPointF & , const QPointF & , QPoint , QPoint , int , Qt::Orientation , Qt::MouseButtons , Qt::KeyboardModifiers )"
   "new QWheelEvent ( const QPointF & , const QPointF & , QPoint , QPoint , int , Qt::Orientation , Qt::MouseButtons , Qt::KeyboardModifiers , Qt::ScrollPhase )"
   "new QWheelEvent ( const QPointF & , const QPointF & , QPoint , QPoint , int , Qt::Orientation , Qt::MouseButtons , Qt::KeyboardModifiers , Qt::ScrollPhase , Qt::MouseEventSource )"
   "QPoint angleDelta () const"
   "Qt::MouseButtons buttons () const"
   "QPoint globalPos () const"
   "const QPointF & globalPosF () const"
   "int globalX () const"
   "int globalY () const"
   "Qt::ScrollPhase phase () const"
   "QPoint pixelDelta () const"
   "QPoint pos () const"
   "const QPointF & posF () const"
   "Qt::MouseEventSource source () const"
   "int x () const"
   "int y () const")
  (("QWidgetItem" . "QLayoutItem")
   "new QWidgetItem ( QWidget * )"
   "virtual QSizePolicy::ControlTypes controlTypes () const"
   "virtual Qt::Orientations expandingDirections () const"
   "virtual QRect geometry () const"
   "virtual bool hasHeightForWidth () const"
   "virtual int heightForWidth ( int ) const"
   "virtual bool isEmpty () const"
   "virtual QSize maximumSize () const"
   "virtual QSize minimumSize () const"
   "virtual void setGeometry ( const QRect & )"
   "virtual QSize sizeHint () const"
   "virtual QWidget * widget ()")
  (("QWindowStateChangeEvent" . "QEvent")
   "Qt::WindowStates oldState () const")
  (("QWriteLocker" . NIL)
   "new QWriteLocker ( QReadWriteLock * )"
   "QReadWriteLock * readWriteLock () const"
   "void relock ()"
   "void unlock ()")
))
